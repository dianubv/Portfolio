{"remainingRequest":"/home/diane/Documents/MDT/Portfolio/node_modules/babel-loader/lib/index.js??ref--2-1!/home/diane/Documents/MDT/Portfolio/.nuxt/utils.js","dependencies":[{"path":"/home/diane/Documents/MDT/Portfolio/.nuxt/utils.js","mtime":1697967626238},{"path":"/home/diane/Documents/MDT/Portfolio/node_modules/cache-loader/dist/cjs.js","mtime":1696602851329},{"path":"/home/diane/Documents/MDT/Portfolio/node_modules/babel-loader/lib/index.js","mtime":1696602851385}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Vue","isSamePath","_isSamePath","joinURL","normalizeURL","withQuery","withoutTrailingSlash","process","client","window","onNuxtReadyCbs","onNuxtReady","cb","push","createGetCounter","counterObject","defaultKey","getCounter","id","undefined","empty","globalHandleError","error","config","errorHandler","interopDefault","promise","then","m","default","hasFetch","vm","$options","fetch","length","purifyData","data","env","NODE_ENV","Object","entries","filter","key","value","valid","Function","Promise","console","warn","reduce","obj","getChildrenComponentInstancesUsingFetch","instances","children","$children","child","$fetch","applyAsyncData","Component","asyncData","options","__hasNuxtData","ComponentData","_originDataFn","call","$ssrContext","cid","_Ctor","sanitizeComponent","extend","extendOptions","name","__file","getMatchedComponents","route","matches","prop","Array","prototype","concat","apply","matched","map","index","keys","getMatchedComponentsInstances","flatMapComponents","fn","components","promises","resolveRouteComponents","all","instance","match","getRouteData","meta","setContext","app","context","isStatic","static","isDev","isHMR","payload","base","router","ssrContext","redirect","status","path","query","_redirected","pathType","resolve","fullPath","test","next","server","location","replace","Error","beforeNuxtRender","beforeRenderFns","nuxtState","__NUXT__","currentRouteData","fromRouteData","from","_errored","params","middlewareSeries","appContext","promisify","slice","err","getLocation","mode","hash","decodeURI","pathname","startsWith","search","compile","str","tokensToFunction","parse","getQueryDiff","toQuery","fromQuery","diff","queries","k","String","normalizeError","message","JSON","stringify","e","constructor","statusCode","response","PATH_REGEXP","RegExp","join","tokens","defaultDelimiter","delimiter","res","exec","escaped","offset","prefix","capture","group","modifier","asterisk","partial","repeat","optional","pattern","Boolean","escapeGroup","escapeString","substr","encodeURIComponentPretty","slashAllowed","re","encodeURI","c","charCodeAt","toString","toUpperCase","encodeAsterisk","i","flags","opts","encode","pretty","encodeURIComponent","token","segment","TypeError","isArray","j","sensitive","addLifecycleHook","hook","includes","urlJoin","stripTrailingSlash","setScrollRestoration","newVal","history","scrollRestoration"],"sources":["/home/diane/Documents/MDT/Portfolio/.nuxt/utils.js"],"sourcesContent":["import Vue from 'vue'\nimport { isSamePath as _isSamePath, joinURL, normalizeURL, withQuery, withoutTrailingSlash } from 'ufo'\n\n// window.{{globals.loadedCallback}} hook\n// Useful for jsdom testing or plugins (https://github.com/tmpvar/jsdom#dealing-with-asynchronous-script-loading)\nif (process.client) {\n  window.onNuxtReadyCbs = []\n  window.onNuxtReady = (cb) => {\n    window.onNuxtReadyCbs.push(cb)\n  }\n}\n\nexport function createGetCounter (counterObject, defaultKey = '') {\n  return function getCounter (id = defaultKey) {\n    if (counterObject[id] === undefined) {\n      counterObject[id] = 0\n    }\n    return counterObject[id]++\n  }\n}\n\nexport function empty () {}\n\nexport function globalHandleError (error) {\n  if (Vue.config.errorHandler) {\n    Vue.config.errorHandler(error)\n  }\n}\n\nexport function interopDefault (promise) {\n  return promise.then(m => m.default || m)\n}\n\nexport function hasFetch(vm) {\n  return vm.$options && typeof vm.$options.fetch === 'function' && !vm.$options.fetch.length\n}\nexport function purifyData(data) {\n  if (process.env.NODE_ENV === 'production') {\n    return data\n  }\n\n  return Object.entries(data).filter(\n    ([key, value]) => {\n      const valid = !(value instanceof Function) && !(value instanceof Promise)\n      if (!valid) {\n        console.warn(`${key} is not able to be stringified. This will break in a production environment.`)\n      }\n      return valid\n    }\n    ).reduce((obj, [key, value]) => {\n      obj[key] = value\n      return obj\n    }, {})\n}\nexport function getChildrenComponentInstancesUsingFetch(vm, instances = []) {\n  const children = vm.$children || []\n  for (const child of children) {\n    if (child.$fetch) {\n      instances.push(child)\n      continue; // Don't get the children since it will reload the template\n    }\n    if (child.$children) {\n      getChildrenComponentInstancesUsingFetch(child, instances)\n    }\n  }\n  return instances\n}\n\nexport function applyAsyncData (Component, asyncData) {\n  if (\n    // For SSR, we once all this function without second param to just apply asyncData\n    // Prevent doing this for each SSR request\n    !asyncData && Component.options.__hasNuxtData\n  ) {\n    return\n  }\n\n  const ComponentData = Component.options._originDataFn || Component.options.data || function () { return {} }\n  Component.options._originDataFn = ComponentData\n\n  Component.options.data = function () {\n    const data = ComponentData.call(this, this)\n    if (this.$ssrContext) {\n      asyncData = this.$ssrContext.asyncData[Component.cid]\n    }\n    return { ...data, ...asyncData }\n  }\n\n  Component.options.__hasNuxtData = true\n\n  if (Component._Ctor && Component._Ctor.options) {\n    Component._Ctor.options.data = Component.options.data\n  }\n}\n\nexport function sanitizeComponent (Component) {\n  // If Component already sanitized\n  if (Component.options && Component._Ctor === Component) {\n    return Component\n  }\n  if (!Component.options) {\n    Component = Vue.extend(Component) // fix issue #6\n    Component._Ctor = Component\n  } else {\n    Component._Ctor = Component\n    Component.extendOptions = Component.options\n  }\n  // If no component name defined, set file path as name, (also fixes #5703)\n  if (!Component.options.name && Component.options.__file) {\n    Component.options.name = Component.options.__file\n  }\n  return Component\n}\n\nexport function getMatchedComponents (route, matches = false, prop = 'components') {\n  return Array.prototype.concat.apply([], route.matched.map((m, index) => {\n    return Object.keys(m[prop]).map((key) => {\n      matches && matches.push(index)\n      return m[prop][key]\n    })\n  }))\n}\n\nexport function getMatchedComponentsInstances (route, matches = false) {\n  return getMatchedComponents(route, matches, 'instances')\n}\n\nexport function flatMapComponents (route, fn) {\n  return Array.prototype.concat.apply([], route.matched.map((m, index) => {\n    return Object.keys(m.components).reduce((promises, key) => {\n      if (m.components[key]) {\n        promises.push(fn(m.components[key], m.instances[key], m, key, index))\n      } else {\n        delete m.components[key]\n      }\n      return promises\n    }, [])\n  }))\n}\n\nexport function resolveRouteComponents (route, fn) {\n  return Promise.all(\n    flatMapComponents(route, async (Component, instance, match, key) => {\n      // If component is a function, resolve it\n      if (typeof Component === 'function' && !Component.options) {\n        Component = await Component()\n      }\n      match.components[key] = Component = sanitizeComponent(Component)\n      return typeof fn === 'function' ? fn(Component, instance, match, key) : Component\n    })\n  )\n}\n\nexport async function getRouteData (route) {\n  if (!route) {\n    return\n  }\n  // Make sure the components are resolved (code-splitting)\n  await resolveRouteComponents(route)\n  // Send back a copy of route with meta based on Component definition\n  return {\n    ...route,\n    meta: getMatchedComponents(route).map((Component, index) => {\n      return { ...Component.options.meta, ...(route.matched[index] || {}).meta }\n    })\n  }\n}\n\nexport async function setContext (app, context) {\n  // If context not defined, create it\n  if (!app.context) {\n    app.context = {\n      isStatic: process.static,\n      isDev: false,\n      isHMR: false,\n      app,\n\n      payload: context.payload,\n      error: context.error,\n      base: app.router.options.base,\n      env: {}\n    }\n    // Only set once\n\n    if (context.ssrContext) {\n      app.context.ssrContext = context.ssrContext\n    }\n    app.context.redirect = (status, path, query) => {\n      if (!status) {\n        return\n      }\n      app.context._redirected = true\n      // if only 1 or 2 arguments: redirect('/') or redirect('/', { foo: 'bar' })\n      let pathType = typeof path\n      if (typeof status !== 'number' && (pathType === 'undefined' || pathType === 'object')) {\n        query = path || {}\n        path = status\n        pathType = typeof path\n        status = 302\n      }\n      if (pathType === 'object') {\n        path = app.router.resolve(path).route.fullPath\n      }\n      // \"/absolute/route\", \"./relative/route\" or \"../relative/route\"\n      if (/(^[.]{1,2}\\/)|(^\\/(?!\\/))/.test(path)) {\n        app.context.next({\n          path,\n          query,\n          status\n        })\n      } else {\n        path = withQuery(path, query)\n        if (process.server) {\n          app.context.next({\n            path,\n            status\n          })\n        }\n        if (process.client) {\n          // https://developer.mozilla.org/en-US/docs/Web/API/Location/replace\n          window.location.replace(path)\n\n          // Throw a redirect error\n          throw new Error('ERR_REDIRECT')\n        }\n      }\n    }\n    if (process.server) {\n      app.context.beforeNuxtRender = fn => context.beforeRenderFns.push(fn)\n    }\n    if (process.client) {\n      app.context.nuxtState = window.__NUXT__\n    }\n  }\n\n  // Dynamic keys\n  const [currentRouteData, fromRouteData] = await Promise.all([\n    getRouteData(context.route),\n    getRouteData(context.from)\n  ])\n\n  if (context.route) {\n    app.context.route = currentRouteData\n  }\n\n  if (context.from) {\n    app.context.from = fromRouteData\n  }\n\n  app.context.next = context.next\n  app.context._redirected = false\n  app.context._errored = false\n  app.context.isHMR = false\n  app.context.params = app.context.route.params || {}\n  app.context.query = app.context.route.query || {}\n}\n\nexport function middlewareSeries (promises, appContext) {\n  if (!promises.length || appContext._redirected || appContext._errored) {\n    return Promise.resolve()\n  }\n  return promisify(promises[0], appContext)\n    .then(() => {\n      return middlewareSeries(promises.slice(1), appContext)\n    })\n}\n\nexport function promisify (fn, context) {\n  let promise\n  if (fn.length === 2) {\n    // fn(context, callback)\n    promise = new Promise((resolve) => {\n      fn(context, function (err, data) {\n        if (err) {\n          context.error(err)\n        }\n        data = data || {}\n        resolve(data)\n      })\n    })\n  } else {\n    promise = fn(context)\n  }\n\n  if (promise && promise instanceof Promise && typeof promise.then === 'function') {\n    return promise\n  }\n  return Promise.resolve(promise)\n}\n\n// Imported from vue-router\nexport function getLocation (base, mode) {\n  if (mode === 'hash') {\n    return window.location.hash.replace(/^#\\//, '')\n  }\n\n  base = decodeURI(base).slice(0, -1) // consideration is base is normalized with trailing slash\n  let path = decodeURI(window.location.pathname)\n\n  if (base && path.startsWith(base)) {\n    path = path.slice(base.length)\n  }\n\n  const fullPath = (path || '/') + window.location.search + window.location.hash\n\n  return normalizeURL(fullPath)\n}\n\n// Imported from path-to-regexp\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nexport function compile (str, options) {\n  return tokensToFunction(parse(str, options), options)\n}\n\nexport function getQueryDiff (toQuery, fromQuery) {\n  const diff = {}\n  const queries = { ...toQuery, ...fromQuery }\n  for (const k in queries) {\n    if (String(toQuery[k]) !== String(fromQuery[k])) {\n      diff[k] = true\n    }\n  }\n  return diff\n}\n\nexport function normalizeError (err) {\n  let message\n  if (!(err.message || typeof err === 'string')) {\n    try {\n      message = JSON.stringify(err, null, 2)\n    } catch (e) {\n      message = `[${err.constructor.name}]`\n    }\n  } else {\n    message = err.message || err\n  }\n  return {\n    ...err,\n    message,\n    statusCode: (err.statusCode || err.status || (err.response && err.response.status) || 500)\n  }\n}\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nconst PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  const tokens = []\n  let key = 0\n  let index = 0\n  let path = ''\n  const defaultDelimiter = (options && options.delimiter) || '/'\n  let res\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    const m = res[0]\n    const escaped = res[1]\n    const offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      continue\n    }\n\n    const next = str[index]\n    const prefix = res[2]\n    const name = res[3]\n    const capture = res[4]\n    const group = res[5]\n    const modifier = res[6]\n    const asterisk = res[7]\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n    }\n\n    const partial = prefix != null && next != null && next !== prefix\n    const repeat = modifier === '+' || modifier === '*'\n    const optional = modifier === '?' || modifier === '*'\n    const delimiter = res[2] || defaultDelimiter\n    const pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter,\n      optional,\n      repeat,\n      partial,\n      asterisk: Boolean(asterisk),\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    })\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index)\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path)\n  }\n\n  return tokens\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str, slashAllowed) {\n  const re = slashAllowed ? /[?#]/g : /[/?#]/g\n  return encodeURI(str).replace(re, (c) => {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURIComponentPretty(str, true)\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens, options) {\n  // Compile all the tokens into regexps.\n  const matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (let i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))\n    }\n  }\n\n  return function (obj, opts) {\n    let path = ''\n    const data = obj || {}\n    const options = opts || {}\n    const encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n\n        continue\n      }\n\n      const value = data[token.name || 'pathMatch']\n      let segment\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value)\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment\n    }\n\n    return path\n  }\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\nexport function addLifecycleHook(vm, hook, fn) {\n  if (!vm.$options[hook]) {\n    vm.$options[hook] = []\n  }\n  if (!vm.$options[hook].includes(fn)) {\n    vm.$options[hook].push(fn)\n  }\n}\n\nexport const urlJoin = joinURL\n\nexport const stripTrailingSlash = withoutTrailingSlash\n\nexport const isSamePath = _isSamePath\n\nexport function setScrollRestoration (newVal) {\n  try {\n    window.history.scrollRestoration = newVal;\n  } catch(e) {}\n}\n"],"mappings":"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"}]}
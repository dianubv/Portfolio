{"remainingRequest":"/home/diane/Documents/MDT/Portfolio/node_modules/esbuild-loader/dist/index.js??ref--2-1!/home/diane/Documents/MDT/Portfolio/node_modules/three/build/three.js","dependencies":[{"path":"/home/diane/Documents/MDT/Portfolio/node_modules/three/build/three.js","mtime":1696601676499},{"path":"/home/diane/Documents/MDT/Portfolio/node_modules/cache-loader/dist/cjs.js","mtime":1696602851329},{"path":"/home/diane/Documents/MDT/Portfolio/node_modules/esbuild-loader/dist/index.js","mtime":1696601673236}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/diane/Documents/MDT/Portfolio/node_modules/three/build/three.js"],"sourcesContent":["/**\n * @license\n * Copyright 2010-2022 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.THREE = {}));\n})(this, (function (exports) { 'use strict';\n\n\tconst REVISION = '137';\n\tconst MOUSE = {\n\t\tLEFT: 0,\n\t\tMIDDLE: 1,\n\t\tRIGHT: 2,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2\n\t};\n\tconst TOUCH = {\n\t\tROTATE: 0,\n\t\tPAN: 1,\n\t\tDOLLY_PAN: 2,\n\t\tDOLLY_ROTATE: 3\n\t};\n\tconst CullFaceNone = 0;\n\tconst CullFaceBack = 1;\n\tconst CullFaceFront = 2;\n\tconst CullFaceFrontBack = 3;\n\tconst BasicShadowMap = 0;\n\tconst PCFShadowMap = 1;\n\tconst PCFSoftShadowMap = 2;\n\tconst VSMShadowMap = 3;\n\tconst FrontSide = 0;\n\tconst BackSide = 1;\n\tconst DoubleSide = 2;\n\tconst FlatShading = 1;\n\tconst SmoothShading = 2;\n\tconst NoBlending = 0;\n\tconst NormalBlending = 1;\n\tconst AdditiveBlending = 2;\n\tconst SubtractiveBlending = 3;\n\tconst MultiplyBlending = 4;\n\tconst CustomBlending = 5;\n\tconst AddEquation = 100;\n\tconst SubtractEquation = 101;\n\tconst ReverseSubtractEquation = 102;\n\tconst MinEquation = 103;\n\tconst MaxEquation = 104;\n\tconst ZeroFactor = 200;\n\tconst OneFactor = 201;\n\tconst SrcColorFactor = 202;\n\tconst OneMinusSrcColorFactor = 203;\n\tconst SrcAlphaFactor = 204;\n\tconst OneMinusSrcAlphaFactor = 205;\n\tconst DstAlphaFactor = 206;\n\tconst OneMinusDstAlphaFactor = 207;\n\tconst DstColorFactor = 208;\n\tconst OneMinusDstColorFactor = 209;\n\tconst SrcAlphaSaturateFactor = 210;\n\tconst NeverDepth = 0;\n\tconst AlwaysDepth = 1;\n\tconst LessDepth = 2;\n\tconst LessEqualDepth = 3;\n\tconst EqualDepth = 4;\n\tconst GreaterEqualDepth = 5;\n\tconst GreaterDepth = 6;\n\tconst NotEqualDepth = 7;\n\tconst MultiplyOperation = 0;\n\tconst MixOperation = 1;\n\tconst AddOperation = 2;\n\tconst NoToneMapping = 0;\n\tconst LinearToneMapping = 1;\n\tconst ReinhardToneMapping = 2;\n\tconst CineonToneMapping = 3;\n\tconst ACESFilmicToneMapping = 4;\n\tconst CustomToneMapping = 5;\n\tconst UVMapping = 300;\n\tconst CubeReflectionMapping = 301;\n\tconst CubeRefractionMapping = 302;\n\tconst EquirectangularReflectionMapping = 303;\n\tconst EquirectangularRefractionMapping = 304;\n\tconst CubeUVReflectionMapping = 306;\n\tconst CubeUVRefractionMapping = 307;\n\tconst RepeatWrapping = 1000;\n\tconst ClampToEdgeWrapping = 1001;\n\tconst MirroredRepeatWrapping = 1002;\n\tconst NearestFilter = 1003;\n\tconst NearestMipmapNearestFilter = 1004;\n\tconst NearestMipMapNearestFilter = 1004;\n\tconst NearestMipmapLinearFilter = 1005;\n\tconst NearestMipMapLinearFilter = 1005;\n\tconst LinearFilter = 1006;\n\tconst LinearMipmapNearestFilter = 1007;\n\tconst LinearMipMapNearestFilter = 1007;\n\tconst LinearMipmapLinearFilter = 1008;\n\tconst LinearMipMapLinearFilter = 1008;\n\tconst UnsignedByteType = 1009;\n\tconst ByteType = 1010;\n\tconst ShortType = 1011;\n\tconst UnsignedShortType = 1012;\n\tconst IntType = 1013;\n\tconst UnsignedIntType = 1014;\n\tconst FloatType = 1015;\n\tconst HalfFloatType = 1016;\n\tconst UnsignedShort4444Type = 1017;\n\tconst UnsignedShort5551Type = 1018;\n\tconst UnsignedInt248Type = 1020;\n\tconst AlphaFormat = 1021;\n\tconst RGBFormat = 1022;\n\tconst RGBAFormat = 1023;\n\tconst LuminanceFormat = 1024;\n\tconst LuminanceAlphaFormat = 1025;\n\tconst DepthFormat = 1026;\n\tconst DepthStencilFormat = 1027;\n\tconst RedFormat = 1028;\n\tconst RedIntegerFormat = 1029;\n\tconst RGFormat = 1030;\n\tconst RGIntegerFormat = 1031;\n\tconst RGBAIntegerFormat = 1033;\n\tconst RGB_S3TC_DXT1_Format = 33776;\n\tconst RGBA_S3TC_DXT1_Format = 33777;\n\tconst RGBA_S3TC_DXT3_Format = 33778;\n\tconst RGBA_S3TC_DXT5_Format = 33779;\n\tconst RGB_PVRTC_4BPPV1_Format = 35840;\n\tconst RGB_PVRTC_2BPPV1_Format = 35841;\n\tconst RGBA_PVRTC_4BPPV1_Format = 35842;\n\tconst RGBA_PVRTC_2BPPV1_Format = 35843;\n\tconst RGB_ETC1_Format = 36196;\n\tconst RGB_ETC2_Format = 37492;\n\tconst RGBA_ETC2_EAC_Format = 37496;\n\tconst RGBA_ASTC_4x4_Format = 37808;\n\tconst RGBA_ASTC_5x4_Format = 37809;\n\tconst RGBA_ASTC_5x5_Format = 37810;\n\tconst RGBA_ASTC_6x5_Format = 37811;\n\tconst RGBA_ASTC_6x6_Format = 37812;\n\tconst RGBA_ASTC_8x5_Format = 37813;\n\tconst RGBA_ASTC_8x6_Format = 37814;\n\tconst RGBA_ASTC_8x8_Format = 37815;\n\tconst RGBA_ASTC_10x5_Format = 37816;\n\tconst RGBA_ASTC_10x6_Format = 37817;\n\tconst RGBA_ASTC_10x8_Format = 37818;\n\tconst RGBA_ASTC_10x10_Format = 37819;\n\tconst RGBA_ASTC_12x10_Format = 37820;\n\tconst RGBA_ASTC_12x12_Format = 37821;\n\tconst RGBA_BPTC_Format = 36492;\n\tconst LoopOnce = 2200;\n\tconst LoopRepeat = 2201;\n\tconst LoopPingPong = 2202;\n\tconst InterpolateDiscrete = 2300;\n\tconst InterpolateLinear = 2301;\n\tconst InterpolateSmooth = 2302;\n\tconst ZeroCurvatureEnding = 2400;\n\tconst ZeroSlopeEnding = 2401;\n\tconst WrapAroundEnding = 2402;\n\tconst NormalAnimationBlendMode = 2500;\n\tconst AdditiveAnimationBlendMode = 2501;\n\tconst TrianglesDrawMode = 0;\n\tconst TriangleStripDrawMode = 1;\n\tconst TriangleFanDrawMode = 2;\n\tconst LinearEncoding = 3000;\n\tconst sRGBEncoding = 3001;\n\tconst BasicDepthPacking = 3200;\n\tconst RGBADepthPacking = 3201;\n\tconst TangentSpaceNormalMap = 0;\n\tconst ObjectSpaceNormalMap = 1;\n\tconst ZeroStencilOp = 0;\n\tconst KeepStencilOp = 7680;\n\tconst ReplaceStencilOp = 7681;\n\tconst IncrementStencilOp = 7682;\n\tconst DecrementStencilOp = 7683;\n\tconst IncrementWrapStencilOp = 34055;\n\tconst DecrementWrapStencilOp = 34056;\n\tconst InvertStencilOp = 5386;\n\tconst NeverStencilFunc = 512;\n\tconst LessStencilFunc = 513;\n\tconst EqualStencilFunc = 514;\n\tconst LessEqualStencilFunc = 515;\n\tconst GreaterStencilFunc = 516;\n\tconst NotEqualStencilFunc = 517;\n\tconst GreaterEqualStencilFunc = 518;\n\tconst AlwaysStencilFunc = 519;\n\tconst StaticDrawUsage = 35044;\n\tconst DynamicDrawUsage = 35048;\n\tconst StreamDrawUsage = 35040;\n\tconst StaticReadUsage = 35045;\n\tconst DynamicReadUsage = 35049;\n\tconst StreamReadUsage = 35041;\n\tconst StaticCopyUsage = 35046;\n\tconst DynamicCopyUsage = 35050;\n\tconst StreamCopyUsage = 35042;\n\tconst GLSL1 = '100';\n\tconst GLSL3 = '300 es';\n\tconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\tclass EventDispatcher {\n\t\taddEventListener(type, listener) {\n\t\t\tif (this._listeners === undefined) this._listeners = {};\n\t\t\tconst listeners = this._listeners;\n\n\t\t\tif (listeners[type] === undefined) {\n\t\t\t\tlisteners[type] = [];\n\t\t\t}\n\n\t\t\tif (listeners[type].indexOf(listener) === -1) {\n\t\t\t\tlisteners[type].push(listener);\n\t\t\t}\n\t\t}\n\n\t\thasEventListener(type, listener) {\n\t\t\tif (this._listeners === undefined) return false;\n\t\t\tconst listeners = this._listeners;\n\t\t\treturn listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n\t\t}\n\n\t\tremoveEventListener(type, listener) {\n\t\t\tif (this._listeners === undefined) return;\n\t\t\tconst listeners = this._listeners;\n\t\t\tconst listenerArray = listeners[type];\n\n\t\t\tif (listenerArray !== undefined) {\n\t\t\t\tconst index = listenerArray.indexOf(listener);\n\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tlistenerArray.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdispatchEvent(event) {\n\t\t\tif (this._listeners === undefined) return;\n\t\t\tconst listeners = this._listeners;\n\t\t\tconst listenerArray = listeners[event.type];\n\n\t\t\tif (listenerArray !== undefined) {\n\t\t\t\tevent.target = this; // Make a copy, in case listeners are removed while iterating.\n\n\t\t\t\tconst array = listenerArray.slice(0);\n\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i++) {\n\t\t\t\t\tarray[i].call(this, event);\n\t\t\t\t}\n\n\t\t\t\tevent.target = null;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst _lut = [];\n\n\tfor (let i = 0; i < 256; i++) {\n\t\t_lut[i] = (i < 16 ? '0' : '') + i.toString(16);\n\t}\n\n\tlet _seed = 1234567;\n\tconst DEG2RAD = Math.PI / 180;\n\tconst RAD2DEG = 180 / Math.PI; // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\tfunction generateUUID() {\n\t\tconst d0 = Math.random() * 0xffffffff | 0;\n\t\tconst d1 = Math.random() * 0xffffffff | 0;\n\t\tconst d2 = Math.random() * 0xffffffff | 0;\n\t\tconst d3 = Math.random() * 0xffffffff | 0;\n\t\tconst uuid = _lut[d0 & 0xff] + _lut[d0 >> 8 & 0xff] + _lut[d0 >> 16 & 0xff] + _lut[d0 >> 24 & 0xff] + '-' + _lut[d1 & 0xff] + _lut[d1 >> 8 & 0xff] + '-' + _lut[d1 >> 16 & 0x0f | 0x40] + _lut[d1 >> 24 & 0xff] + '-' + _lut[d2 & 0x3f | 0x80] + _lut[d2 >> 8 & 0xff] + '-' + _lut[d2 >> 16 & 0xff] + _lut[d2 >> 24 & 0xff] + _lut[d3 & 0xff] + _lut[d3 >> 8 & 0xff] + _lut[d3 >> 16 & 0xff] + _lut[d3 >> 24 & 0xff]; // .toUpperCase() here flattens concatenated strings to save heap memory space.\n\n\t\treturn uuid.toUpperCase();\n\t}\n\n\tfunction clamp(value, min, max) {\n\t\treturn Math.max(min, Math.min(max, value));\n\t} // compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\n\tfunction euclideanModulo(n, m) {\n\t\treturn (n % m + m) % m;\n\t} // Linear mapping from range <a1, a2> to range <b1, b2>\n\n\n\tfunction mapLinear(x, a1, a2, b1, b2) {\n\t\treturn b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n\t} // https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\n\n\n\tfunction inverseLerp(x, y, value) {\n\t\tif (x !== y) {\n\t\t\treturn (value - x) / (y - x);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t} // https://en.wikipedia.org/wiki/Linear_interpolation\n\n\n\tfunction lerp(x, y, t) {\n\t\treturn (1 - t) * x + t * y;\n\t} // http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\n\n\n\tfunction damp(x, y, lambda, dt) {\n\t\treturn lerp(x, y, 1 - Math.exp(-lambda * dt));\n\t} // https://www.desmos.com/calculator/vcsjnyz7x4\n\n\n\tfunction pingpong(x, length = 1) {\n\t\treturn length - Math.abs(euclideanModulo(x, length * 2) - length);\n\t} // http://en.wikipedia.org/wiki/Smoothstep\n\n\n\tfunction smoothstep(x, min, max) {\n\t\tif (x <= min) return 0;\n\t\tif (x >= max) return 1;\n\t\tx = (x - min) / (max - min);\n\t\treturn x * x * (3 - 2 * x);\n\t}\n\n\tfunction smootherstep(x, min, max) {\n\t\tif (x <= min) return 0;\n\t\tif (x >= max) return 1;\n\t\tx = (x - min) / (max - min);\n\t\treturn x * x * x * (x * (x * 6 - 15) + 10);\n\t} // Random integer from <low, high> interval\n\n\n\tfunction randInt(low, high) {\n\t\treturn low + Math.floor(Math.random() * (high - low + 1));\n\t} // Random float from <low, high> interval\n\n\n\tfunction randFloat(low, high) {\n\t\treturn low + Math.random() * (high - low);\n\t} // Random float from <-range/2, range/2> interval\n\n\n\tfunction randFloatSpread(range) {\n\t\treturn range * (0.5 - Math.random());\n\t} // Deterministic pseudo-random float in the interval [ 0, 1 ]\n\n\n\tfunction seededRandom(s) {\n\t\tif (s !== undefined) _seed = s % 2147483647; // Park-Miller algorithm\n\n\t\t_seed = _seed * 16807 % 2147483647;\n\t\treturn (_seed - 1) / 2147483646;\n\t}\n\n\tfunction degToRad(degrees) {\n\t\treturn degrees * DEG2RAD;\n\t}\n\n\tfunction radToDeg(radians) {\n\t\treturn radians * RAD2DEG;\n\t}\n\n\tfunction isPowerOfTwo(value) {\n\t\treturn (value & value - 1) === 0 && value !== 0;\n\t}\n\n\tfunction ceilPowerOfTwo(value) {\n\t\treturn Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\n\t}\n\n\tfunction floorPowerOfTwo(value) {\n\t\treturn Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\n\t}\n\n\tfunction setQuaternionFromProperEuler(q, a, b, c, order) {\n\t\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\t\t// rotations are applied to the axes in the order specified by 'order'\n\t\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t\t// angles are in radians\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\t\tconst c2 = cos(b / 2);\n\t\tconst s2 = sin(b / 2);\n\t\tconst c13 = cos((a + c) / 2);\n\t\tconst s13 = sin((a + c) / 2);\n\t\tconst c1_3 = cos((a - c) / 2);\n\t\tconst s1_3 = sin((a - c) / 2);\n\t\tconst c3_1 = cos((c - a) / 2);\n\t\tconst s3_1 = sin((c - a) / 2);\n\n\t\tswitch (order) {\n\t\t\tcase 'XYX':\n\t\t\t\tq.set(c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZY':\n\t\t\t\tq.set(s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXZ':\n\t\t\t\tq.set(s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZX':\n\t\t\t\tq.set(c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXY':\n\t\t\t\tq.set(s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYZ':\n\t\t\t\tq.set(s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn('THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order);\n\t\t}\n\t}\n\n\tvar MathUtils = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tDEG2RAD: DEG2RAD,\n\t\tRAD2DEG: RAD2DEG,\n\t\tgenerateUUID: generateUUID,\n\t\tclamp: clamp,\n\t\teuclideanModulo: euclideanModulo,\n\t\tmapLinear: mapLinear,\n\t\tinverseLerp: inverseLerp,\n\t\tlerp: lerp,\n\t\tdamp: damp,\n\t\tpingpong: pingpong,\n\t\tsmoothstep: smoothstep,\n\t\tsmootherstep: smootherstep,\n\t\trandInt: randInt,\n\t\trandFloat: randFloat,\n\t\trandFloatSpread: randFloatSpread,\n\t\tseededRandom: seededRandom,\n\t\tdegToRad: degToRad,\n\t\tradToDeg: radToDeg,\n\t\tisPowerOfTwo: isPowerOfTwo,\n\t\tceilPowerOfTwo: ceilPowerOfTwo,\n\t\tfloorPowerOfTwo: floorPowerOfTwo,\n\t\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler\n\t});\n\n\tclass Vector2 {\n\t\tconstructor(x = 0, y = 0) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tget width() {\n\t\t\treturn this.x;\n\t\t}\n\n\t\tset width(value) {\n\t\t\tthis.x = value;\n\t\t}\n\n\t\tget height() {\n\t\t\treturn this.y;\n\t\t}\n\n\t\tset height(value) {\n\t\t\tthis.y = value;\n\t\t}\n\n\t\tset(x, y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(x) {\n\t\t\tthis.x = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(y) {\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponent(index, value) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.x = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.y = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetComponent(index) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn this.x;\n\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this.y;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.x, this.y);\n\t\t}\n\n\t\tcopy(v) {\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\t\treturn this.addVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\treturn this;\n\t\t}\n\n\t\taddVectors(a, b) {\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledVector(v, s) {\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\t\treturn this.subVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubScalar(s) {\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubVectors(a, b) {\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(v) {\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivide(v) {\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivideScalar(scalar) {\n\t\t\treturn this.multiplyScalar(1 / scalar);\n\t\t}\n\n\t\tapplyMatrix3(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[3] * y + e[6];\n\t\t\tthis.y = e[1] * x + e[4] * y + e[7];\n\t\t\treturn this;\n\t\t}\n\n\t\tmin(v) {\n\t\t\tthis.x = Math.min(this.x, v.x);\n\t\t\tthis.y = Math.min(this.y, v.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tmax(v) {\n\t\t\tthis.x = Math.max(this.x, v.x);\n\t\t\tthis.y = Math.max(this.y, v.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tclamp(min, max) {\n\t\t\t// assumes min < max, componentwise\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampScalar(minVal, maxVal) {\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampLength(min, max) {\n\t\t\tconst length = this.length();\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t\t}\n\n\t\tfloor() {\n\t\t\tthis.x = Math.floor(this.x);\n\t\t\tthis.y = Math.floor(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tceil() {\n\t\t\tthis.x = Math.ceil(this.x);\n\t\t\tthis.y = Math.ceil(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tround() {\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\troundToZero() {\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.x = -this.x;\n\t\t\tthis.y = -this.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this.x * v.x + this.y * v.y;\n\t\t}\n\n\t\tcross(v) {\n\t\t\treturn this.x * v.y - this.y * v.x;\n\t\t}\n\n\t\tlengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t\t}\n\n\t\tmanhattanLength() {\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y);\n\t\t}\n\n\t\tnormalize() {\n\t\t\treturn this.divideScalar(this.length() || 1);\n\t\t}\n\n\t\tangle() {\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\t\t\tconst angle = Math.atan2(-this.y, -this.x) + Math.PI;\n\t\t\treturn angle;\n\t\t}\n\n\t\tdistanceTo(v) {\n\t\t\treturn Math.sqrt(this.distanceToSquared(v));\n\t\t}\n\n\t\tdistanceToSquared(v) {\n\t\t\tconst dx = this.x - v.x,\n\t\t\t\t\t\tdy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\t\t}\n\n\t\tmanhattanDistanceTo(v) {\n\t\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n\t\t}\n\n\t\tsetLength(length) {\n\t\t\treturn this.normalize().multiplyScalar(length);\n\t\t}\n\n\t\tlerp(v, alpha) {\n\t\t\tthis.x += (v.x - this.x) * alpha;\n\t\t\tthis.y += (v.y - this.y) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpVectors(v1, v2, alpha) {\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(v) {\n\t\t\treturn v.x === this.x && v.y === this.y;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.x = array[offset];\n\t\t\tthis.y = array[offset + 1];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.x;\n\t\t\tarray[offset + 1] = this.y;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index, offset) {\n\t\t\tif (offset !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX(index);\n\t\t\tthis.y = attribute.getY(index);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateAround(center, angle) {\n\t\t\tconst c = Math.cos(angle),\n\t\t\t\t\t\ts = Math.sin(angle);\n\t\t\tconst x = this.x - center.x;\n\t\t\tconst y = this.y - center.y;\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\t\t\treturn this;\n\t\t}\n\n\t\trandom() {\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\treturn this;\n\t\t}\n\n\t\t*[Symbol.iterator]() {\n\t\t\tyield this.x;\n\t\t\tyield this.y;\n\t\t}\n\n\t}\n\n\tVector2.prototype.isVector2 = true;\n\n\tclass Matrix3 {\n\t\tconstructor() {\n\t\t\tthis.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n\t\t\tif (arguments.length > 0) {\n\t\t\t\tconsole.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n\t\t\t}\n\t\t}\n\n\t\tset(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] = n11;\n\t\t\tte[1] = n21;\n\t\t\tte[2] = n31;\n\t\t\tte[3] = n12;\n\t\t\tte[4] = n22;\n\t\t\tte[5] = n32;\n\t\t\tte[6] = n13;\n\t\t\tte[7] = n23;\n\t\t\tte[8] = n33;\n\t\t\treturn this;\n\t\t}\n\n\t\tidentity() {\n\t\t\tthis.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(m) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = m.elements;\n\t\t\tte[0] = me[0];\n\t\t\tte[1] = me[1];\n\t\t\tte[2] = me[2];\n\t\t\tte[3] = me[3];\n\t\t\tte[4] = me[4];\n\t\t\tte[5] = me[5];\n\t\t\tte[6] = me[6];\n\t\t\tte[7] = me[7];\n\t\t\tte[8] = me[8];\n\t\t\treturn this;\n\t\t}\n\n\t\textractBasis(xAxis, yAxis, zAxis) {\n\t\t\txAxis.setFromMatrix3Column(this, 0);\n\t\t\tyAxis.setFromMatrix3Column(this, 1);\n\t\t\tzAxis.setFromMatrix3Column(this, 2);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrix4(m) {\n\t\t\tconst me = m.elements;\n\t\t\tthis.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(m) {\n\t\t\treturn this.multiplyMatrices(this, m);\n\t\t}\n\n\t\tpremultiply(m) {\n\t\t\treturn this.multiplyMatrices(m, this);\n\t\t}\n\n\t\tmultiplyMatrices(a, b) {\n\t\t\tconst ae = a.elements;\n\t\t\tconst be = b.elements;\n\t\t\tconst te = this.elements;\n\t\t\tconst a11 = ae[0],\n\t\t\t\t\t\ta12 = ae[3],\n\t\t\t\t\t\ta13 = ae[6];\n\t\t\tconst a21 = ae[1],\n\t\t\t\t\t\ta22 = ae[4],\n\t\t\t\t\t\ta23 = ae[7];\n\t\t\tconst a31 = ae[2],\n\t\t\t\t\t\ta32 = ae[5],\n\t\t\t\t\t\ta33 = ae[8];\n\t\t\tconst b11 = be[0],\n\t\t\t\t\t\tb12 = be[3],\n\t\t\t\t\t\tb13 = be[6];\n\t\t\tconst b21 = be[1],\n\t\t\t\t\t\tb22 = be[4],\n\t\t\t\t\t\tb23 = be[7];\n\t\t\tconst b31 = be[2],\n\t\t\t\t\t\tb32 = be[5],\n\t\t\t\t\t\tb33 = be[8];\n\t\t\tte[0] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\t\tte[3] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\t\tte[6] = a11 * b13 + a12 * b23 + a13 * b33;\n\t\t\tte[1] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\t\tte[4] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\t\tte[7] = a21 * b13 + a22 * b23 + a23 * b33;\n\t\t\tte[2] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\t\tte[5] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\t\tte[8] = a31 * b13 + a32 * b23 + a33 * b33;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(s) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] *= s;\n\t\t\tte[3] *= s;\n\t\t\tte[6] *= s;\n\t\t\tte[1] *= s;\n\t\t\tte[4] *= s;\n\t\t\tte[7] *= s;\n\t\t\tte[2] *= s;\n\t\t\tte[5] *= s;\n\t\t\tte[8] *= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tdeterminant() {\n\t\t\tconst te = this.elements;\n\t\t\tconst a = te[0],\n\t\t\t\t\t\tb = te[1],\n\t\t\t\t\t\tc = te[2],\n\t\t\t\t\t\td = te[3],\n\t\t\t\t\t\te = te[4],\n\t\t\t\t\t\tf = te[5],\n\t\t\t\t\t\tg = te[6],\n\t\t\t\t\t\th = te[7],\n\t\t\t\t\t\ti = te[8];\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\t\t}\n\n\t\tinvert() {\n\t\t\tconst te = this.elements,\n\t\t\t\t\t\tn11 = te[0],\n\t\t\t\t\t\tn21 = te[1],\n\t\t\t\t\t\tn31 = te[2],\n\t\t\t\t\t\tn12 = te[3],\n\t\t\t\t\t\tn22 = te[4],\n\t\t\t\t\t\tn32 = te[5],\n\t\t\t\t\t\tn13 = te[6],\n\t\t\t\t\t\tn23 = te[7],\n\t\t\t\t\t\tn33 = te[8],\n\t\t\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\t\t\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\t\t\tif (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);\n\t\t\tconst detInv = 1 / det;\n\t\t\tte[0] = t11 * detInv;\n\t\t\tte[1] = (n31 * n23 - n33 * n21) * detInv;\n\t\t\tte[2] = (n32 * n21 - n31 * n22) * detInv;\n\t\t\tte[3] = t12 * detInv;\n\t\t\tte[4] = (n33 * n11 - n31 * n13) * detInv;\n\t\t\tte[5] = (n31 * n12 - n32 * n11) * detInv;\n\t\t\tte[6] = t13 * detInv;\n\t\t\tte[7] = (n21 * n13 - n23 * n11) * detInv;\n\t\t\tte[8] = (n22 * n11 - n21 * n12) * detInv;\n\t\t\treturn this;\n\t\t}\n\n\t\ttranspose() {\n\t\t\tlet tmp;\n\t\t\tconst m = this.elements;\n\t\t\ttmp = m[1];\n\t\t\tm[1] = m[3];\n\t\t\tm[3] = tmp;\n\t\t\ttmp = m[2];\n\t\t\tm[2] = m[6];\n\t\t\tm[6] = tmp;\n\t\t\ttmp = m[5];\n\t\t\tm[5] = m[7];\n\t\t\tm[7] = tmp;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetNormalMatrix(matrix4) {\n\t\t\treturn this.setFromMatrix4(matrix4).invert().transpose();\n\t\t}\n\n\t\ttransposeIntoArray(r) {\n\t\t\tconst m = this.elements;\n\t\t\tr[0] = m[0];\n\t\t\tr[1] = m[3];\n\t\t\tr[2] = m[6];\n\t\t\tr[3] = m[1];\n\t\t\tr[4] = m[4];\n\t\t\tr[5] = m[7];\n\t\t\tr[6] = m[2];\n\t\t\tr[7] = m[5];\n\t\t\tr[8] = m[8];\n\t\t\treturn this;\n\t\t}\n\n\t\tsetUvTransform(tx, ty, sx, sy, rotation, cx, cy) {\n\t\t\tconst c = Math.cos(rotation);\n\t\t\tconst s = Math.sin(rotation);\n\t\t\tthis.set(sx * c, sx * s, -sx * (c * cx + s * cy) + cx + tx, -sy * s, sy * c, -sy * (-s * cx + c * cy) + cy + ty, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(sx, sy) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] *= sx;\n\t\t\tte[3] *= sx;\n\t\t\tte[6] *= sx;\n\t\t\tte[1] *= sy;\n\t\t\tte[4] *= sy;\n\t\t\tte[7] *= sy;\n\t\t\treturn this;\n\t\t}\n\n\t\trotate(theta) {\n\t\t\tconst c = Math.cos(theta);\n\t\t\tconst s = Math.sin(theta);\n\t\t\tconst te = this.elements;\n\t\t\tconst a11 = te[0],\n\t\t\t\t\t\ta12 = te[3],\n\t\t\t\t\t\ta13 = te[6];\n\t\t\tconst a21 = te[1],\n\t\t\t\t\t\ta22 = te[4],\n\t\t\t\t\t\ta23 = te[7];\n\t\t\tte[0] = c * a11 + s * a21;\n\t\t\tte[3] = c * a12 + s * a22;\n\t\t\tte[6] = c * a13 + s * a23;\n\t\t\tte[1] = -s * a11 + c * a21;\n\t\t\tte[4] = -s * a12 + c * a22;\n\t\t\tte[7] = -s * a13 + c * a23;\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(tx, ty) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] += tx * te[2];\n\t\t\tte[3] += tx * te[5];\n\t\t\tte[6] += tx * te[8];\n\t\t\tte[1] += ty * te[2];\n\t\t\tte[4] += ty * te[5];\n\t\t\tte[7] += ty * te[8];\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(matrix) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = matrix.elements;\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tif (te[i] !== me[i]) return false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.elements[i] = array[i + offset];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tconst te = this.elements;\n\t\t\tarray[offset] = te[0];\n\t\t\tarray[offset + 1] = te[1];\n\t\t\tarray[offset + 2] = te[2];\n\t\t\tarray[offset + 3] = te[3];\n\t\t\tarray[offset + 4] = te[4];\n\t\t\tarray[offset + 5] = te[5];\n\t\t\tarray[offset + 6] = te[6];\n\t\t\tarray[offset + 7] = te[7];\n\t\t\tarray[offset + 8] = te[8];\n\t\t\treturn array;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().fromArray(this.elements);\n\t\t}\n\n\t}\n\n\tMatrix3.prototype.isMatrix3 = true;\n\n\tfunction arrayNeedsUint32(array) {\n\t\t// assumes larger values usually on last\n\t\tfor (let i = array.length - 1; i >= 0; --i) {\n\t\t\tif (array[i] > 65535) return true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tconst TYPED_ARRAYS = {\n\t\tInt8Array: Int8Array,\n\t\tUint8Array: Uint8Array,\n\t\tUint8ClampedArray: Uint8ClampedArray,\n\t\tInt16Array: Int16Array,\n\t\tUint16Array: Uint16Array,\n\t\tInt32Array: Int32Array,\n\t\tUint32Array: Uint32Array,\n\t\tFloat32Array: Float32Array,\n\t\tFloat64Array: Float64Array\n\t};\n\n\tfunction getTypedArray(type, buffer) {\n\t\treturn new TYPED_ARRAYS[type](buffer);\n\t}\n\n\tfunction createElementNS(name) {\n\t\treturn document.createElementNS('http://www.w3.org/1999/xhtml', name);\n\t}\n\n\tconst _colorKeywords = {\n\t\t'aliceblue': 0xF0F8FF,\n\t\t'antiquewhite': 0xFAEBD7,\n\t\t'aqua': 0x00FFFF,\n\t\t'aquamarine': 0x7FFFD4,\n\t\t'azure': 0xF0FFFF,\n\t\t'beige': 0xF5F5DC,\n\t\t'bisque': 0xFFE4C4,\n\t\t'black': 0x000000,\n\t\t'blanchedalmond': 0xFFEBCD,\n\t\t'blue': 0x0000FF,\n\t\t'blueviolet': 0x8A2BE2,\n\t\t'brown': 0xA52A2A,\n\t\t'burlywood': 0xDEB887,\n\t\t'cadetblue': 0x5F9EA0,\n\t\t'chartreuse': 0x7FFF00,\n\t\t'chocolate': 0xD2691E,\n\t\t'coral': 0xFF7F50,\n\t\t'cornflowerblue': 0x6495ED,\n\t\t'cornsilk': 0xFFF8DC,\n\t\t'crimson': 0xDC143C,\n\t\t'cyan': 0x00FFFF,\n\t\t'darkblue': 0x00008B,\n\t\t'darkcyan': 0x008B8B,\n\t\t'darkgoldenrod': 0xB8860B,\n\t\t'darkgray': 0xA9A9A9,\n\t\t'darkgreen': 0x006400,\n\t\t'darkgrey': 0xA9A9A9,\n\t\t'darkkhaki': 0xBDB76B,\n\t\t'darkmagenta': 0x8B008B,\n\t\t'darkolivegreen': 0x556B2F,\n\t\t'darkorange': 0xFF8C00,\n\t\t'darkorchid': 0x9932CC,\n\t\t'darkred': 0x8B0000,\n\t\t'darksalmon': 0xE9967A,\n\t\t'darkseagreen': 0x8FBC8F,\n\t\t'darkslateblue': 0x483D8B,\n\t\t'darkslategray': 0x2F4F4F,\n\t\t'darkslategrey': 0x2F4F4F,\n\t\t'darkturquoise': 0x00CED1,\n\t\t'darkviolet': 0x9400D3,\n\t\t'deeppink': 0xFF1493,\n\t\t'deepskyblue': 0x00BFFF,\n\t\t'dimgray': 0x696969,\n\t\t'dimgrey': 0x696969,\n\t\t'dodgerblue': 0x1E90FF,\n\t\t'firebrick': 0xB22222,\n\t\t'floralwhite': 0xFFFAF0,\n\t\t'forestgreen': 0x228B22,\n\t\t'fuchsia': 0xFF00FF,\n\t\t'gainsboro': 0xDCDCDC,\n\t\t'ghostwhite': 0xF8F8FF,\n\t\t'gold': 0xFFD700,\n\t\t'goldenrod': 0xDAA520,\n\t\t'gray': 0x808080,\n\t\t'green': 0x008000,\n\t\t'greenyellow': 0xADFF2F,\n\t\t'grey': 0x808080,\n\t\t'honeydew': 0xF0FFF0,\n\t\t'hotpink': 0xFF69B4,\n\t\t'indianred': 0xCD5C5C,\n\t\t'indigo': 0x4B0082,\n\t\t'ivory': 0xFFFFF0,\n\t\t'khaki': 0xF0E68C,\n\t\t'lavender': 0xE6E6FA,\n\t\t'lavenderblush': 0xFFF0F5,\n\t\t'lawngreen': 0x7CFC00,\n\t\t'lemonchiffon': 0xFFFACD,\n\t\t'lightblue': 0xADD8E6,\n\t\t'lightcoral': 0xF08080,\n\t\t'lightcyan': 0xE0FFFF,\n\t\t'lightgoldenrodyellow': 0xFAFAD2,\n\t\t'lightgray': 0xD3D3D3,\n\t\t'lightgreen': 0x90EE90,\n\t\t'lightgrey': 0xD3D3D3,\n\t\t'lightpink': 0xFFB6C1,\n\t\t'lightsalmon': 0xFFA07A,\n\t\t'lightseagreen': 0x20B2AA,\n\t\t'lightskyblue': 0x87CEFA,\n\t\t'lightslategray': 0x778899,\n\t\t'lightslategrey': 0x778899,\n\t\t'lightsteelblue': 0xB0C4DE,\n\t\t'lightyellow': 0xFFFFE0,\n\t\t'lime': 0x00FF00,\n\t\t'limegreen': 0x32CD32,\n\t\t'linen': 0xFAF0E6,\n\t\t'magenta': 0xFF00FF,\n\t\t'maroon': 0x800000,\n\t\t'mediumaquamarine': 0x66CDAA,\n\t\t'mediumblue': 0x0000CD,\n\t\t'mediumorchid': 0xBA55D3,\n\t\t'mediumpurple': 0x9370DB,\n\t\t'mediumseagreen': 0x3CB371,\n\t\t'mediumslateblue': 0x7B68EE,\n\t\t'mediumspringgreen': 0x00FA9A,\n\t\t'mediumturquoise': 0x48D1CC,\n\t\t'mediumvioletred': 0xC71585,\n\t\t'midnightblue': 0x191970,\n\t\t'mintcream': 0xF5FFFA,\n\t\t'mistyrose': 0xFFE4E1,\n\t\t'moccasin': 0xFFE4B5,\n\t\t'navajowhite': 0xFFDEAD,\n\t\t'navy': 0x000080,\n\t\t'oldlace': 0xFDF5E6,\n\t\t'olive': 0x808000,\n\t\t'olivedrab': 0x6B8E23,\n\t\t'orange': 0xFFA500,\n\t\t'orangered': 0xFF4500,\n\t\t'orchid': 0xDA70D6,\n\t\t'palegoldenrod': 0xEEE8AA,\n\t\t'palegreen': 0x98FB98,\n\t\t'paleturquoise': 0xAFEEEE,\n\t\t'palevioletred': 0xDB7093,\n\t\t'papayawhip': 0xFFEFD5,\n\t\t'peachpuff': 0xFFDAB9,\n\t\t'peru': 0xCD853F,\n\t\t'pink': 0xFFC0CB,\n\t\t'plum': 0xDDA0DD,\n\t\t'powderblue': 0xB0E0E6,\n\t\t'purple': 0x800080,\n\t\t'rebeccapurple': 0x663399,\n\t\t'red': 0xFF0000,\n\t\t'rosybrown': 0xBC8F8F,\n\t\t'royalblue': 0x4169E1,\n\t\t'saddlebrown': 0x8B4513,\n\t\t'salmon': 0xFA8072,\n\t\t'sandybrown': 0xF4A460,\n\t\t'seagreen': 0x2E8B57,\n\t\t'seashell': 0xFFF5EE,\n\t\t'sienna': 0xA0522D,\n\t\t'silver': 0xC0C0C0,\n\t\t'skyblue': 0x87CEEB,\n\t\t'slateblue': 0x6A5ACD,\n\t\t'slategray': 0x708090,\n\t\t'slategrey': 0x708090,\n\t\t'snow': 0xFFFAFA,\n\t\t'springgreen': 0x00FF7F,\n\t\t'steelblue': 0x4682B4,\n\t\t'tan': 0xD2B48C,\n\t\t'teal': 0x008080,\n\t\t'thistle': 0xD8BFD8,\n\t\t'tomato': 0xFF6347,\n\t\t'turquoise': 0x40E0D0,\n\t\t'violet': 0xEE82EE,\n\t\t'wheat': 0xF5DEB3,\n\t\t'white': 0xFFFFFF,\n\t\t'whitesmoke': 0xF5F5F5,\n\t\t'yellow': 0xFFFF00,\n\t\t'yellowgreen': 0x9ACD32\n\t};\n\tconst _hslA = {\n\t\th: 0,\n\t\ts: 0,\n\t\tl: 0\n\t};\n\tconst _hslB = {\n\t\th: 0,\n\t\ts: 0,\n\t\tl: 0\n\t};\n\n\tfunction hue2rgb(p, q, t) {\n\t\tif (t < 0) t += 1;\n\t\tif (t > 1) t -= 1;\n\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\n\t\tif (t < 1 / 2) return q;\n\t\tif (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n\t\treturn p;\n\t}\n\n\tfunction SRGBToLinear(c) {\n\t\treturn c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n\t}\n\n\tfunction LinearToSRGB(c) {\n\t\treturn c < 0.0031308 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\n\t}\n\n\tclass Color {\n\t\tconstructor(r, g, b) {\n\t\t\tif (g === undefined && b === undefined) {\n\t\t\t\t// r is THREE.Color, hex or string\n\t\t\t\treturn this.set(r);\n\t\t\t}\n\n\t\t\treturn this.setRGB(r, g, b);\n\t\t}\n\n\t\tset(value) {\n\t\t\tif (value && value.isColor) {\n\t\t\t\tthis.copy(value);\n\t\t\t} else if (typeof value === 'number') {\n\t\t\t\tthis.setHex(value);\n\t\t\t} else if (typeof value === 'string') {\n\t\t\t\tthis.setStyle(value);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetHex(hex) {\n\t\t\thex = Math.floor(hex);\n\t\t\tthis.r = (hex >> 16 & 255) / 255;\n\t\t\tthis.g = (hex >> 8 & 255) / 255;\n\t\t\tthis.b = (hex & 255) / 255;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetRGB(r, g, b) {\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetHSL(h, s, l) {\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = euclideanModulo(h, 1);\n\t\t\ts = clamp(s, 0, 1);\n\t\t\tl = clamp(l, 0, 1);\n\n\t\t\tif (s === 0) {\n\t\t\t\tthis.r = this.g = this.b = l;\n\t\t\t} else {\n\t\t\t\tconst p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n\t\t\t\tconst q = 2 * l - p;\n\t\t\t\tthis.r = hue2rgb(q, p, h + 1 / 3);\n\t\t\t\tthis.g = hue2rgb(q, p, h);\n\t\t\t\tthis.b = hue2rgb(q, p, h - 1 / 3);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetStyle(style) {\n\t\t\tfunction handleAlpha(string) {\n\t\t\t\tif (string === undefined) return;\n\n\t\t\t\tif (parseFloat(string) < 1) {\n\t\t\t\t\tconsole.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet m;\n\n\t\t\tif (m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style)) {\n\t\t\t\t// rgb / hsl\n\t\t\t\tlet color;\n\t\t\t\tconst name = m[1];\n\t\t\t\tconst components = m[2];\n\n\t\t\t\tswitch (name) {\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\t\t\t\t\t\tif (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min(255, parseInt(color[1], 10)) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min(255, parseInt(color[2], 10)) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min(255, parseInt(color[3], 10)) / 255;\n\t\t\t\t\t\t\thandleAlpha(color[4]);\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min(100, parseInt(color[1], 10)) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min(100, parseInt(color[2], 10)) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min(100, parseInt(color[3], 10)) / 100;\n\t\t\t\t\t\t\thandleAlpha(color[4]);\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\t\t\t\t\t\tif (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tconst h = parseFloat(color[1]) / 360;\n\t\t\t\t\t\t\tconst s = parseInt(color[2], 10) / 100;\n\t\t\t\t\t\t\tconst l = parseInt(color[3], 10) / 100;\n\t\t\t\t\t\t\thandleAlpha(color[4]);\n\t\t\t\t\t\t\treturn this.setHSL(h, s, l);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {\n\t\t\t\t// hex color\n\t\t\t\tconst hex = m[1];\n\t\t\t\tconst size = hex.length;\n\n\t\t\t\tif (size === 3) {\n\t\t\t\t\t// #ff0\n\t\t\t\t\tthis.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n\t\t\t\t\tthis.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n\t\t\t\t\tthis.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n\t\t\t\t\treturn this;\n\t\t\t\t} else if (size === 6) {\n\t\t\t\t\t// #ff0000\n\t\t\t\t\tthis.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n\t\t\t\t\tthis.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n\t\t\t\t\tthis.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (style && style.length > 0) {\n\t\t\t\treturn this.setColorName(style);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetColorName(style) {\n\t\t\t// color keywords\n\t\t\tconst hex = _colorKeywords[style.toLowerCase()];\n\n\t\t\tif (hex !== undefined) {\n\t\t\t\t// red\n\t\t\t\tthis.setHex(hex);\n\t\t\t} else {\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn('THREE.Color: Unknown color ' + style);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.r, this.g, this.b);\n\t\t}\n\n\t\tcopy(color) {\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopySRGBToLinear(color) {\n\t\t\tthis.r = SRGBToLinear(color.r);\n\t\t\tthis.g = SRGBToLinear(color.g);\n\t\t\tthis.b = SRGBToLinear(color.b);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyLinearToSRGB(color) {\n\t\t\tthis.r = LinearToSRGB(color.r);\n\t\t\tthis.g = LinearToSRGB(color.g);\n\t\t\tthis.b = LinearToSRGB(color.b);\n\t\t\treturn this;\n\t\t}\n\n\t\tconvertSRGBToLinear() {\n\t\t\tthis.copySRGBToLinear(this);\n\t\t\treturn this;\n\t\t}\n\n\t\tconvertLinearToSRGB() {\n\t\t\tthis.copyLinearToSRGB(this);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetHex() {\n\t\t\treturn this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n\t\t}\n\n\t\tgetHexString() {\n\t\t\treturn ('000000' + this.getHex().toString(16)).slice(-6);\n\t\t}\n\n\t\tgetHSL(target) {\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\tconst r = this.r,\n\t\t\t\t\t\tg = this.g,\n\t\t\t\t\t\tb = this.b;\n\t\t\tconst max = Math.max(r, g, b);\n\t\t\tconst min = Math.min(r, g, b);\n\t\t\tlet hue, saturation;\n\t\t\tconst lightness = (min + max) / 2.0;\n\n\t\t\tif (min === max) {\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\t\t\t} else {\n\t\t\t\tconst delta = max - min;\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n\t\t\t\tswitch (max) {\n\t\t\t\t\tcase r:\n\t\t\t\t\t\thue = (g - b) / delta + (g < b ? 6 : 0);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase g:\n\t\t\t\t\t\thue = (b - r) / delta + 2;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase b:\n\t\t\t\t\t\thue = (r - g) / delta + 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\t\t\t}\n\n\t\t\ttarget.h = hue;\n\t\t\ttarget.s = saturation;\n\t\t\ttarget.l = lightness;\n\t\t\treturn target;\n\t\t}\n\n\t\tgetStyle() {\n\t\t\treturn 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n\t\t}\n\n\t\toffsetHSL(h, s, l) {\n\t\t\tthis.getHSL(_hslA);\n\t\t\t_hslA.h += h;\n\t\t\t_hslA.s += s;\n\t\t\t_hslA.l += l;\n\t\t\tthis.setHSL(_hslA.h, _hslA.s, _hslA.l);\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(color) {\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\t\t\treturn this;\n\t\t}\n\n\t\taddColors(color1, color2) {\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(color) {\n\t\t\tthis.r = Math.max(0, this.r - color.r);\n\t\t\tthis.g = Math.max(0, this.g - color.g);\n\t\t\tthis.b = Math.max(0, this.b - color.b);\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(color) {\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(s) {\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerp(color, alpha) {\n\t\t\tthis.r += (color.r - this.r) * alpha;\n\t\t\tthis.g += (color.g - this.g) * alpha;\n\t\t\tthis.b += (color.b - this.b) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpColors(color1, color2, alpha) {\n\t\t\tthis.r = color1.r + (color2.r - color1.r) * alpha;\n\t\t\tthis.g = color1.g + (color2.g - color1.g) * alpha;\n\t\t\tthis.b = color1.b + (color2.b - color1.b) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpHSL(color, alpha) {\n\t\t\tthis.getHSL(_hslA);\n\t\t\tcolor.getHSL(_hslB);\n\t\t\tconst h = lerp(_hslA.h, _hslB.h, alpha);\n\t\t\tconst s = lerp(_hslA.s, _hslB.s, alpha);\n\t\t\tconst l = lerp(_hslA.l, _hslB.l, alpha);\n\t\t\tthis.setHSL(h, s, l);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(c) {\n\t\t\treturn c.r === this.r && c.g === this.g && c.b === this.b;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.r = array[offset];\n\t\t\tthis.g = array[offset + 1];\n\t\t\tthis.b = array[offset + 2];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.r;\n\t\t\tarray[offset + 1] = this.g;\n\t\t\tarray[offset + 2] = this.b;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index) {\n\t\t\tthis.r = attribute.getX(index);\n\t\t\tthis.g = attribute.getY(index);\n\t\t\tthis.b = attribute.getZ(index);\n\n\t\t\tif (attribute.normalized === true) {\n\t\t\t\t// assuming Uint8Array\n\t\t\t\tthis.r /= 255;\n\t\t\t\tthis.g /= 255;\n\t\t\t\tthis.b /= 255;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn this.getHex();\n\t\t}\n\n\t}\n\n\tColor.NAMES = _colorKeywords;\n\tColor.prototype.isColor = true;\n\tColor.prototype.r = 1;\n\tColor.prototype.g = 1;\n\tColor.prototype.b = 1;\n\n\tlet _canvas;\n\n\tclass ImageUtils {\n\t\tstatic getDataURL(image) {\n\t\t\tif (/^data:/i.test(image.src)) {\n\t\t\t\treturn image.src;\n\t\t\t}\n\n\t\t\tif (typeof HTMLCanvasElement == 'undefined') {\n\t\t\t\treturn image.src;\n\t\t\t}\n\n\t\t\tlet canvas;\n\n\t\t\tif (image instanceof HTMLCanvasElement) {\n\t\t\t\tcanvas = image;\n\t\t\t} else {\n\t\t\t\tif (_canvas === undefined) _canvas = createElementNS('canvas');\n\t\t\t\t_canvas.width = image.width;\n\t\t\t\t_canvas.height = image.height;\n\n\t\t\t\tconst context = _canvas.getContext('2d');\n\n\t\t\t\tif (image instanceof ImageData) {\n\t\t\t\t\tcontext.putImageData(image, 0, 0);\n\t\t\t\t} else {\n\t\t\t\t\tcontext.drawImage(image, 0, 0, image.width, image.height);\n\t\t\t\t}\n\n\t\t\t\tcanvas = _canvas;\n\t\t\t}\n\n\t\t\tif (canvas.width > 2048 || canvas.height > 2048) {\n\t\t\t\tconsole.warn('THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image);\n\t\t\t\treturn canvas.toDataURL('image/jpeg', 0.6);\n\t\t\t} else {\n\t\t\t\treturn canvas.toDataURL('image/png');\n\t\t\t}\n\t\t}\n\n\t\tstatic sRGBToLinear(image) {\n\t\t\tif (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n\t\t\t\tconst canvas = createElementNS('canvas');\n\t\t\t\tcanvas.width = image.width;\n\t\t\t\tcanvas.height = image.height;\n\t\t\t\tconst context = canvas.getContext('2d');\n\t\t\t\tcontext.drawImage(image, 0, 0, image.width, image.height);\n\t\t\t\tconst imageData = context.getImageData(0, 0, image.width, image.height);\n\t\t\t\tconst data = imageData.data;\n\n\t\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\t\tdata[i] = SRGBToLinear(data[i] / 255) * 255;\n\t\t\t\t}\n\n\t\t\t\tcontext.putImageData(imageData, 0, 0);\n\t\t\t\treturn canvas;\n\t\t\t} else if (image.data) {\n\t\t\t\tconst data = image.data.slice(0);\n\n\t\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\t\tif (data instanceof Uint8Array || data instanceof Uint8ClampedArray) {\n\t\t\t\t\t\tdata[i] = Math.floor(SRGBToLinear(data[i] / 255) * 255);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// assuming float\n\t\t\t\t\t\tdata[i] = SRGBToLinear(data[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tdata: data,\n\t\t\t\t\twidth: image.width,\n\t\t\t\t\theight: image.height\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.');\n\t\t\t\treturn image;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tlet textureId = 0;\n\n\tclass Texture extends EventDispatcher {\n\t\tconstructor(image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding) {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: textureId++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.image = image;\n\t\t\tthis.mipmaps = [];\n\t\t\tthis.mapping = mapping;\n\t\t\tthis.wrapS = wrapS;\n\t\t\tthis.wrapT = wrapT;\n\t\t\tthis.magFilter = magFilter;\n\t\t\tthis.minFilter = minFilter;\n\t\t\tthis.anisotropy = anisotropy;\n\t\t\tthis.format = format;\n\t\t\tthis.internalFormat = null;\n\t\t\tthis.type = type;\n\t\t\tthis.offset = new Vector2(0, 0);\n\t\t\tthis.repeat = new Vector2(1, 1);\n\t\t\tthis.center = new Vector2(0, 0);\n\t\t\tthis.rotation = 0;\n\t\t\tthis.matrixAutoUpdate = true;\n\t\t\tthis.matrix = new Matrix3();\n\t\t\tthis.generateMipmaps = true;\n\t\t\tthis.premultiplyAlpha = false;\n\t\t\tthis.flipY = true;\n\t\t\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\t\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t\t//\n\t\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n\t\t\tthis.encoding = encoding;\n\t\t\tthis.userData = {};\n\t\t\tthis.version = 0;\n\t\t\tthis.onUpdate = null;\n\t\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\n\t\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\t\t}\n\n\t\tupdateMatrix() {\n\t\t\tthis.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.image = source.image;\n\t\t\tthis.mipmaps = source.mipmaps.slice(0);\n\t\t\tthis.mapping = source.mapping;\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\t\t\tthis.anisotropy = source.anisotropy;\n\t\t\tthis.format = source.format;\n\t\t\tthis.internalFormat = source.internalFormat;\n\t\t\tthis.type = source.type;\n\t\t\tthis.offset.copy(source.offset);\n\t\t\tthis.repeat.copy(source.repeat);\n\t\t\tthis.center.copy(source.center);\n\t\t\tthis.rotation = source.rotation;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrix.copy(source.matrix);\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\t\t\tthis.userData = JSON.parse(JSON.stringify(source.userData));\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst isRootObject = meta === undefined || typeof meta === 'string';\n\n\t\t\tif (!isRootObject && meta.textures[this.uuid] !== undefined) {\n\t\t\t\treturn meta.textures[this.uuid];\n\t\t\t}\n\n\t\t\tconst output = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\t\t\t\tmapping: this.mapping,\n\t\t\t\trepeat: [this.repeat.x, this.repeat.y],\n\t\t\t\toffset: [this.offset.x, this.offset.y],\n\t\t\t\tcenter: [this.center.x, this.center.y],\n\t\t\t\trotation: this.rotation,\n\t\t\t\twrap: [this.wrapS, this.wrapT],\n\t\t\t\tformat: this.format,\n\t\t\t\ttype: this.type,\n\t\t\t\tencoding: this.encoding,\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\t\t\t\tflipY: this.flipY,\n\t\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\t\tunpackAlignment: this.unpackAlignment\n\t\t\t};\n\n\t\t\tif (this.image !== undefined) {\n\t\t\t\t// TODO: Move to THREE.Image\n\t\t\t\tconst image = this.image;\n\n\t\t\t\tif (image.uuid === undefined) {\n\t\t\t\t\timage.uuid = generateUUID(); // UGH\n\t\t\t\t}\n\n\t\t\t\tif (!isRootObject && meta.images[image.uuid] === undefined) {\n\t\t\t\t\tlet url;\n\n\t\t\t\t\tif (Array.isArray(image)) {\n\t\t\t\t\t\t// process array of images e.g. CubeTexture\n\t\t\t\t\t\turl = [];\n\n\t\t\t\t\t\tfor (let i = 0, l = image.length; i < l; i++) {\n\t\t\t\t\t\t\t// check cube texture with data textures\n\t\t\t\t\t\t\tif (image[i].isDataTexture) {\n\t\t\t\t\t\t\t\turl.push(serializeImage(image[i].image));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\turl.push(serializeImage(image[i]));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// process single image\n\t\t\t\t\t\turl = serializeImage(image);\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.images[image.uuid] = {\n\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\turl: url\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\toutput.image = image.uuid;\n\t\t\t}\n\n\t\t\tif (JSON.stringify(this.userData) !== '{}') output.userData = this.userData;\n\n\t\t\tif (!isRootObject) {\n\t\t\t\tmeta.textures[this.uuid] = output;\n\t\t\t}\n\n\t\t\treturn output;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t\ttransformUv(uv) {\n\t\t\tif (this.mapping !== UVMapping) return uv;\n\t\t\tuv.applyMatrix3(this.matrix);\n\n\t\t\tif (uv.x < 0 || uv.x > 1) {\n\t\t\t\tswitch (this.wrapS) {\n\t\t\t\t\tcase RepeatWrapping:\n\t\t\t\t\t\tuv.x = uv.x - Math.floor(uv.x);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\t\t\t\t\t\tif (Math.abs(Math.floor(uv.x) % 2) === 1) {\n\t\t\t\t\t\t\tuv.x = Math.ceil(uv.x) - uv.x;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor(uv.x);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (uv.y < 0 || uv.y > 1) {\n\t\t\t\tswitch (this.wrapT) {\n\t\t\t\t\tcase RepeatWrapping:\n\t\t\t\t\t\tuv.y = uv.y - Math.floor(uv.y);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\t\t\t\t\t\tif (Math.abs(Math.floor(uv.y) % 2) === 1) {\n\t\t\t\t\t\t\tuv.y = Math.ceil(uv.y) - uv.y;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor(uv.y);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.flipY) {\n\t\t\t\tuv.y = 1 - uv.y;\n\t\t\t}\n\n\t\t\treturn uv;\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t}\n\n\tTexture.DEFAULT_IMAGE = undefined;\n\tTexture.DEFAULT_MAPPING = UVMapping;\n\tTexture.prototype.isTexture = true;\n\n\tfunction serializeImage(image) {\n\t\tif (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n\t\t\t// default images\n\t\t\treturn ImageUtils.getDataURL(image);\n\t\t} else {\n\t\t\tif (image.data) {\n\t\t\t\t// images of DataTexture\n\t\t\t\treturn {\n\t\t\t\t\tdata: Array.prototype.slice.call(image.data),\n\t\t\t\t\twidth: image.width,\n\t\t\t\t\theight: image.height,\n\t\t\t\t\ttype: image.data.constructor.name\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.Texture: Unable to serialize Texture.');\n\t\t\t\treturn {};\n\t\t\t}\n\t\t}\n\t}\n\n\tclass Vector4 {\n\t\tconstructor(x = 0, y = 0, z = 0, w = 1) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\t\t}\n\n\t\tget width() {\n\t\t\treturn this.z;\n\t\t}\n\n\t\tset width(value) {\n\t\t\tthis.z = value;\n\t\t}\n\n\t\tget height() {\n\t\t\treturn this.w;\n\t\t}\n\n\t\tset height(value) {\n\t\t\tthis.w = value;\n\t\t}\n\n\t\tset(x, y, z, w) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(x) {\n\t\t\tthis.x = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(y) {\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetZ(z) {\n\t\t\tthis.z = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetW(w) {\n\t\t\tthis.w = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponent(index, value) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.x = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.y = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tthis.z = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\tthis.w = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetComponent(index) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn this.x;\n\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this.y;\n\n\t\t\t\tcase 2:\n\t\t\t\t\treturn this.z;\n\n\t\t\t\tcase 3:\n\t\t\t\t\treturn this.w;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.x, this.y, this.z, this.w);\n\t\t}\n\n\t\tcopy(v) {\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = v.w !== undefined ? v.w : 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\t\treturn this.addVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\t\t\treturn this;\n\t\t}\n\n\t\taddVectors(a, b) {\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledVector(v, s) {\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\t\treturn this.subVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubScalar(s) {\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubVectors(a, b) {\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(v) {\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\t\t\tthis.w *= v.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\tthis.w *= scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z,\n\t\t\t\t\t\tw = this.w;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n\t\t\tthis.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n\t\t\tthis.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n\t\t\tthis.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivideScalar(scalar) {\n\t\t\treturn this.multiplyScalar(1 / scalar);\n\t\t}\n\n\t\tsetAxisAngleFromQuaternion(q) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\t\t\t// q is assumed to be normalized\n\t\t\tthis.w = 2 * Math.acos(q.w);\n\t\t\tconst s = Math.sqrt(1 - q.w * q.w);\n\n\t\t\tif (s < 0.0001) {\n\t\t\t\tthis.x = 1;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\t\t\t} else {\n\t\t\t\tthis.x = q.x / s;\n\t\t\t\tthis.y = q.y / s;\n\t\t\t\tthis.z = q.z / s;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetAxisAngleFromRotationMatrix(m) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tlet angle, x, y, z; // variables for result\n\n\t\t\tconst epsilon = 0.01,\n\t\t\t\t\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\n\t\t\t\t\t\t// margin to distinguish between 0 and 180 degrees\n\t\t\tte = m.elements,\n\t\t\t\t\t\tm11 = te[0],\n\t\t\t\t\t\tm12 = te[4],\n\t\t\t\t\t\tm13 = te[8],\n\t\t\t\t\t\tm21 = te[1],\n\t\t\t\t\t\tm22 = te[5],\n\t\t\t\t\t\tm23 = te[9],\n\t\t\t\t\t\tm31 = te[2],\n\t\t\t\t\t\tm32 = te[6],\n\t\t\t\t\t\tm33 = te[10];\n\n\t\t\tif (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\t\t\t\tif (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\t\t\t\t\tthis.set(1, 0, 0, 0);\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\t\t\t\t} // otherwise this singularity is angle = 180\n\n\n\t\t\t\tangle = Math.PI;\n\t\t\t\tconst xx = (m11 + 1) / 2;\n\t\t\t\tconst yy = (m22 + 1) / 2;\n\t\t\t\tconst zz = (m33 + 1) / 2;\n\t\t\t\tconst xy = (m12 + m21) / 4;\n\t\t\t\tconst xz = (m13 + m31) / 4;\n\t\t\t\tconst yz = (m23 + m32) / 4;\n\n\t\t\t\tif (xx > yy && xx > zz) {\n\t\t\t\t\t// m11 is the largest diagonal term\n\t\t\t\t\tif (xx < epsilon) {\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx = Math.sqrt(xx);\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\t\t\t\t\t}\n\t\t\t\t} else if (yy > zz) {\n\t\t\t\t\t// m22 is the largest diagonal term\n\t\t\t\t\tif (yy < epsilon) {\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ty = Math.sqrt(yy);\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\t\t\t\t\tif (zz < epsilon) {\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tz = Math.sqrt(zz);\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.set(x, y, z, angle);\n\t\t\t\treturn this; // return 180 deg rotation\n\t\t\t} // as we have reached here there are no singularities so we can handle normally\n\n\n\t\t\tlet s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n\t\t\tif (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = (m32 - m23) / s;\n\t\t\tthis.y = (m13 - m31) / s;\n\t\t\tthis.z = (m21 - m12) / s;\n\t\t\tthis.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n\t\t\treturn this;\n\t\t}\n\n\t\tmin(v) {\n\t\t\tthis.x = Math.min(this.x, v.x);\n\t\t\tthis.y = Math.min(this.y, v.y);\n\t\t\tthis.z = Math.min(this.z, v.z);\n\t\t\tthis.w = Math.min(this.w, v.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tmax(v) {\n\t\t\tthis.x = Math.max(this.x, v.x);\n\t\t\tthis.y = Math.max(this.y, v.y);\n\t\t\tthis.z = Math.max(this.z, v.z);\n\t\t\tthis.w = Math.max(this.w, v.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tclamp(min, max) {\n\t\t\t// assumes min < max, componentwise\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\n\t\t\tthis.w = Math.max(min.w, Math.min(max.w, this.w));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampScalar(minVal, maxVal) {\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\n\t\t\tthis.w = Math.max(minVal, Math.min(maxVal, this.w));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampLength(min, max) {\n\t\t\tconst length = this.length();\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t\t}\n\n\t\tfloor() {\n\t\t\tthis.x = Math.floor(this.x);\n\t\t\tthis.y = Math.floor(this.y);\n\t\t\tthis.z = Math.floor(this.z);\n\t\t\tthis.w = Math.floor(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tceil() {\n\t\t\tthis.x = Math.ceil(this.x);\n\t\t\tthis.y = Math.ceil(this.y);\n\t\t\tthis.z = Math.ceil(this.z);\n\t\t\tthis.w = Math.ceil(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tround() {\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t\tthis.z = Math.round(this.z);\n\t\t\tthis.w = Math.round(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\troundToZero() {\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n\t\t\tthis.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n\t\t\tthis.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.x = -this.x;\n\t\t\tthis.y = -this.y;\n\t\t\tthis.z = -this.z;\n\t\t\tthis.w = -this.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\t\t}\n\n\t\tlengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n\t\t}\n\n\t\tmanhattanLength() {\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n\t\t}\n\n\t\tnormalize() {\n\t\t\treturn this.divideScalar(this.length() || 1);\n\t\t}\n\n\t\tsetLength(length) {\n\t\t\treturn this.normalize().multiplyScalar(length);\n\t\t}\n\n\t\tlerp(v, alpha) {\n\t\t\tthis.x += (v.x - this.x) * alpha;\n\t\t\tthis.y += (v.y - this.y) * alpha;\n\t\t\tthis.z += (v.z - this.z) * alpha;\n\t\t\tthis.w += (v.w - this.w) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpVectors(v1, v2, alpha) {\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\n\t\t\tthis.z = v1.z + (v2.z - v1.z) * alpha;\n\t\t\tthis.w = v1.w + (v2.w - v1.w) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(v) {\n\t\t\treturn v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.x = array[offset];\n\t\t\tthis.y = array[offset + 1];\n\t\t\tthis.z = array[offset + 2];\n\t\t\tthis.w = array[offset + 3];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.x;\n\t\t\tarray[offset + 1] = this.y;\n\t\t\tarray[offset + 2] = this.z;\n\t\t\tarray[offset + 3] = this.w;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index, offset) {\n\t\t\tif (offset !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX(index);\n\t\t\tthis.y = attribute.getY(index);\n\t\t\tthis.z = attribute.getZ(index);\n\t\t\tthis.w = attribute.getW(index);\n\t\t\treturn this;\n\t\t}\n\n\t\trandom() {\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\tthis.z = Math.random();\n\t\t\tthis.w = Math.random();\n\t\t\treturn this;\n\t\t}\n\n\t\t*[Symbol.iterator]() {\n\t\t\tyield this.x;\n\t\t\tyield this.y;\n\t\t\tyield this.z;\n\t\t\tyield this.w;\n\t\t}\n\n\t}\n\n\tVector4.prototype.isVector4 = true;\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\n\tclass WebGLRenderTarget extends EventDispatcher {\n\t\tconstructor(width, height, options = {}) {\n\t\t\tsuper();\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = 1;\n\t\t\tthis.scissor = new Vector4(0, 0, width, height);\n\t\t\tthis.scissorTest = false;\n\t\t\tthis.viewport = new Vector4(0, 0, width, height);\n\t\t\tthis.texture = new Texture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n\t\t\tthis.texture.isRenderTargetTexture = true;\n\t\t\tthis.texture.image = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: 1\n\t\t\t};\n\t\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\t\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\t\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\t\t}\n\n\t\tsetTexture(texture) {\n\t\t\ttexture.image = {\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t\tdepth: this.depth\n\t\t\t};\n\t\t\tthis.texture = texture;\n\t\t}\n\n\t\tsetSize(width, height, depth = 1) {\n\t\t\tif (this.width !== width || this.height !== height || this.depth !== depth) {\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\t\t\t\tthis.depth = depth;\n\t\t\t\tthis.texture.image.width = width;\n\t\t\t\tthis.texture.image.height = height;\n\t\t\t\tthis.texture.image.depth = depth;\n\t\t\t\tthis.dispose();\n\t\t\t}\n\n\t\t\tthis.viewport.set(0, 0, width, height);\n\t\t\tthis.scissor.set(0, 0, width, height);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\t\t\tthis.depth = source.depth;\n\t\t\tthis.viewport.copy(source.viewport);\n\t\t\tthis.texture = source.texture.clone(); // ensure image object is not shared, see #20328\n\n\t\t\tthis.texture.image = Object.assign({}, source.texture.image);\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t}\n\n\tWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\n\n\tclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\t\tconstructor(width, height, count) {\n\t\t\tsuper(width, height);\n\t\t\tconst texture = this.texture;\n\t\t\tthis.texture = [];\n\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tthis.texture[i] = texture.clone();\n\t\t\t}\n\t\t}\n\n\t\tsetSize(width, height, depth = 1) {\n\t\t\tif (this.width !== width || this.height !== height || this.depth !== depth) {\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\t\t\t\tthis.depth = depth;\n\n\t\t\t\tfor (let i = 0, il = this.texture.length; i < il; i++) {\n\t\t\t\t\tthis.texture[i].image.width = width;\n\t\t\t\t\tthis.texture[i].image.height = height;\n\t\t\t\t\tthis.texture[i].image.depth = depth;\n\t\t\t\t}\n\n\t\t\t\tthis.dispose();\n\t\t\t}\n\n\t\t\tthis.viewport.set(0, 0, width, height);\n\t\t\tthis.scissor.set(0, 0, width, height);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.dispose();\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\t\t\tthis.depth = source.depth;\n\t\t\tthis.viewport.set(0, 0, this.width, this.height);\n\t\t\tthis.scissor.set(0, 0, this.width, this.height);\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\t\t\tthis.texture.length = 0;\n\n\t\t\tfor (let i = 0, il = source.texture.length; i < il; i++) {\n\t\t\t\tthis.texture[i] = source.texture[i].clone();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tWebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets = true;\n\n\tclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n\t\tconstructor(width, height, options = {}) {\n\t\t\tsuper(width, height, options);\n\t\t\tthis.samples = 4;\n\t\t\tthis.ignoreDepthForMultisampleCopy = options.ignoreDepth !== undefined ? options.ignoreDepth : true;\n\t\t\tthis.useRenderToTexture = options.useRenderToTexture !== undefined ? options.useRenderToTexture : false;\n\t\t\tthis.useRenderbuffer = this.useRenderToTexture === false;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy.call(this, source);\n\t\t\tthis.samples = source.samples;\n\t\t\tthis.useRenderToTexture = source.useRenderToTexture;\n\t\t\tthis.useRenderbuffer = source.useRenderbuffer;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tWebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget = true;\n\n\tclass Quaternion {\n\t\tconstructor(x = 0, y = 0, z = 0, w = 1) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\t\t}\n\n\t\tstatic slerp(qa, qb, qm, t) {\n\t\t\tconsole.warn('THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.');\n\t\t\treturn qm.slerpQuaternions(qa, qb, t);\n\t\t}\n\n\t\tstatic slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\t\t\tlet x0 = src0[srcOffset0 + 0],\n\t\t\t\t\ty0 = src0[srcOffset0 + 1],\n\t\t\t\t\tz0 = src0[srcOffset0 + 2],\n\t\t\t\t\tw0 = src0[srcOffset0 + 3];\n\t\t\tconst x1 = src1[srcOffset1 + 0],\n\t\t\t\t\t\ty1 = src1[srcOffset1 + 1],\n\t\t\t\t\t\tz1 = src1[srcOffset1 + 2],\n\t\t\t\t\t\tw1 = src1[srcOffset1 + 3];\n\n\t\t\tif (t === 0) {\n\t\t\t\tdst[dstOffset + 0] = x0;\n\t\t\t\tdst[dstOffset + 1] = y0;\n\t\t\t\tdst[dstOffset + 2] = z0;\n\t\t\t\tdst[dstOffset + 3] = w0;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (t === 1) {\n\t\t\t\tdst[dstOffset + 0] = x1;\n\t\t\t\tdst[dstOffset + 1] = y1;\n\t\t\t\tdst[dstOffset + 2] = z1;\n\t\t\t\tdst[dstOffset + 3] = w1;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n\t\t\t\tlet s = 1 - t;\n\t\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\t\t\t\tdir = cos >= 0 ? 1 : -1,\n\t\t\t\t\t\t\tsqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\n\n\t\t\t\tif (sqrSin > Number.EPSILON) {\n\t\t\t\t\tconst sin = Math.sqrt(sqrSin),\n\t\t\t\t\t\t\t\tlen = Math.atan2(sin, cos * dir);\n\t\t\t\t\ts = Math.sin(s * len) / sin;\n\t\t\t\t\tt = Math.sin(t * len) / sin;\n\t\t\t\t}\n\n\t\t\t\tconst tDir = t * dir;\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\n\n\t\t\t\tif (s === 1 - t) {\n\t\t\t\t\tconst f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdst[dstOffset] = x0;\n\t\t\tdst[dstOffset + 1] = y0;\n\t\t\tdst[dstOffset + 2] = z0;\n\t\t\tdst[dstOffset + 3] = w0;\n\t\t}\n\n\t\tstatic multiplyQuaternionsFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1) {\n\t\t\tconst x0 = src0[srcOffset0];\n\t\t\tconst y0 = src0[srcOffset0 + 1];\n\t\t\tconst z0 = src0[srcOffset0 + 2];\n\t\t\tconst w0 = src0[srcOffset0 + 3];\n\t\t\tconst x1 = src1[srcOffset1];\n\t\t\tconst y1 = src1[srcOffset1 + 1];\n\t\t\tconst z1 = src1[srcOffset1 + 2];\n\t\t\tconst w1 = src1[srcOffset1 + 3];\n\t\t\tdst[dstOffset] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\t\tdst[dstOffset + 1] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\t\tdst[dstOffset + 2] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\t\tdst[dstOffset + 3] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\t\t\treturn dst;\n\t\t}\n\n\t\tget x() {\n\t\t\treturn this._x;\n\t\t}\n\n\t\tset x(value) {\n\t\t\tthis._x = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget y() {\n\t\t\treturn this._y;\n\t\t}\n\n\t\tset y(value) {\n\t\t\tthis._y = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget z() {\n\t\t\treturn this._z;\n\t\t}\n\n\t\tset z(value) {\n\t\t\tthis._z = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget w() {\n\t\t\treturn this._w;\n\t\t}\n\n\t\tset w(value) {\n\t\t\tthis._w = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tset(x, y, z, w) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this._x, this._y, this._z, this._w);\n\t\t}\n\n\t\tcopy(quaternion) {\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromEuler(euler, update) {\n\t\t\tif (!(euler && euler.isEuler)) {\n\t\t\t\tthrow new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');\n\t\t\t}\n\n\t\t\tconst x = euler._x,\n\t\t\t\t\t\ty = euler._y,\n\t\t\t\t\t\tz = euler._z,\n\t\t\t\t\t\torder = euler._order; // http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tconst cos = Math.cos;\n\t\t\tconst sin = Math.sin;\n\t\t\tconst c1 = cos(x / 2);\n\t\t\tconst c2 = cos(y / 2);\n\t\t\tconst c3 = cos(z / 2);\n\t\t\tconst s1 = sin(x / 2);\n\t\t\tconst s2 = sin(y / 2);\n\t\t\tconst s3 = sin(z / 2);\n\n\t\t\tswitch (order) {\n\t\t\t\tcase 'XYZ':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXZ':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXY':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYX':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZX':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZY':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn('THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order);\n\t\t\t}\n\n\t\t\tif (update !== false) this._onChangeCallback();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromAxisAngle(axis, angle) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\t\t\t// assumes axis is normalized\n\t\t\tconst halfAngle = angle / 2,\n\t\t\t\t\t\ts = Math.sin(halfAngle);\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos(halfAngle);\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromRotationMatrix(m) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tconst te = m.elements,\n\t\t\t\t\t\tm11 = te[0],\n\t\t\t\t\t\tm12 = te[4],\n\t\t\t\t\t\tm13 = te[8],\n\t\t\t\t\t\tm21 = te[1],\n\t\t\t\t\t\tm22 = te[5],\n\t\t\t\t\t\tm23 = te[9],\n\t\t\t\t\t\tm31 = te[2],\n\t\t\t\t\t\tm32 = te[6],\n\t\t\t\t\t\tm33 = te[10],\n\t\t\t\t\t\ttrace = m11 + m22 + m33;\n\n\t\t\tif (trace > 0) {\n\t\t\t\tconst s = 0.5 / Math.sqrt(trace + 1.0);\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = (m32 - m23) * s;\n\t\t\t\tthis._y = (m13 - m31) * s;\n\t\t\t\tthis._z = (m21 - m12) * s;\n\t\t\t} else if (m11 > m22 && m11 > m33) {\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n\t\t\t\tthis._w = (m32 - m23) / s;\n\t\t\t\tthis._x = 0.25 * s;\n\t\t\t\tthis._y = (m12 + m21) / s;\n\t\t\t\tthis._z = (m13 + m31) / s;\n\t\t\t} else if (m22 > m33) {\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n\t\t\t\tthis._w = (m13 - m31) / s;\n\t\t\t\tthis._x = (m12 + m21) / s;\n\t\t\t\tthis._y = 0.25 * s;\n\t\t\t\tthis._z = (m23 + m32) / s;\n\t\t\t} else {\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n\t\t\t\tthis._w = (m21 - m12) / s;\n\t\t\t\tthis._x = (m13 + m31) / s;\n\t\t\t\tthis._y = (m23 + m32) / s;\n\t\t\t\tthis._z = 0.25 * s;\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromUnitVectors(vFrom, vTo) {\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\t\t\tlet r = vFrom.dot(vTo) + 1;\n\n\t\t\tif (r < Number.EPSILON) {\n\t\t\t\t// vFrom and vTo point in opposite directions\n\t\t\t\tr = 0;\n\n\t\t\t\tif (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n\t\t\t\t\tthis._x = -vFrom.y;\n\t\t\t\t\tthis._y = vFrom.x;\n\t\t\t\t\tthis._z = 0;\n\t\t\t\t\tthis._w = r;\n\t\t\t\t} else {\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = -vFrom.z;\n\t\t\t\t\tthis._z = vFrom.y;\n\t\t\t\t\tthis._w = r;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\t\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\t\tthis._w = r;\n\t\t\t}\n\n\t\t\treturn this.normalize();\n\t\t}\n\n\t\tangleTo(q) {\n\t\t\treturn 2 * Math.acos(Math.abs(clamp(this.dot(q), -1, 1)));\n\t\t}\n\n\t\trotateTowards(q, step) {\n\t\t\tconst angle = this.angleTo(q);\n\t\t\tif (angle === 0) return this;\n\t\t\tconst t = Math.min(1, step / angle);\n\t\t\tthis.slerp(q, t);\n\t\t\treturn this;\n\t\t}\n\n\t\tidentity() {\n\t\t\treturn this.set(0, 0, 0, 1);\n\t\t}\n\n\t\tinvert() {\n\t\t\t// quaternion is assumed to have unit length\n\t\t\treturn this.conjugate();\n\t\t}\n\n\t\tconjugate() {\n\t\t\tthis._x *= -1;\n\t\t\tthis._y *= -1;\n\t\t\tthis._z *= -1;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\t\t}\n\n\t\tlengthSq() {\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n\t\t}\n\n\t\tnormalize() {\n\t\t\tlet l = this.length();\n\n\t\t\tif (l === 0) {\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\t\t\t} else {\n\t\t\t\tl = 1 / l;\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(q, p) {\n\t\t\tif (p !== undefined) {\n\t\t\t\tconsole.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\n\t\t\t\treturn this.multiplyQuaternions(q, p);\n\t\t\t}\n\n\t\t\treturn this.multiplyQuaternions(this, q);\n\t\t}\n\n\t\tpremultiply(q) {\n\t\t\treturn this.multiplyQuaternions(q, this);\n\t\t}\n\n\t\tmultiplyQuaternions(a, b) {\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\t\t\tconst qax = a._x,\n\t\t\t\t\t\tqay = a._y,\n\t\t\t\t\t\tqaz = a._z,\n\t\t\t\t\t\tqaw = a._w;\n\t\t\tconst qbx = b._x,\n\t\t\t\t\t\tqby = b._y,\n\t\t\t\t\t\tqbz = b._z,\n\t\t\t\t\t\tqbw = b._w;\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tslerp(qb, t) {\n\t\t\tif (t === 0) return this;\n\t\t\tif (t === 1) return this.copy(qb);\n\t\t\tconst x = this._x,\n\t\t\t\t\t\ty = this._y,\n\t\t\t\t\t\tz = this._z,\n\t\t\t\t\t\tw = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif (cosHalfTheta < 0) {\n\t\t\t\tthis._w = -qb._w;\n\t\t\t\tthis._x = -qb._x;\n\t\t\t\tthis._y = -qb._y;\n\t\t\t\tthis._z = -qb._z;\n\t\t\t\tcosHalfTheta = -cosHalfTheta;\n\t\t\t} else {\n\t\t\t\tthis.copy(qb);\n\t\t\t}\n\n\t\t\tif (cosHalfTheta >= 1.0) {\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\t\tif (sqrSinHalfTheta <= Number.EPSILON) {\n\t\t\t\tconst s = 1 - t;\n\t\t\t\tthis._w = s * w + t * this._w;\n\t\t\t\tthis._x = s * x + t * this._x;\n\t\t\t\tthis._y = s * y + t * this._y;\n\t\t\t\tthis._z = s * z + t * this._z;\n\t\t\t\tthis.normalize();\n\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n\t\t\tconst halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n\t\t\tconst ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n\t\t\t\t\t\tratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n\t\t\tthis._w = w * ratioA + this._w * ratioB;\n\t\t\tthis._x = x * ratioA + this._x * ratioB;\n\t\t\tthis._y = y * ratioA + this._y * ratioB;\n\t\t\tthis._z = z * ratioA + this._z * ratioB;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tslerpQuaternions(qa, qb, t) {\n\t\t\treturn this.copy(qa).slerp(qb, t);\n\t\t}\n\n\t\trandom() {\n\t\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t\t// Note, this source uses w, x, y, z ordering,\n\t\t\t// so we swap the order below.\n\t\t\tconst u1 = Math.random();\n\t\t\tconst sqrt1u1 = Math.sqrt(1 - u1);\n\t\t\tconst sqrtu1 = Math.sqrt(u1);\n\t\t\tconst u2 = 2 * Math.PI * Math.random();\n\t\t\tconst u3 = 2 * Math.PI * Math.random();\n\t\t\treturn this.set(sqrt1u1 * Math.cos(u2), sqrtu1 * Math.sin(u3), sqrtu1 * Math.cos(u3), sqrt1u1 * Math.sin(u2));\n\t\t}\n\n\t\tequals(quaternion) {\n\t\t\treturn quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis._x = array[offset];\n\t\t\tthis._y = array[offset + 1];\n\t\t\tthis._z = array[offset + 2];\n\t\t\tthis._w = array[offset + 3];\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this._x;\n\t\t\tarray[offset + 1] = this._y;\n\t\t\tarray[offset + 2] = this._z;\n\t\t\tarray[offset + 3] = this._w;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index) {\n\t\t\tthis._x = attribute.getX(index);\n\t\t\tthis._y = attribute.getY(index);\n\t\t\tthis._z = attribute.getZ(index);\n\t\t\tthis._w = attribute.getW(index);\n\t\t\treturn this;\n\t\t}\n\n\t\t_onChange(callback) {\n\t\t\tthis._onChangeCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\t_onChangeCallback() {}\n\n\t}\n\n\tQuaternion.prototype.isQuaternion = true;\n\n\tclass Vector3 {\n\t\tconstructor(x = 0, y = 0, z = 0) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t}\n\n\t\tset(x, y, z) {\n\t\t\tif (z === undefined) z = this.z; // sprite.scale.set(x,y)\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(x) {\n\t\t\tthis.x = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(y) {\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetZ(z) {\n\t\t\tthis.z = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponent(index, value) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.x = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.y = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tthis.z = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetComponent(index) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn this.x;\n\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this.y;\n\n\t\t\t\tcase 2:\n\t\t\t\t\treturn this.z;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.x, this.y, this.z);\n\t\t}\n\n\t\tcopy(v) {\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\t\treturn this.addVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\treturn this;\n\t\t}\n\n\t\taddVectors(a, b) {\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledVector(v, s) {\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\t\treturn this.subVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubScalar(s) {\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubVectors(a, b) {\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n\t\t\t\treturn this.multiplyVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyVectors(a, b) {\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyEuler(euler) {\n\t\t\tif (!(euler && euler.isEuler)) {\n\t\t\t\tconsole.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion(_quaternion$4.setFromEuler(euler));\n\t\t}\n\n\t\tapplyAxisAngle(axis, angle) {\n\t\t\treturn this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis, angle));\n\t\t}\n\n\t\tapplyMatrix3(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[3] * y + e[6] * z;\n\t\t\tthis.y = e[1] * x + e[4] * y + e[7] * z;\n\t\t\tthis.z = e[2] * x + e[5] * y + e[8] * z;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyNormalMatrix(m) {\n\t\t\treturn this.applyMatrix3(m).normalize();\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst e = m.elements;\n\t\t\tconst w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n\t\t\tthis.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n\t\t\tthis.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n\t\t\tthis.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyQuaternion(q) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst qx = q.x,\n\t\t\t\t\t\tqy = q.y,\n\t\t\t\t\t\tqz = q.z,\n\t\t\t\t\t\tqw = q.w; // calculate quat * vector\n\n\t\t\tconst ix = qw * x + qy * z - qz * y;\n\t\t\tconst iy = qw * y + qz * x - qx * z;\n\t\t\tconst iz = qw * z + qx * y - qy * x;\n\t\t\tconst iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n\t\t\tthis.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n\t\t\tthis.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\t\t\treturn this;\n\t\t}\n\n\t\tproject(camera) {\n\t\t\treturn this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\n\t\t}\n\n\t\tunproject(camera) {\n\t\t\treturn this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\n\t\t}\n\n\t\ttransformDirection(m) {\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[4] * y + e[8] * z;\n\t\t\tthis.y = e[1] * x + e[5] * y + e[9] * z;\n\t\t\tthis.z = e[2] * x + e[6] * y + e[10] * z;\n\t\t\treturn this.normalize();\n\t\t}\n\n\t\tdivide(v) {\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivideScalar(scalar) {\n\t\t\treturn this.multiplyScalar(1 / scalar);\n\t\t}\n\n\t\tmin(v) {\n\t\t\tthis.x = Math.min(this.x, v.x);\n\t\t\tthis.y = Math.min(this.y, v.y);\n\t\t\tthis.z = Math.min(this.z, v.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tmax(v) {\n\t\t\tthis.x = Math.max(this.x, v.x);\n\t\t\tthis.y = Math.max(this.y, v.y);\n\t\t\tthis.z = Math.max(this.z, v.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tclamp(min, max) {\n\t\t\t// assumes min < max, componentwise\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampScalar(minVal, maxVal) {\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampLength(min, max) {\n\t\t\tconst length = this.length();\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t\t}\n\n\t\tfloor() {\n\t\t\tthis.x = Math.floor(this.x);\n\t\t\tthis.y = Math.floor(this.y);\n\t\t\tthis.z = Math.floor(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tceil() {\n\t\t\tthis.x = Math.ceil(this.x);\n\t\t\tthis.y = Math.ceil(this.y);\n\t\t\tthis.z = Math.ceil(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tround() {\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t\tthis.z = Math.round(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\troundToZero() {\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n\t\t\tthis.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.x = -this.x;\n\t\t\tthis.y = -this.y;\n\t\t\tthis.z = -this.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\t\t} // TODO lengthSquared?\n\n\n\t\tlengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t\t}\n\n\t\tmanhattanLength() {\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n\t\t}\n\n\t\tnormalize() {\n\t\t\treturn this.divideScalar(this.length() || 1);\n\t\t}\n\n\t\tsetLength(length) {\n\t\t\treturn this.normalize().multiplyScalar(length);\n\t\t}\n\n\t\tlerp(v, alpha) {\n\t\t\tthis.x += (v.x - this.x) * alpha;\n\t\t\tthis.y += (v.y - this.y) * alpha;\n\t\t\tthis.z += (v.z - this.z) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpVectors(v1, v2, alpha) {\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\n\t\t\tthis.z = v1.z + (v2.z - v1.z) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tcross(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n\t\t\t\treturn this.crossVectors(v, w);\n\t\t\t}\n\n\t\t\treturn this.crossVectors(this, v);\n\t\t}\n\n\t\tcrossVectors(a, b) {\n\t\t\tconst ax = a.x,\n\t\t\t\t\t\tay = a.y,\n\t\t\t\t\t\taz = a.z;\n\t\t\tconst bx = b.x,\n\t\t\t\t\t\tby = b.y,\n\t\t\t\t\t\tbz = b.z;\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\t\t\treturn this;\n\t\t}\n\n\t\tprojectOnVector(v) {\n\t\t\tconst denominator = v.lengthSq();\n\t\t\tif (denominator === 0) return this.set(0, 0, 0);\n\t\t\tconst scalar = v.dot(this) / denominator;\n\t\t\treturn this.copy(v).multiplyScalar(scalar);\n\t\t}\n\n\t\tprojectOnPlane(planeNormal) {\n\t\t\t_vector$c.copy(this).projectOnVector(planeNormal);\n\n\t\t\treturn this.sub(_vector$c);\n\t\t}\n\n\t\treflect(normal) {\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\t\t\treturn this.sub(_vector$c.copy(normal).multiplyScalar(2 * this.dot(normal)));\n\t\t}\n\n\t\tangleTo(v) {\n\t\t\tconst denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\n\t\t\tif (denominator === 0) return Math.PI / 2;\n\t\t\tconst theta = this.dot(v) / denominator; // clamp, to handle numerical problems\n\n\t\t\treturn Math.acos(clamp(theta, -1, 1));\n\t\t}\n\n\t\tdistanceTo(v) {\n\t\t\treturn Math.sqrt(this.distanceToSquared(v));\n\t\t}\n\n\t\tdistanceToSquared(v) {\n\t\t\tconst dx = this.x - v.x,\n\t\t\t\t\t\tdy = this.y - v.y,\n\t\t\t\t\t\tdz = this.z - v.z;\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\t\t}\n\n\t\tmanhattanDistanceTo(v) {\n\t\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n\t\t}\n\n\t\tsetFromSpherical(s) {\n\t\t\treturn this.setFromSphericalCoords(s.radius, s.phi, s.theta);\n\t\t}\n\n\t\tsetFromSphericalCoords(radius, phi, theta) {\n\t\t\tconst sinPhiRadius = Math.sin(phi) * radius;\n\t\t\tthis.x = sinPhiRadius * Math.sin(theta);\n\t\t\tthis.y = Math.cos(phi) * radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos(theta);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCylindrical(c) {\n\t\t\treturn this.setFromCylindricalCoords(c.radius, c.theta, c.y);\n\t\t}\n\n\t\tsetFromCylindricalCoords(radius, theta, y) {\n\t\t\tthis.x = radius * Math.sin(theta);\n\t\t\tthis.y = y;\n\t\t\tthis.z = radius * Math.cos(theta);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrixPosition(m) {\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[12];\n\t\t\tthis.y = e[13];\n\t\t\tthis.z = e[14];\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrixScale(m) {\n\t\t\tconst sx = this.setFromMatrixColumn(m, 0).length();\n\t\t\tconst sy = this.setFromMatrixColumn(m, 1).length();\n\t\t\tconst sz = this.setFromMatrixColumn(m, 2).length();\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrixColumn(m, index) {\n\t\t\treturn this.fromArray(m.elements, index * 4);\n\t\t}\n\n\t\tsetFromMatrix3Column(m, index) {\n\t\t\treturn this.fromArray(m.elements, index * 3);\n\t\t}\n\n\t\tequals(v) {\n\t\t\treturn v.x === this.x && v.y === this.y && v.z === this.z;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.x = array[offset];\n\t\t\tthis.y = array[offset + 1];\n\t\t\tthis.z = array[offset + 2];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.x;\n\t\t\tarray[offset + 1] = this.y;\n\t\t\tarray[offset + 2] = this.z;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index, offset) {\n\t\t\tif (offset !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX(index);\n\t\t\tthis.y = attribute.getY(index);\n\t\t\tthis.z = attribute.getZ(index);\n\t\t\treturn this;\n\t\t}\n\n\t\trandom() {\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\tthis.z = Math.random();\n\t\t\treturn this;\n\t\t}\n\n\t\trandomDirection() {\n\t\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\t\t\tconst u = (Math.random() - 0.5) * 2;\n\t\t\tconst t = Math.random() * Math.PI * 2;\n\t\t\tconst f = Math.sqrt(1 - u ** 2);\n\t\t\tthis.x = f * Math.cos(t);\n\t\t\tthis.y = f * Math.sin(t);\n\t\t\tthis.z = u;\n\t\t\treturn this;\n\t\t}\n\n\t\t*[Symbol.iterator]() {\n\t\t\tyield this.x;\n\t\t\tyield this.y;\n\t\t\tyield this.z;\n\t\t}\n\n\t}\n\n\tVector3.prototype.isVector3 = true;\n\n\tconst _vector$c = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion$4 = /*@__PURE__*/new Quaternion();\n\n\tclass Box3 {\n\t\tconstructor(min = new Vector3(+Infinity, +Infinity, +Infinity), max = new Vector3(-Infinity, -Infinity, -Infinity)) {\n\t\t\tthis.min = min;\n\t\t\tthis.max = max;\n\t\t}\n\n\t\tset(min, max) {\n\t\t\tthis.min.copy(min);\n\t\t\tthis.max.copy(max);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromArray(array) {\n\t\t\tlet minX = +Infinity;\n\t\t\tlet minY = +Infinity;\n\t\t\tlet minZ = +Infinity;\n\t\t\tlet maxX = -Infinity;\n\t\t\tlet maxY = -Infinity;\n\t\t\tlet maxZ = -Infinity;\n\n\t\t\tfor (let i = 0, l = array.length; i < l; i += 3) {\n\t\t\t\tconst x = array[i];\n\t\t\t\tconst y = array[i + 1];\n\t\t\t\tconst z = array[i + 2];\n\t\t\t\tif (x < minX) minX = x;\n\t\t\t\tif (y < minY) minY = y;\n\t\t\t\tif (z < minZ) minZ = z;\n\t\t\t\tif (x > maxX) maxX = x;\n\t\t\t\tif (y > maxY) maxY = y;\n\t\t\t\tif (z > maxZ) maxZ = z;\n\t\t\t}\n\n\t\t\tthis.min.set(minX, minY, minZ);\n\t\t\tthis.max.set(maxX, maxY, maxZ);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromBufferAttribute(attribute) {\n\t\t\tlet minX = +Infinity;\n\t\t\tlet minY = +Infinity;\n\t\t\tlet minZ = +Infinity;\n\t\t\tlet maxX = -Infinity;\n\t\t\tlet maxY = -Infinity;\n\t\t\tlet maxZ = -Infinity;\n\n\t\t\tfor (let i = 0, l = attribute.count; i < l; i++) {\n\t\t\t\tconst x = attribute.getX(i);\n\t\t\t\tconst y = attribute.getY(i);\n\t\t\t\tconst z = attribute.getZ(i);\n\t\t\t\tif (x < minX) minX = x;\n\t\t\t\tif (y < minY) minY = y;\n\t\t\t\tif (z < minZ) minZ = z;\n\t\t\t\tif (x > maxX) maxX = x;\n\t\t\t\tif (y > maxY) maxY = y;\n\t\t\t\tif (z > maxZ) maxZ = z;\n\t\t\t}\n\n\t\t\tthis.min.set(minX, minY, minZ);\n\t\t\tthis.max.set(maxX, maxY, maxZ);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\n\t\t\t\tthis.expandByPoint(points[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCenterAndSize(center, size) {\n\t\t\tconst halfSize = _vector$b.copy(size).multiplyScalar(0.5);\n\n\t\t\tthis.min.copy(center).sub(halfSize);\n\t\t\tthis.max.copy(center).add(halfSize);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromObject(object, precise = false) {\n\t\t\tthis.makeEmpty();\n\t\t\treturn this.expandByObject(object, precise);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(box) {\n\t\t\tthis.min.copy(box.min);\n\t\t\tthis.max.copy(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeEmpty() {\n\t\t\tthis.min.x = this.min.y = this.min.z = +Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = -Infinity;\n\t\t\treturn this;\n\t\t}\n\n\t\tisEmpty() {\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\t\t\treturn this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n\t\t}\n\n\t\tgetCenter(target) {\n\t\t\treturn this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n\t\t}\n\n\t\tgetSize(target) {\n\t\t\treturn this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);\n\t\t}\n\n\t\texpandByPoint(point) {\n\t\t\tthis.min.min(point);\n\t\t\tthis.max.max(point);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByVector(vector) {\n\t\t\tthis.min.sub(vector);\n\t\t\tthis.max.add(vector);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByScalar(scalar) {\n\t\t\tthis.min.addScalar(-scalar);\n\t\t\tthis.max.addScalar(scalar);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByObject(object, precise = false) {\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\t\t\tobject.updateWorldMatrix(false, false);\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif (geometry !== undefined) {\n\t\t\t\tif (precise && geometry.attributes != undefined && geometry.attributes.position !== undefined) {\n\t\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\t\tfor (let i = 0, l = position.count; i < l; i++) {\n\t\t\t\t\t\t_vector$b.fromBufferAttribute(position, i).applyMatrix4(object.matrixWorld);\n\n\t\t\t\t\t\tthis.expandByPoint(_vector$b);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (geometry.boundingBox === null) {\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$3.copy(geometry.boundingBox);\n\n\t\t\t\t\t_box$3.applyMatrix4(object.matrixWorld);\n\n\t\t\t\t\tthis.union(_box$3);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tthis.expandByObject(children[i], precise);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z ? false : true;\n\t\t}\n\n\t\tcontainsBox(box) {\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;\n\t\t}\n\n\t\tgetParameter(point, target) {\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\t\t\treturn target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\t// using 6 splitting planes to rule out intersections.\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint(sphere.center, _vector$b); // If that point is inside the sphere, the AABB and sphere intersect.\n\n\t\t\treturn _vector$b.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n\t\t}\n\n\t\tintersectsPlane(plane) {\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\t\t\tlet min, max;\n\n\t\t\tif (plane.normal.x > 0) {\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\t\t\t} else {\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\t\t\t}\n\n\t\t\tif (plane.normal.y > 0) {\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\t\t\t} else {\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\t\t\t}\n\n\t\t\tif (plane.normal.z > 0) {\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\t\t\t} else {\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\t\t\t}\n\n\t\t\treturn min <= -plane.constant && max >= -plane.constant;\n\t\t}\n\n\t\tintersectsTriangle(triangle) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t} // compute box center and extents\n\n\n\t\t\tthis.getCenter(_center);\n\n\t\t\t_extents.subVectors(this.max, _center); // translate triangle to aabb origin\n\n\n\t\t\t_v0$2.subVectors(triangle.a, _center);\n\n\t\t\t_v1$7.subVectors(triangle.b, _center);\n\n\t\t\t_v2$3.subVectors(triangle.c, _center); // compute edge vectors for triangle\n\n\n\t\t\t_f0.subVectors(_v1$7, _v0$2);\n\n\t\t\t_f1.subVectors(_v2$3, _v1$7);\n\n\t\t\t_f2.subVectors(_v0$2, _v2$3); // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\n\n\t\t\tlet axes = [0, -_f0.z, _f0.y, 0, -_f1.z, _f1.y, 0, -_f2.z, _f2.y, _f0.z, 0, -_f0.x, _f1.z, 0, -_f1.x, _f2.z, 0, -_f2.x, -_f0.y, _f0.x, 0, -_f1.y, _f1.x, 0, -_f2.y, _f2.x, 0];\n\n\t\t\tif (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\n\t\t\t\treturn false;\n\t\t\t} // test 3 face normals from the aabb\n\n\n\t\t\taxes = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n\t\t\tif (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\n\t\t\t\treturn false;\n\t\t\t} // finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\n\n\t\t\t_triangleNormal.crossVectors(_f0, _f1);\n\n\t\t\taxes = [_triangleNormal.x, _triangleNormal.y, _triangleNormal.z];\n\t\t\treturn satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents);\n\t\t}\n\n\t\tclampPoint(point, target) {\n\t\t\treturn target.copy(point).clamp(this.min, this.max);\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\tconst clampedPoint = _vector$b.copy(point).clamp(this.min, this.max);\n\n\t\t\treturn clampedPoint.sub(point).length();\n\t\t}\n\n\t\tgetBoundingSphere(target) {\n\t\t\tthis.getCenter(target.center);\n\t\t\ttarget.radius = this.getSize(_vector$b).length() * 0.5;\n\t\t\treturn target;\n\t\t}\n\n\t\tintersect(box) {\n\t\t\tthis.min.max(box.min);\n\t\t\tthis.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\n\t\t\tif (this.isEmpty()) this.makeEmpty();\n\t\t\treturn this;\n\t\t}\n\n\t\tunion(box) {\n\t\t\tthis.min.min(box.min);\n\t\t\tthis.max.max(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif (this.isEmpty()) return this; // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\n\t\t\t_points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n\n\t\t\t_points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n\n\t\t\t_points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n\n\t\t\t_points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n\n\t\t\t_points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n\n\t\t\t_points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n\n\t\t\t_points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n\n\t\t\t_points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n\n\t\t\tthis.setFromPoints(_points);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.min.add(offset);\n\t\t\tthis.max.add(offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(box) {\n\t\t\treturn box.min.equals(this.min) && box.max.equals(this.max);\n\t\t}\n\n\t}\n\n\tBox3.prototype.isBox3 = true;\n\tconst _points = [/*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3()];\n\n\tconst _vector$b = /*@__PURE__*/new Vector3();\n\n\tconst _box$3 = /*@__PURE__*/new Box3(); // triangle centered vertices\n\n\n\tconst _v0$2 = /*@__PURE__*/new Vector3();\n\n\tconst _v1$7 = /*@__PURE__*/new Vector3();\n\n\tconst _v2$3 = /*@__PURE__*/new Vector3(); // triangle edge vectors\n\n\n\tconst _f0 = /*@__PURE__*/new Vector3();\n\n\tconst _f1 = /*@__PURE__*/new Vector3();\n\n\tconst _f2 = /*@__PURE__*/new Vector3();\n\n\tconst _center = /*@__PURE__*/new Vector3();\n\n\tconst _extents = /*@__PURE__*/new Vector3();\n\n\tconst _triangleNormal = /*@__PURE__*/new Vector3();\n\n\tconst _testAxis = /*@__PURE__*/new Vector3();\n\n\tfunction satForAxes(axes, v0, v1, v2, extents) {\n\t\tfor (let i = 0, j = axes.length - 3; i <= j; i += 3) {\n\t\t\t_testAxis.fromArray(axes, i); // project the aabb onto the seperating axis\n\n\n\t\t\tconst r = extents.x * Math.abs(_testAxis.x) + extents.y * Math.abs(_testAxis.y) + extents.z * Math.abs(_testAxis.z); // project all 3 vertices of the triangle onto the seperating axis\n\n\t\t\tconst p0 = v0.dot(_testAxis);\n\t\t\tconst p1 = v1.dot(_testAxis);\n\t\t\tconst p2 = v2.dot(_testAxis); // actual test, basically see if either of the most extreme of the triangle points intersects r\n\n\t\t\tif (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {\n\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tconst _box$2 = /*@__PURE__*/new Box3();\n\n\tconst _v1$6 = /*@__PURE__*/new Vector3();\n\n\tconst _toFarthestPoint = /*@__PURE__*/new Vector3();\n\n\tconst _toPoint = /*@__PURE__*/new Vector3();\n\n\tclass Sphere {\n\t\tconstructor(center = new Vector3(), radius = -1) {\n\t\t\tthis.center = center;\n\t\t\tthis.radius = radius;\n\t\t}\n\n\t\tset(center, radius) {\n\t\t\tthis.center.copy(center);\n\t\t\tthis.radius = radius;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points, optionalCenter) {\n\t\t\tconst center = this.center;\n\n\t\t\tif (optionalCenter !== undefined) {\n\t\t\t\tcenter.copy(optionalCenter);\n\t\t\t} else {\n\t\t\t\t_box$2.setFromPoints(points).getCenter(center);\n\t\t\t}\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\n\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt(maxRadiusSq);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(sphere) {\n\t\t\tthis.center.copy(sphere.center);\n\t\t\tthis.radius = sphere.radius;\n\t\t\treturn this;\n\t\t}\n\n\t\tisEmpty() {\n\t\t\treturn this.radius < 0;\n\t\t}\n\n\t\tmakeEmpty() {\n\t\t\tthis.center.set(0, 0, 0);\n\t\t\tthis.radius = -1;\n\t\t\treturn this;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn point.distanceToSquared(this.center) <= this.radius * this.radius;\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\treturn point.distanceTo(this.center) - this.radius;\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\tconst radiusSum = this.radius + sphere.radius;\n\t\t\treturn sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn box.intersectsSphere(this);\n\t\t}\n\n\t\tintersectsPlane(plane) {\n\t\t\treturn Math.abs(plane.distanceToPoint(this.center)) <= this.radius;\n\t\t}\n\n\t\tclampPoint(point, target) {\n\t\t\tconst deltaLengthSq = this.center.distanceToSquared(point);\n\t\t\ttarget.copy(point);\n\n\t\t\tif (deltaLengthSq > this.radius * this.radius) {\n\t\t\t\ttarget.sub(this.center).normalize();\n\t\t\t\ttarget.multiplyScalar(this.radius).add(this.center);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\tgetBoundingBox(target) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\t// Empty sphere produces empty bounding box\n\t\t\t\ttarget.makeEmpty();\n\t\t\t\treturn target;\n\t\t\t}\n\n\t\t\ttarget.set(this.center, this.center);\n\t\t\ttarget.expandByScalar(this.radius);\n\t\t\treturn target;\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tthis.center.applyMatrix4(matrix);\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.center.add(offset);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByPoint(point) {\n\t\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n\t\t\t_toPoint.subVectors(point, this.center);\n\n\t\t\tconst lengthSq = _toPoint.lengthSq();\n\n\t\t\tif (lengthSq > this.radius * this.radius) {\n\t\t\t\tconst length = Math.sqrt(lengthSq);\n\t\t\t\tconst missingRadiusHalf = (length - this.radius) * 0.5; // Nudge this sphere towards the target point. Add half the missing distance to radius,\n\t\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\n\t\t\t\t// the whole missing distance were just added to radius.\n\n\t\t\t\tthis.center.add(_toPoint.multiplyScalar(missingRadiusHalf / length));\n\t\t\t\tthis.radius += missingRadiusHalf;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tunion(sphere) {\n\t\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n\t\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\n\t\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\n\t\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\n\t\t\tif (this.center.equals(sphere.center) === true) {\n\t\t\t\t_toFarthestPoint.set(0, 0, 1).multiplyScalar(sphere.radius);\n\t\t\t} else {\n\t\t\t\t_toFarthestPoint.subVectors(sphere.center, this.center).normalize().multiplyScalar(sphere.radius);\n\t\t\t}\n\n\t\t\tthis.expandByPoint(_v1$6.copy(sphere.center).add(_toFarthestPoint));\n\t\t\tthis.expandByPoint(_v1$6.copy(sphere.center).sub(_toFarthestPoint));\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(sphere) {\n\t\t\treturn sphere.center.equals(this.center) && sphere.radius === this.radius;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tconst _vector$a = /*@__PURE__*/new Vector3();\n\n\tconst _segCenter = /*@__PURE__*/new Vector3();\n\n\tconst _segDir = /*@__PURE__*/new Vector3();\n\n\tconst _diff = /*@__PURE__*/new Vector3();\n\n\tconst _edge1 = /*@__PURE__*/new Vector3();\n\n\tconst _edge2 = /*@__PURE__*/new Vector3();\n\n\tconst _normal$1 = /*@__PURE__*/new Vector3();\n\n\tclass Ray {\n\t\tconstructor(origin = new Vector3(), direction = new Vector3(0, 0, -1)) {\n\t\t\tthis.origin = origin;\n\t\t\tthis.direction = direction;\n\t\t}\n\n\t\tset(origin, direction) {\n\t\t\tthis.origin.copy(origin);\n\t\t\tthis.direction.copy(direction);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(ray) {\n\t\t\tthis.origin.copy(ray.origin);\n\t\t\tthis.direction.copy(ray.direction);\n\t\t\treturn this;\n\t\t}\n\n\t\tat(t, target) {\n\t\t\treturn target.copy(this.direction).multiplyScalar(t).add(this.origin);\n\t\t}\n\n\t\tlookAt(v) {\n\t\t\tthis.direction.copy(v).sub(this.origin).normalize();\n\t\t\treturn this;\n\t\t}\n\n\t\trecast(t) {\n\t\t\tthis.origin.copy(this.at(t, _vector$a));\n\t\t\treturn this;\n\t\t}\n\n\t\tclosestPointToPoint(point, target) {\n\t\t\ttarget.subVectors(point, this.origin);\n\t\t\tconst directionDistance = target.dot(this.direction);\n\n\t\t\tif (directionDistance < 0) {\n\t\t\t\treturn target.copy(this.origin);\n\t\t\t}\n\n\t\t\treturn target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\treturn Math.sqrt(this.distanceSqToPoint(point));\n\t\t}\n\n\t\tdistanceSqToPoint(point) {\n\t\t\tconst directionDistance = _vector$a.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n\n\t\t\tif (directionDistance < 0) {\n\t\t\t\treturn this.origin.distanceToSquared(point);\n\t\t\t}\n\n\t\t\t_vector$a.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n\n\t\t\treturn _vector$a.distanceToSquared(point);\n\t\t}\n\n\t\tdistanceSqToSegment(v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n\t\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\t\t\t_segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n\n\t\t\t_segDir.copy(v1).sub(v0).normalize();\n\n\t\t\t_diff.copy(this.origin).sub(_segCenter);\n\n\t\t\tconst segExtent = v0.distanceTo(v1) * 0.5;\n\t\t\tconst a01 = -this.direction.dot(_segDir);\n\n\t\t\tconst b0 = _diff.dot(this.direction);\n\n\t\t\tconst b1 = -_diff.dot(_segDir);\n\n\t\t\tconst c = _diff.lengthSq();\n\n\t\t\tconst det = Math.abs(1 - a01 * a01);\n\t\t\tlet s0, s1, sqrDist, extDet;\n\n\t\t\tif (det > 0) {\n\t\t\t\t// The ray and segment are not parallel.\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif (s0 >= 0) {\n\t\t\t\t\tif (s1 >= -extDet) {\n\t\t\t\t\t\tif (s1 <= extDet) {\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\t\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// region 1\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\n\t\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// region 5\n\t\t\t\t\t\ts1 = -segExtent;\n\t\t\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (s1 <= -extDet) {\n\t\t\t\t\t\t// region 4\n\t\t\t\t\t\ts0 = Math.max(0, -(-a01 * segExtent + b0));\n\t\t\t\t\t\ts1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t} else if (s1 <= extDet) {\n\t\t\t\t\t\t// region 3\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n\t\t\t\t\t\tsqrDist = s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// region 2\n\t\t\t\t\t\ts0 = Math.max(0, -(a01 * segExtent + b0));\n\t\t\t\t\t\ts1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Ray and segment are parallel.\n\t\t\t\ts1 = a01 > 0 ? -segExtent : segExtent;\n\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\n\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t}\n\n\t\t\tif (optionalPointOnRay) {\n\t\t\t\toptionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n\t\t\t}\n\n\t\t\tif (optionalPointOnSegment) {\n\t\t\t\toptionalPointOnSegment.copy(_segDir).multiplyScalar(s1).add(_segCenter);\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\t\t}\n\n\t\tintersectSphere(sphere, target) {\n\t\t\t_vector$a.subVectors(sphere.center, this.origin);\n\n\t\t\tconst tca = _vector$a.dot(this.direction);\n\n\t\t\tconst d2 = _vector$a.dot(_vector$a) - tca * tca;\n\t\t\tconst radius2 = sphere.radius * sphere.radius;\n\t\t\tif (d2 > radius2) return null;\n\t\t\tconst thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n\t\t\tconst t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n\t\t\tconst t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n\t\t\tif (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\n\t\t\tif (t0 < 0) return this.at(t1, target); // else t0 is in front of the ray, so return the first collision point scaled by t0\n\n\t\t\treturn this.at(t0, target);\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\treturn this.distanceSqToPoint(sphere.center) <= sphere.radius * sphere.radius;\n\t\t}\n\n\t\tdistanceToPlane(plane) {\n\t\t\tconst denominator = plane.normal.dot(this.direction);\n\n\t\t\tif (denominator === 0) {\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif (plane.distanceToPoint(this.origin) === 0) {\n\t\t\t\t\treturn 0;\n\t\t\t\t} // Null is preferable to undefined since undefined means.... it is undefined\n\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t : null;\n\t\t}\n\n\t\tintersectPlane(plane, target) {\n\t\t\tconst t = this.distanceToPlane(plane);\n\n\t\t\tif (t === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn this.at(t, target);\n\t\t}\n\n\t\tintersectsPlane(plane) {\n\t\t\t// check if the ray lies on the plane first\n\t\t\tconst distToPoint = plane.distanceToPoint(this.origin);\n\n\t\t\tif (distToPoint === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst denominator = plane.normal.dot(this.direction);\n\n\t\t\tif (denominator * distToPoint < 0) {\n\t\t\t\treturn true;\n\t\t\t} // ray origin is behind the plane (and is pointing behind it)\n\n\n\t\t\treturn false;\n\t\t}\n\n\t\tintersectBox(box, target) {\n\t\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\t\t\tconst invdirx = 1 / this.direction.x,\n\t\t\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\t\t\tinvdirz = 1 / this.direction.z;\n\t\t\tconst origin = this.origin;\n\n\t\t\tif (invdirx >= 0) {\n\t\t\t\ttmin = (box.min.x - origin.x) * invdirx;\n\t\t\t\ttmax = (box.max.x - origin.x) * invdirx;\n\t\t\t} else {\n\t\t\t\ttmin = (box.max.x - origin.x) * invdirx;\n\t\t\t\ttmax = (box.min.x - origin.x) * invdirx;\n\t\t\t}\n\n\t\t\tif (invdiry >= 0) {\n\t\t\t\ttymin = (box.min.y - origin.y) * invdiry;\n\t\t\t\ttymax = (box.max.y - origin.y) * invdiry;\n\t\t\t} else {\n\t\t\t\ttymin = (box.max.y - origin.y) * invdiry;\n\t\t\t\ttymax = (box.min.y - origin.y) * invdiry;\n\t\t\t}\n\n\t\t\tif (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\t\tif (tymin > tmin || tmin !== tmin) tmin = tymin;\n\t\t\tif (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n\t\t\tif (invdirz >= 0) {\n\t\t\t\ttzmin = (box.min.z - origin.z) * invdirz;\n\t\t\t\ttzmax = (box.max.z - origin.z) * invdirz;\n\t\t\t} else {\n\t\t\t\ttzmin = (box.max.z - origin.z) * invdirz;\n\t\t\t\ttzmax = (box.min.z - origin.z) * invdirz;\n\t\t\t}\n\n\t\t\tif (tmin > tzmax || tzmin > tmax) return null;\n\t\t\tif (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n\t\t\tif (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\n\n\t\t\tif (tmax < 0) return null;\n\t\t\treturn this.at(tmin >= 0 ? tmin : tmax, target);\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn this.intersectBox(box, _vector$a) !== null;\n\t\t}\n\n\t\tintersectTriangle(a, b, c, backfaceCulling, target) {\n\t\t\t// Compute the offset origin, edges, and normal.\n\t\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\t\t\t_edge1.subVectors(b, a);\n\n\t\t\t_edge2.subVectors(c, a);\n\n\t\t\t_normal$1.crossVectors(_edge1, _edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//\t |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//\t |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//\t |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n\n\t\t\tlet DdN = this.direction.dot(_normal$1);\n\t\t\tlet sign;\n\n\t\t\tif (DdN > 0) {\n\t\t\t\tif (backfaceCulling) return null;\n\t\t\t\tsign = 1;\n\t\t\t} else if (DdN < 0) {\n\t\t\t\tsign = -1;\n\t\t\t\tDdN = -DdN;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t_diff.subVectors(this.origin, a);\n\n\t\t\tconst DdQxE2 = sign * this.direction.dot(_edge2.crossVectors(_diff, _edge2)); // b1 < 0, no intersection\n\n\t\t\tif (DdQxE2 < 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst DdE1xQ = sign * this.direction.dot(_edge1.cross(_diff)); // b2 < 0, no intersection\n\n\t\t\tif (DdE1xQ < 0) {\n\t\t\t\treturn null;\n\t\t\t} // b1+b2 > 1, no intersection\n\n\n\t\t\tif (DdQxE2 + DdE1xQ > DdN) {\n\t\t\t\treturn null;\n\t\t\t} // Line intersects triangle, check if ray does.\n\n\n\t\t\tconst QdN = -sign * _diff.dot(_normal$1); // t < 0, no intersection\n\n\n\t\t\tif (QdN < 0) {\n\t\t\t\treturn null;\n\t\t\t} // Ray intersects triangle.\n\n\n\t\t\treturn this.at(QdN / DdN, target);\n\t\t}\n\n\t\tapplyMatrix4(matrix4) {\n\t\t\tthis.origin.applyMatrix4(matrix4);\n\t\t\tthis.direction.transformDirection(matrix4);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(ray) {\n\t\t\treturn ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tclass Matrix4 {\n\t\tconstructor() {\n\t\t\tthis.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n\t\t\tif (arguments.length > 0) {\n\t\t\t\tconsole.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n\t\t\t}\n\t\t}\n\n\t\tset(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] = n11;\n\t\t\tte[4] = n12;\n\t\t\tte[8] = n13;\n\t\t\tte[12] = n14;\n\t\t\tte[1] = n21;\n\t\t\tte[5] = n22;\n\t\t\tte[9] = n23;\n\t\t\tte[13] = n24;\n\t\t\tte[2] = n31;\n\t\t\tte[6] = n32;\n\t\t\tte[10] = n33;\n\t\t\tte[14] = n34;\n\t\t\tte[3] = n41;\n\t\t\tte[7] = n42;\n\t\t\tte[11] = n43;\n\t\t\tte[15] = n44;\n\t\t\treturn this;\n\t\t}\n\n\t\tidentity() {\n\t\t\tthis.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Matrix4().fromArray(this.elements);\n\t\t}\n\n\t\tcopy(m) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = m.elements;\n\t\t\tte[0] = me[0];\n\t\t\tte[1] = me[1];\n\t\t\tte[2] = me[2];\n\t\t\tte[3] = me[3];\n\t\t\tte[4] = me[4];\n\t\t\tte[5] = me[5];\n\t\t\tte[6] = me[6];\n\t\t\tte[7] = me[7];\n\t\t\tte[8] = me[8];\n\t\t\tte[9] = me[9];\n\t\t\tte[10] = me[10];\n\t\t\tte[11] = me[11];\n\t\t\tte[12] = me[12];\n\t\t\tte[13] = me[13];\n\t\t\tte[14] = me[14];\n\t\t\tte[15] = me[15];\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyPosition(m) {\n\t\t\tconst te = this.elements,\n\t\t\t\t\t\tme = m.elements;\n\t\t\tte[12] = me[12];\n\t\t\tte[13] = me[13];\n\t\t\tte[14] = me[14];\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrix3(m) {\n\t\t\tconst me = m.elements;\n\t\t\tthis.set(me[0], me[3], me[6], 0, me[1], me[4], me[7], 0, me[2], me[5], me[8], 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\textractBasis(xAxis, yAxis, zAxis) {\n\t\t\txAxis.setFromMatrixColumn(this, 0);\n\t\t\tyAxis.setFromMatrixColumn(this, 1);\n\t\t\tzAxis.setFromMatrixColumn(this, 2);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeBasis(xAxis, yAxis, zAxis) {\n\t\t\tthis.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\textractRotation(m) {\n\t\t\t// this method does not support reflection matrices\n\t\t\tconst te = this.elements;\n\t\t\tconst me = m.elements;\n\n\t\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn(m, 0).length();\n\n\t\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn(m, 1).length();\n\n\t\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn(m, 2).length();\n\n\t\t\tte[0] = me[0] * scaleX;\n\t\t\tte[1] = me[1] * scaleX;\n\t\t\tte[2] = me[2] * scaleX;\n\t\t\tte[3] = 0;\n\t\t\tte[4] = me[4] * scaleY;\n\t\t\tte[5] = me[5] * scaleY;\n\t\t\tte[6] = me[6] * scaleY;\n\t\t\tte[7] = 0;\n\t\t\tte[8] = me[8] * scaleZ;\n\t\t\tte[9] = me[9] * scaleZ;\n\t\t\tte[10] = me[10] * scaleZ;\n\t\t\tte[11] = 0;\n\t\t\tte[12] = 0;\n\t\t\tte[13] = 0;\n\t\t\tte[14] = 0;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationFromEuler(euler) {\n\t\t\tif (!(euler && euler.isEuler)) {\n\t\t\t\tconsole.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n\t\t\t}\n\n\t\t\tconst te = this.elements;\n\t\t\tconst x = euler.x,\n\t\t\t\t\t\ty = euler.y,\n\t\t\t\t\t\tz = euler.z;\n\t\t\tconst a = Math.cos(x),\n\t\t\t\t\t\tb = Math.sin(x);\n\t\t\tconst c = Math.cos(y),\n\t\t\t\t\t\td = Math.sin(y);\n\t\t\tconst e = Math.cos(z),\n\t\t\t\t\t\tf = Math.sin(z);\n\n\t\t\tif (euler.order === 'XYZ') {\n\t\t\t\tconst ae = a * e,\n\t\t\t\t\t\t\taf = a * f,\n\t\t\t\t\t\t\tbe = b * e,\n\t\t\t\t\t\t\tbf = b * f;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = -c * f;\n\t\t\t\tte[8] = d;\n\t\t\t\tte[1] = af + be * d;\n\t\t\t\tte[5] = ae - bf * d;\n\t\t\t\tte[9] = -b * c;\n\t\t\t\tte[2] = bf - ae * d;\n\t\t\t\tte[6] = be + af * d;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'YXZ') {\n\t\t\t\tconst ce = c * e,\n\t\t\t\t\t\t\tcf = c * f,\n\t\t\t\t\t\t\tde = d * e,\n\t\t\t\t\t\t\tdf = d * f;\n\t\t\t\tte[0] = ce + df * b;\n\t\t\t\tte[4] = de * b - cf;\n\t\t\t\tte[8] = a * d;\n\t\t\t\tte[1] = a * f;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = -b;\n\t\t\t\tte[2] = cf * b - de;\n\t\t\t\tte[6] = df + ce * b;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'ZXY') {\n\t\t\t\tconst ce = c * e,\n\t\t\t\t\t\t\tcf = c * f,\n\t\t\t\t\t\t\tde = d * e,\n\t\t\t\t\t\t\tdf = d * f;\n\t\t\t\tte[0] = ce - df * b;\n\t\t\t\tte[4] = -a * f;\n\t\t\t\tte[8] = de + cf * b;\n\t\t\t\tte[1] = cf + de * b;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = df - ce * b;\n\t\t\t\tte[2] = -a * d;\n\t\t\t\tte[6] = b;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'ZYX') {\n\t\t\t\tconst ae = a * e,\n\t\t\t\t\t\t\taf = a * f,\n\t\t\t\t\t\t\tbe = b * e,\n\t\t\t\t\t\t\tbf = b * f;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = be * d - af;\n\t\t\t\tte[8] = ae * d + bf;\n\t\t\t\tte[1] = c * f;\n\t\t\t\tte[5] = bf * d + ae;\n\t\t\t\tte[9] = af * d - be;\n\t\t\t\tte[2] = -d;\n\t\t\t\tte[6] = b * c;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'YZX') {\n\t\t\t\tconst ac = a * c,\n\t\t\t\t\t\t\tad = a * d,\n\t\t\t\t\t\t\tbc = b * c,\n\t\t\t\t\t\t\tbd = b * d;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = bd - ac * f;\n\t\t\t\tte[8] = bc * f + ad;\n\t\t\t\tte[1] = f;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = -b * e;\n\t\t\t\tte[2] = -d * e;\n\t\t\t\tte[6] = ad * f + bc;\n\t\t\t\tte[10] = ac - bd * f;\n\t\t\t} else if (euler.order === 'XZY') {\n\t\t\t\tconst ac = a * c,\n\t\t\t\t\t\t\tad = a * d,\n\t\t\t\t\t\t\tbc = b * c,\n\t\t\t\t\t\t\tbd = b * d;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = -f;\n\t\t\t\tte[8] = d * e;\n\t\t\t\tte[1] = ac * f + bd;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = ad * f - bc;\n\t\t\t\tte[2] = bc * f - ad;\n\t\t\t\tte[6] = b * e;\n\t\t\t\tte[10] = bd * f + ac;\n\t\t\t} // bottom row\n\n\n\t\t\tte[3] = 0;\n\t\t\tte[7] = 0;\n\t\t\tte[11] = 0; // last column\n\n\t\t\tte[12] = 0;\n\t\t\tte[13] = 0;\n\t\t\tte[14] = 0;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationFromQuaternion(q) {\n\t\t\treturn this.compose(_zero, q, _one);\n\t\t}\n\n\t\tlookAt(eye, target, up) {\n\t\t\tconst te = this.elements;\n\n\t\t\t_z.subVectors(eye, target);\n\n\t\t\tif (_z.lengthSq() === 0) {\n\t\t\t\t// eye and target are in the same position\n\t\t\t\t_z.z = 1;\n\t\t\t}\n\n\t\t\t_z.normalize();\n\n\t\t\t_x.crossVectors(up, _z);\n\n\t\t\tif (_x.lengthSq() === 0) {\n\t\t\t\t// up and z are parallel\n\t\t\t\tif (Math.abs(up.z) === 1) {\n\t\t\t\t\t_z.x += 0.0001;\n\t\t\t\t} else {\n\t\t\t\t\t_z.z += 0.0001;\n\t\t\t\t}\n\n\t\t\t\t_z.normalize();\n\n\t\t\t\t_x.crossVectors(up, _z);\n\t\t\t}\n\n\t\t\t_x.normalize();\n\n\t\t\t_y.crossVectors(_z, _x);\n\n\t\t\tte[0] = _x.x;\n\t\t\tte[4] = _y.x;\n\t\t\tte[8] = _z.x;\n\t\t\tte[1] = _x.y;\n\t\t\tte[5] = _y.y;\n\t\t\tte[9] = _z.y;\n\t\t\tte[2] = _x.z;\n\t\t\tte[6] = _y.z;\n\t\t\tte[10] = _z.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(m, n) {\n\t\t\tif (n !== undefined) {\n\t\t\t\tconsole.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n\t\t\t\treturn this.multiplyMatrices(m, n);\n\t\t\t}\n\n\t\t\treturn this.multiplyMatrices(this, m);\n\t\t}\n\n\t\tpremultiply(m) {\n\t\t\treturn this.multiplyMatrices(m, this);\n\t\t}\n\n\t\tmultiplyMatrices(a, b) {\n\t\t\tconst ae = a.elements;\n\t\t\tconst be = b.elements;\n\t\t\tconst te = this.elements;\n\t\t\tconst a11 = ae[0],\n\t\t\t\t\t\ta12 = ae[4],\n\t\t\t\t\t\ta13 = ae[8],\n\t\t\t\t\t\ta14 = ae[12];\n\t\t\tconst a21 = ae[1],\n\t\t\t\t\t\ta22 = ae[5],\n\t\t\t\t\t\ta23 = ae[9],\n\t\t\t\t\t\ta24 = ae[13];\n\t\t\tconst a31 = ae[2],\n\t\t\t\t\t\ta32 = ae[6],\n\t\t\t\t\t\ta33 = ae[10],\n\t\t\t\t\t\ta34 = ae[14];\n\t\t\tconst a41 = ae[3],\n\t\t\t\t\t\ta42 = ae[7],\n\t\t\t\t\t\ta43 = ae[11],\n\t\t\t\t\t\ta44 = ae[15];\n\t\t\tconst b11 = be[0],\n\t\t\t\t\t\tb12 = be[4],\n\t\t\t\t\t\tb13 = be[8],\n\t\t\t\t\t\tb14 = be[12];\n\t\t\tconst b21 = be[1],\n\t\t\t\t\t\tb22 = be[5],\n\t\t\t\t\t\tb23 = be[9],\n\t\t\t\t\t\tb24 = be[13];\n\t\t\tconst b31 = be[2],\n\t\t\t\t\t\tb32 = be[6],\n\t\t\t\t\t\tb33 = be[10],\n\t\t\t\t\t\tb34 = be[14];\n\t\t\tconst b41 = be[3],\n\t\t\t\t\t\tb42 = be[7],\n\t\t\t\t\t\tb43 = be[11],\n\t\t\t\t\t\tb44 = be[15];\n\t\t\tte[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\t\t\tte[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\t\t\tte[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\t\t\tte[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(s) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] *= s;\n\t\t\tte[4] *= s;\n\t\t\tte[8] *= s;\n\t\t\tte[12] *= s;\n\t\t\tte[1] *= s;\n\t\t\tte[5] *= s;\n\t\t\tte[9] *= s;\n\t\t\tte[13] *= s;\n\t\t\tte[2] *= s;\n\t\t\tte[6] *= s;\n\t\t\tte[10] *= s;\n\t\t\tte[14] *= s;\n\t\t\tte[3] *= s;\n\t\t\tte[7] *= s;\n\t\t\tte[11] *= s;\n\t\t\tte[15] *= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tdeterminant() {\n\t\t\tconst te = this.elements;\n\t\t\tconst n11 = te[0],\n\t\t\t\t\t\tn12 = te[4],\n\t\t\t\t\t\tn13 = te[8],\n\t\t\t\t\t\tn14 = te[12];\n\t\t\tconst n21 = te[1],\n\t\t\t\t\t\tn22 = te[5],\n\t\t\t\t\t\tn23 = te[9],\n\t\t\t\t\t\tn24 = te[13];\n\t\t\tconst n31 = te[2],\n\t\t\t\t\t\tn32 = te[6],\n\t\t\t\t\t\tn33 = te[10],\n\t\t\t\t\t\tn34 = te[14];\n\t\t\tconst n41 = te[3],\n\t\t\t\t\t\tn42 = te[7],\n\t\t\t\t\t\tn43 = te[11],\n\t\t\t\t\t\tn44 = te[15]; //TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n\t\t}\n\n\t\ttranspose() {\n\t\t\tconst te = this.elements;\n\t\t\tlet tmp;\n\t\t\ttmp = te[1];\n\t\t\tte[1] = te[4];\n\t\t\tte[4] = tmp;\n\t\t\ttmp = te[2];\n\t\t\tte[2] = te[8];\n\t\t\tte[8] = tmp;\n\t\t\ttmp = te[6];\n\t\t\tte[6] = te[9];\n\t\t\tte[9] = tmp;\n\t\t\ttmp = te[3];\n\t\t\tte[3] = te[12];\n\t\t\tte[12] = tmp;\n\t\t\ttmp = te[7];\n\t\t\tte[7] = te[13];\n\t\t\tte[13] = tmp;\n\t\t\ttmp = te[11];\n\t\t\tte[11] = te[14];\n\t\t\tte[14] = tmp;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetPosition(x, y, z) {\n\t\t\tconst te = this.elements;\n\n\t\t\tif (x.isVector3) {\n\t\t\t\tte[12] = x.x;\n\t\t\t\tte[13] = x.y;\n\t\t\t\tte[14] = x.z;\n\t\t\t} else {\n\t\t\t\tte[12] = x;\n\t\t\t\tte[13] = y;\n\t\t\t\tte[14] = z;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tinvert() {\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tconst te = this.elements,\n\t\t\t\t\t\tn11 = te[0],\n\t\t\t\t\t\tn21 = te[1],\n\t\t\t\t\t\tn31 = te[2],\n\t\t\t\t\t\tn41 = te[3],\n\t\t\t\t\t\tn12 = te[4],\n\t\t\t\t\t\tn22 = te[5],\n\t\t\t\t\t\tn32 = te[6],\n\t\t\t\t\t\tn42 = te[7],\n\t\t\t\t\t\tn13 = te[8],\n\t\t\t\t\t\tn23 = te[9],\n\t\t\t\t\t\tn33 = te[10],\n\t\t\t\t\t\tn43 = te[11],\n\t\t\t\t\t\tn14 = te[12],\n\t\t\t\t\t\tn24 = te[13],\n\t\t\t\t\t\tn34 = te[14],\n\t\t\t\t\t\tn44 = te[15],\n\t\t\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\t\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\t\t\tif (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n\t\t\tconst detInv = 1 / det;\n\t\t\tte[0] = t11 * detInv;\n\t\t\tte[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n\t\t\tte[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n\t\t\tte[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n\t\t\tte[4] = t12 * detInv;\n\t\t\tte[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n\t\t\tte[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n\t\t\tte[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n\t\t\tte[8] = t13 * detInv;\n\t\t\tte[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n\t\t\tte[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n\t\t\tte[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n\t\t\tte[12] = t14 * detInv;\n\t\t\tte[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n\t\t\tte[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n\t\t\tte[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(v) {\n\t\t\tconst te = this.elements;\n\t\t\tconst x = v.x,\n\t\t\t\t\t\ty = v.y,\n\t\t\t\t\t\tz = v.z;\n\t\t\tte[0] *= x;\n\t\t\tte[4] *= y;\n\t\t\tte[8] *= z;\n\t\t\tte[1] *= x;\n\t\t\tte[5] *= y;\n\t\t\tte[9] *= z;\n\t\t\tte[2] *= x;\n\t\t\tte[6] *= y;\n\t\t\tte[10] *= z;\n\t\t\tte[3] *= x;\n\t\t\tte[7] *= y;\n\t\t\tte[11] *= z;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetMaxScaleOnAxis() {\n\t\t\tconst te = this.elements;\n\t\t\tconst scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n\t\t\tconst scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n\t\t\tconst scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n\t\t\treturn Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n\t\t}\n\n\t\tmakeTranslation(x, y, z) {\n\t\t\tthis.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationX(theta) {\n\t\t\tconst c = Math.cos(theta),\n\t\t\t\t\t\ts = Math.sin(theta);\n\t\t\tthis.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationY(theta) {\n\t\t\tconst c = Math.cos(theta),\n\t\t\t\t\t\ts = Math.sin(theta);\n\t\t\tthis.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationZ(theta) {\n\t\t\tconst c = Math.cos(theta),\n\t\t\t\t\t\ts = Math.sin(theta);\n\t\t\tthis.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationAxis(axis, angle) {\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\t\t\tconst c = Math.cos(angle);\n\t\t\tconst s = Math.sin(angle);\n\t\t\tconst t = 1 - c;\n\t\t\tconst x = axis.x,\n\t\t\t\t\t\ty = axis.y,\n\t\t\t\t\t\tz = axis.z;\n\t\t\tconst tx = t * x,\n\t\t\t\t\t\tty = t * y;\n\t\t\tthis.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeScale(x, y, z) {\n\t\t\tthis.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeShear(xy, xz, yx, yz, zx, zy) {\n\t\t\tthis.set(1, yx, zx, 0, xy, 1, zy, 0, xz, yz, 1, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tcompose(position, quaternion, scale) {\n\t\t\tconst te = this.elements;\n\t\t\tconst x = quaternion._x,\n\t\t\t\t\t\ty = quaternion._y,\n\t\t\t\t\t\tz = quaternion._z,\n\t\t\t\t\t\tw = quaternion._w;\n\t\t\tconst x2 = x + x,\n\t\t\t\t\t\ty2 = y + y,\n\t\t\t\t\t\tz2 = z + z;\n\t\t\tconst xx = x * x2,\n\t\t\t\t\t\txy = x * y2,\n\t\t\t\t\t\txz = x * z2;\n\t\t\tconst yy = y * y2,\n\t\t\t\t\t\tyz = y * z2,\n\t\t\t\t\t\tzz = z * z2;\n\t\t\tconst wx = w * x2,\n\t\t\t\t\t\twy = w * y2,\n\t\t\t\t\t\twz = w * z2;\n\t\t\tconst sx = scale.x,\n\t\t\t\t\t\tsy = scale.y,\n\t\t\t\t\t\tsz = scale.z;\n\t\t\tte[0] = (1 - (yy + zz)) * sx;\n\t\t\tte[1] = (xy + wz) * sx;\n\t\t\tte[2] = (xz - wy) * sx;\n\t\t\tte[3] = 0;\n\t\t\tte[4] = (xy - wz) * sy;\n\t\t\tte[5] = (1 - (xx + zz)) * sy;\n\t\t\tte[6] = (yz + wx) * sy;\n\t\t\tte[7] = 0;\n\t\t\tte[8] = (xz + wy) * sz;\n\t\t\tte[9] = (yz - wx) * sz;\n\t\t\tte[10] = (1 - (xx + yy)) * sz;\n\t\t\tte[11] = 0;\n\t\t\tte[12] = position.x;\n\t\t\tte[13] = position.y;\n\t\t\tte[14] = position.z;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tdecompose(position, quaternion, scale) {\n\t\t\tconst te = this.elements;\n\n\t\t\tlet sx = _v1$5.set(te[0], te[1], te[2]).length();\n\n\t\t\tconst sy = _v1$5.set(te[4], te[5], te[6]).length();\n\n\t\t\tconst sz = _v1$5.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n\n\t\t\tconst det = this.determinant();\n\t\t\tif (det < 0) sx = -sx;\n\t\t\tposition.x = te[12];\n\t\t\tposition.y = te[13];\n\t\t\tposition.z = te[14]; // scale the rotation part\n\n\t\t\t_m1$2.copy(this);\n\n\t\t\tconst invSX = 1 / sx;\n\t\t\tconst invSY = 1 / sy;\n\t\t\tconst invSZ = 1 / sz;\n\t\t\t_m1$2.elements[0] *= invSX;\n\t\t\t_m1$2.elements[1] *= invSX;\n\t\t\t_m1$2.elements[2] *= invSX;\n\t\t\t_m1$2.elements[4] *= invSY;\n\t\t\t_m1$2.elements[5] *= invSY;\n\t\t\t_m1$2.elements[6] *= invSY;\n\t\t\t_m1$2.elements[8] *= invSZ;\n\t\t\t_m1$2.elements[9] *= invSZ;\n\t\t\t_m1$2.elements[10] *= invSZ;\n\t\t\tquaternion.setFromRotationMatrix(_m1$2);\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakePerspective(left, right, top, bottom, near, far) {\n\t\t\tif (far === undefined) {\n\t\t\t\tconsole.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');\n\t\t\t}\n\n\t\t\tconst te = this.elements;\n\t\t\tconst x = 2 * near / (right - left);\n\t\t\tconst y = 2 * near / (top - bottom);\n\t\t\tconst a = (right + left) / (right - left);\n\t\t\tconst b = (top + bottom) / (top - bottom);\n\t\t\tconst c = -(far + near) / (far - near);\n\t\t\tconst d = -2 * far * near / (far - near);\n\t\t\tte[0] = x;\n\t\t\tte[4] = 0;\n\t\t\tte[8] = a;\n\t\t\tte[12] = 0;\n\t\t\tte[1] = 0;\n\t\t\tte[5] = y;\n\t\t\tte[9] = b;\n\t\t\tte[13] = 0;\n\t\t\tte[2] = 0;\n\t\t\tte[6] = 0;\n\t\t\tte[10] = c;\n\t\t\tte[14] = d;\n\t\t\tte[3] = 0;\n\t\t\tte[7] = 0;\n\t\t\tte[11] = -1;\n\t\t\tte[15] = 0;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeOrthographic(left, right, top, bottom, near, far) {\n\t\t\tconst te = this.elements;\n\t\t\tconst w = 1.0 / (right - left);\n\t\t\tconst h = 1.0 / (top - bottom);\n\t\t\tconst p = 1.0 / (far - near);\n\t\t\tconst x = (right + left) * w;\n\t\t\tconst y = (top + bottom) * h;\n\t\t\tconst z = (far + near) * p;\n\t\t\tte[0] = 2 * w;\n\t\t\tte[4] = 0;\n\t\t\tte[8] = 0;\n\t\t\tte[12] = -x;\n\t\t\tte[1] = 0;\n\t\t\tte[5] = 2 * h;\n\t\t\tte[9] = 0;\n\t\t\tte[13] = -y;\n\t\t\tte[2] = 0;\n\t\t\tte[6] = 0;\n\t\t\tte[10] = -2 * p;\n\t\t\tte[14] = -z;\n\t\t\tte[3] = 0;\n\t\t\tte[7] = 0;\n\t\t\tte[11] = 0;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(matrix) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = matrix.elements;\n\n\t\t\tfor (let i = 0; i < 16; i++) {\n\t\t\t\tif (te[i] !== me[i]) return false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tfor (let i = 0; i < 16; i++) {\n\t\t\t\tthis.elements[i] = array[i + offset];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tconst te = this.elements;\n\t\t\tarray[offset] = te[0];\n\t\t\tarray[offset + 1] = te[1];\n\t\t\tarray[offset + 2] = te[2];\n\t\t\tarray[offset + 3] = te[3];\n\t\t\tarray[offset + 4] = te[4];\n\t\t\tarray[offset + 5] = te[5];\n\t\t\tarray[offset + 6] = te[6];\n\t\t\tarray[offset + 7] = te[7];\n\t\t\tarray[offset + 8] = te[8];\n\t\t\tarray[offset + 9] = te[9];\n\t\t\tarray[offset + 10] = te[10];\n\t\t\tarray[offset + 11] = te[11];\n\t\t\tarray[offset + 12] = te[12];\n\t\t\tarray[offset + 13] = te[13];\n\t\t\tarray[offset + 14] = te[14];\n\t\t\tarray[offset + 15] = te[15];\n\t\t\treturn array;\n\t\t}\n\n\t}\n\n\tMatrix4.prototype.isMatrix4 = true;\n\n\tconst _v1$5 = /*@__PURE__*/new Vector3();\n\n\tconst _m1$2 = /*@__PURE__*/new Matrix4();\n\n\tconst _zero = /*@__PURE__*/new Vector3(0, 0, 0);\n\n\tconst _one = /*@__PURE__*/new Vector3(1, 1, 1);\n\n\tconst _x = /*@__PURE__*/new Vector3();\n\n\tconst _y = /*@__PURE__*/new Vector3();\n\n\tconst _z = /*@__PURE__*/new Vector3();\n\n\tconst _matrix$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _quaternion$3 = /*@__PURE__*/new Quaternion();\n\n\tclass Euler {\n\t\tconstructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order;\n\t\t}\n\n\t\tget x() {\n\t\t\treturn this._x;\n\t\t}\n\n\t\tset x(value) {\n\t\t\tthis._x = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget y() {\n\t\t\treturn this._y;\n\t\t}\n\n\t\tset y(value) {\n\t\t\tthis._y = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget z() {\n\t\t\treturn this._z;\n\t\t}\n\n\t\tset z(value) {\n\t\t\tthis._z = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget order() {\n\t\t\treturn this._order;\n\t\t}\n\n\t\tset order(value) {\n\t\t\tthis._order = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tset(x, y, z, order = this._order) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this._x, this._y, this._z, this._order);\n\t\t}\n\n\t\tcopy(euler) {\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromRotationMatrix(m, order = this._order, update = true) {\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tconst te = m.elements;\n\t\t\tconst m11 = te[0],\n\t\t\t\t\t\tm12 = te[4],\n\t\t\t\t\t\tm13 = te[8];\n\t\t\tconst m21 = te[1],\n\t\t\t\t\t\tm22 = te[5],\n\t\t\t\t\t\tm23 = te[9];\n\t\t\tconst m31 = te[2],\n\t\t\t\t\t\tm32 = te[6],\n\t\t\t\t\t\tm33 = te[10];\n\n\t\t\tswitch (order) {\n\t\t\t\tcase 'XYZ':\n\t\t\t\t\tthis._y = Math.asin(clamp(m13, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m13) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m22);\n\t\t\t\t\t\tthis._z = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXZ':\n\t\t\t\t\tthis._x = Math.asin(-clamp(m23, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m23) < 0.9999999) {\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m22);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m11);\n\t\t\t\t\t\tthis._z = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXY':\n\t\t\t\t\tthis._x = Math.asin(clamp(m32, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m32) < 0.9999999) {\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m22);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._y = 0;\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m11);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYX':\n\t\t\t\t\tthis._y = Math.asin(-clamp(m31, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m31) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m22);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZX':\n\t\t\t\t\tthis._z = Math.asin(clamp(m21, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m21) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m22);\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m33);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZY':\n\t\t\t\t\tthis._z = Math.asin(-clamp(m12, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m12) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m22);\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m33);\n\t\t\t\t\t\tthis._y = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn('THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order);\n\t\t\t}\n\n\t\t\tthis._order = order;\n\t\t\tif (update === true) this._onChangeCallback();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromQuaternion(q, order, update) {\n\t\t\t_matrix$1.makeRotationFromQuaternion(q);\n\n\t\t\treturn this.setFromRotationMatrix(_matrix$1, order, update);\n\t\t}\n\n\t\tsetFromVector3(v, order = this._order) {\n\t\t\treturn this.set(v.x, v.y, v.z, order);\n\t\t}\n\n\t\treorder(newOrder) {\n\t\t\t// WARNING: this discards revolution information -bhouston\n\t\t\t_quaternion$3.setFromEuler(this);\n\n\t\t\treturn this.setFromQuaternion(_quaternion$3, newOrder);\n\t\t}\n\n\t\tequals(euler) {\n\t\t\treturn euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n\t\t}\n\n\t\tfromArray(array) {\n\t\t\tthis._x = array[0];\n\t\t\tthis._y = array[1];\n\t\t\tthis._z = array[2];\n\t\t\tif (array[3] !== undefined) this._order = array[3];\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this._x;\n\t\t\tarray[offset + 1] = this._y;\n\t\t\tarray[offset + 2] = this._z;\n\t\t\tarray[offset + 3] = this._order;\n\t\t\treturn array;\n\t\t}\n\n\t\ttoVector3(optionalResult) {\n\t\t\tif (optionalResult) {\n\t\t\t\treturn optionalResult.set(this._x, this._y, this._z);\n\t\t\t} else {\n\t\t\t\treturn new Vector3(this._x, this._y, this._z);\n\t\t\t}\n\t\t}\n\n\t\t_onChange(callback) {\n\t\t\tthis._onChangeCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\t_onChangeCallback() {}\n\n\t}\n\n\tEuler.prototype.isEuler = true;\n\tEuler.DefaultOrder = 'XYZ';\n\tEuler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\n\n\tclass Layers {\n\t\tconstructor() {\n\t\t\tthis.mask = 1 | 0;\n\t\t}\n\n\t\tset(channel) {\n\t\t\tthis.mask = (1 << channel | 0) >>> 0;\n\t\t}\n\n\t\tenable(channel) {\n\t\t\tthis.mask |= 1 << channel | 0;\n\t\t}\n\n\t\tenableAll() {\n\t\t\tthis.mask = 0xffffffff | 0;\n\t\t}\n\n\t\ttoggle(channel) {\n\t\t\tthis.mask ^= 1 << channel | 0;\n\t\t}\n\n\t\tdisable(channel) {\n\t\t\tthis.mask &= ~(1 << channel | 0);\n\t\t}\n\n\t\tdisableAll() {\n\t\t\tthis.mask = 0;\n\t\t}\n\n\t\ttest(layers) {\n\t\t\treturn (this.mask & layers.mask) !== 0;\n\t\t}\n\n\t\tisEnabled(channel) {\n\t\t\treturn (this.mask & (1 << channel | 0)) !== 0;\n\t\t}\n\n\t}\n\n\tlet _object3DId = 0;\n\n\tconst _v1$4 = /*@__PURE__*/new Vector3();\n\n\tconst _q1 = /*@__PURE__*/new Quaternion();\n\n\tconst _m1$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _target = /*@__PURE__*/new Vector3();\n\n\tconst _position$3 = /*@__PURE__*/new Vector3();\n\n\tconst _scale$2 = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion$2 = /*@__PURE__*/new Quaternion();\n\n\tconst _xAxis = /*@__PURE__*/new Vector3(1, 0, 0);\n\n\tconst _yAxis = /*@__PURE__*/new Vector3(0, 1, 0);\n\n\tconst _zAxis = /*@__PURE__*/new Vector3(0, 0, 1);\n\n\tconst _addedEvent = {\n\t\ttype: 'added'\n\t};\n\tconst _removedEvent = {\n\t\ttype: 'removed'\n\t};\n\n\tclass Object3D extends EventDispatcher {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: _object3DId++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'Object3D';\n\t\t\tthis.parent = null;\n\t\t\tthis.children = [];\n\t\t\tthis.up = Object3D.DefaultUp.clone();\n\t\t\tconst position = new Vector3();\n\t\t\tconst rotation = new Euler();\n\t\t\tconst quaternion = new Quaternion();\n\t\t\tconst scale = new Vector3(1, 1, 1);\n\n\t\t\tfunction onRotationChange() {\n\t\t\t\tquaternion.setFromEuler(rotation, false);\n\t\t\t}\n\n\t\t\tfunction onQuaternionChange() {\n\t\t\t\trotation.setFromQuaternion(quaternion, undefined, false);\n\t\t\t}\n\n\t\t\trotation._onChange(onRotationChange);\n\n\t\t\tquaternion._onChange(onQuaternionChange);\n\n\t\t\tObject.defineProperties(this, {\n\t\t\t\tposition: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: position\n\t\t\t\t},\n\t\t\t\trotation: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: rotation\n\t\t\t\t},\n\t\t\t\tquaternion: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: quaternion\n\t\t\t\t},\n\t\t\t\tscale: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: scale\n\t\t\t\t},\n\t\t\t\tmodelViewMatrix: {\n\t\t\t\t\tvalue: new Matrix4()\n\t\t\t\t},\n\t\t\t\tnormalMatrix: {\n\t\t\t\t\tvalue: new Matrix3()\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.matrix = new Matrix4();\n\t\t\tthis.matrixWorld = new Matrix4();\n\t\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\t\t\tthis.layers = new Layers();\n\t\t\tthis.visible = true;\n\t\t\tthis.castShadow = false;\n\t\t\tthis.receiveShadow = false;\n\t\t\tthis.frustumCulled = true;\n\t\t\tthis.renderOrder = 0;\n\t\t\tthis.animations = [];\n\t\t\tthis.userData = {};\n\t\t}\n\n\t\tonBeforeRender() {}\n\n\t\tonAfterRender() {}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\n\t\t\tthis.matrix.premultiply(matrix);\n\t\t\tthis.matrix.decompose(this.position, this.quaternion, this.scale);\n\t\t}\n\n\t\tapplyQuaternion(q) {\n\t\t\tthis.quaternion.premultiply(q);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetRotationFromAxisAngle(axis, angle) {\n\t\t\t// assumes axis is normalized\n\t\t\tthis.quaternion.setFromAxisAngle(axis, angle);\n\t\t}\n\n\t\tsetRotationFromEuler(euler) {\n\t\t\tthis.quaternion.setFromEuler(euler, true);\n\t\t}\n\n\t\tsetRotationFromMatrix(m) {\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tthis.quaternion.setFromRotationMatrix(m);\n\t\t}\n\n\t\tsetRotationFromQuaternion(q) {\n\t\t\t// assumes q is normalized\n\t\t\tthis.quaternion.copy(q);\n\t\t}\n\n\t\trotateOnAxis(axis, angle) {\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\t\t\t_q1.setFromAxisAngle(axis, angle);\n\n\t\t\tthis.quaternion.multiply(_q1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateOnWorldAxis(axis, angle) {\n\t\t\t// rotate object on axis in world space\n\t\t\t// axis is assumed to be normalized\n\t\t\t// method assumes no rotated parent\n\t\t\t_q1.setFromAxisAngle(axis, angle);\n\n\t\t\tthis.quaternion.premultiply(_q1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateX(angle) {\n\t\t\treturn this.rotateOnAxis(_xAxis, angle);\n\t\t}\n\n\t\trotateY(angle) {\n\t\t\treturn this.rotateOnAxis(_yAxis, angle);\n\t\t}\n\n\t\trotateZ(angle) {\n\t\t\treturn this.rotateOnAxis(_zAxis, angle);\n\t\t}\n\n\t\ttranslateOnAxis(axis, distance) {\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\t\t\t_v1$4.copy(axis).applyQuaternion(this.quaternion);\n\n\t\t\tthis.position.add(_v1$4.multiplyScalar(distance));\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslateX(distance) {\n\t\t\treturn this.translateOnAxis(_xAxis, distance);\n\t\t}\n\n\t\ttranslateY(distance) {\n\t\t\treturn this.translateOnAxis(_yAxis, distance);\n\t\t}\n\n\t\ttranslateZ(distance) {\n\t\t\treturn this.translateOnAxis(_zAxis, distance);\n\t\t}\n\n\t\tlocalToWorld(vector) {\n\t\t\treturn vector.applyMatrix4(this.matrixWorld);\n\t\t}\n\n\t\tworldToLocal(vector) {\n\t\t\treturn vector.applyMatrix4(_m1$1.copy(this.matrixWorld).invert());\n\t\t}\n\n\t\tlookAt(x, y, z) {\n\t\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\t\t\tif (x.isVector3) {\n\t\t\t\t_target.copy(x);\n\t\t\t} else {\n\t\t\t\t_target.set(x, y, z);\n\t\t\t}\n\n\t\t\tconst parent = this.parent;\n\t\t\tthis.updateWorldMatrix(true, false);\n\n\t\t\t_position$3.setFromMatrixPosition(this.matrixWorld);\n\n\t\t\tif (this.isCamera || this.isLight) {\n\t\t\t\t_m1$1.lookAt(_position$3, _target, this.up);\n\t\t\t} else {\n\t\t\t\t_m1$1.lookAt(_target, _position$3, this.up);\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix(_m1$1);\n\n\t\t\tif (parent) {\n\t\t\t\t_m1$1.extractRotation(parent.matrixWorld);\n\n\t\t\t\t_q1.setFromRotationMatrix(_m1$1);\n\n\t\t\t\tthis.quaternion.premultiply(_q1.invert());\n\t\t\t}\n\t\t}\n\n\t\tadd(object) {\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tfor (let i = 0; i < arguments.length; i++) {\n\t\t\t\t\tthis.add(arguments[i]);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tif (object === this) {\n\t\t\t\tconsole.error('THREE.Object3D.add: object can\\'t be added as a child of itself.', object);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tif (object && object.isObject3D) {\n\t\t\t\tif (object.parent !== null) {\n\t\t\t\t\tobject.parent.remove(object);\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tthis.children.push(object);\n\t\t\t\tobject.dispatchEvent(_addedEvent);\n\t\t\t} else {\n\t\t\t\tconsole.error('THREE.Object3D.add: object not an instance of THREE.Object3D.', object);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tremove(object) {\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tfor (let i = 0; i < arguments.length; i++) {\n\t\t\t\t\tthis.remove(arguments[i]);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst index = this.children.indexOf(object);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tobject.parent = null;\n\t\t\t\tthis.children.splice(index, 1);\n\t\t\t\tobject.dispatchEvent(_removedEvent);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tremoveFromParent() {\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (parent !== null) {\n\t\t\t\tparent.remove(this);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclear() {\n\t\t\tfor (let i = 0; i < this.children.length; i++) {\n\t\t\t\tconst object = this.children[i];\n\t\t\t\tobject.parent = null;\n\t\t\t\tobject.dispatchEvent(_removedEvent);\n\t\t\t}\n\n\t\t\tthis.children.length = 0;\n\t\t\treturn this;\n\t\t}\n\n\t\tattach(object) {\n\t\t\t// adds object as a child of this, while maintaining the object's world transform\n\t\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\t\t\tthis.updateWorldMatrix(true, false);\n\n\t\t\t_m1$1.copy(this.matrixWorld).invert();\n\n\t\t\tif (object.parent !== null) {\n\t\t\t\tobject.parent.updateWorldMatrix(true, false);\n\n\t\t\t\t_m1$1.multiply(object.parent.matrixWorld);\n\t\t\t}\n\n\t\t\tobject.applyMatrix4(_m1$1);\n\t\t\tthis.add(object);\n\t\t\tobject.updateWorldMatrix(false, true);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetObjectById(id) {\n\t\t\treturn this.getObjectByProperty('id', id);\n\t\t}\n\n\t\tgetObjectByName(name) {\n\t\t\treturn this.getObjectByProperty('name', name);\n\t\t}\n\n\t\tgetObjectByProperty(name, value) {\n\t\t\tif (this[name] === value) return this;\n\n\t\t\tfor (let i = 0, l = this.children.length; i < l; i++) {\n\t\t\t\tconst child = this.children[i];\n\t\t\t\tconst object = child.getObjectByProperty(name, value);\n\n\t\t\t\tif (object !== undefined) {\n\t\t\t\t\treturn object;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\tgetWorldPosition(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\treturn target.setFromMatrixPosition(this.matrixWorld);\n\t\t}\n\n\t\tgetWorldQuaternion(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tthis.matrixWorld.decompose(_position$3, target, _scale$2);\n\t\t\treturn target;\n\t\t}\n\n\t\tgetWorldScale(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tthis.matrixWorld.decompose(_position$3, _quaternion$2, target);\n\t\t\treturn target;\n\t\t}\n\n\t\tgetWorldDirection(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tconst e = this.matrixWorld.elements;\n\t\t\treturn target.set(e[8], e[9], e[10]).normalize();\n\t\t}\n\n\t\traycast() {}\n\n\t\ttraverse(callback) {\n\t\t\tcallback(this);\n\t\t\tconst children = this.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tchildren[i].traverse(callback);\n\t\t\t}\n\t\t}\n\n\t\ttraverseVisible(callback) {\n\t\t\tif (this.visible === false) return;\n\t\t\tcallback(this);\n\t\t\tconst children = this.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tchildren[i].traverseVisible(callback);\n\t\t\t}\n\t\t}\n\n\t\ttraverseAncestors(callback) {\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (parent !== null) {\n\t\t\t\tcallback(parent);\n\t\t\t\tparent.traverseAncestors(callback);\n\t\t\t}\n\t\t}\n\n\t\tupdateMatrix() {\n\t\t\tthis.matrix.compose(this.position, this.quaternion, this.scale);\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\n\n\t\t\tif (this.matrixWorldNeedsUpdate || force) {\n\t\t\t\tif (this.parent === null) {\n\t\t\t\t\tthis.matrixWorld.copy(this.matrix);\n\t\t\t\t} else {\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\t\t\t\tforce = true;\n\t\t\t} // update children\n\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tchildren[i].updateMatrixWorld(force);\n\t\t\t}\n\t\t}\n\n\t\tupdateWorldMatrix(updateParents, updateChildren) {\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (updateParents === true && parent !== null) {\n\t\t\t\tparent.updateWorldMatrix(true, false);\n\t\t\t}\n\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\n\n\t\t\tif (this.parent === null) {\n\t\t\t\tthis.matrixWorld.copy(this.matrix);\n\t\t\t} else {\n\t\t\t\tthis.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n\t\t\t} // update children\n\n\n\t\t\tif (updateChildren === true) {\n\t\t\t\tconst children = this.children;\n\n\t\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tchildren[i].updateWorldMatrix(false, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\t// meta is a string when called from JSON.stringify\n\t\t\tconst isRootObject = meta === undefined || typeof meta === 'string';\n\t\t\tconst output = {}; // meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\n\t\t\tif (isRootObject) {\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {},\n\t\t\t\t\tshapes: {},\n\t\t\t\t\tskeletons: {},\n\t\t\t\t\tanimations: {}\n\t\t\t\t};\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\t\t\t} // standard Object3D serialization\n\n\n\t\t\tconst object = {};\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\t\t\tif (this.name !== '') object.name = this.name;\n\t\t\tif (this.castShadow === true) object.castShadow = true;\n\t\t\tif (this.receiveShadow === true) object.receiveShadow = true;\n\t\t\tif (this.visible === false) object.visible = false;\n\t\t\tif (this.frustumCulled === false) object.frustumCulled = false;\n\t\t\tif (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\n\t\t\tif (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n\t\t\tobject.layers = this.layers.mask;\n\t\t\tobject.matrix = this.matrix.toArray();\n\t\t\tif (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false; // object specific properties\n\n\t\t\tif (this.isInstancedMesh) {\n\t\t\t\tobject.type = 'InstancedMesh';\n\t\t\t\tobject.count = this.count;\n\t\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\t\tif (this.instanceColor !== null) object.instanceColor = this.instanceColor.toJSON();\n\t\t\t} //\n\n\n\t\t\tfunction serialize(library, element) {\n\t\t\t\tif (library[element.uuid] === undefined) {\n\t\t\t\t\tlibrary[element.uuid] = element.toJSON(meta);\n\t\t\t\t}\n\n\t\t\t\treturn element.uuid;\n\t\t\t}\n\n\t\t\tif (this.isScene) {\n\t\t\t\tif (this.background) {\n\t\t\t\t\tif (this.background.isColor) {\n\t\t\t\t\t\tobject.background = this.background.toJSON();\n\t\t\t\t\t} else if (this.background.isTexture) {\n\t\t\t\t\t\tobject.background = this.background.toJSON(meta).uuid;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.environment && this.environment.isTexture) {\n\t\t\t\t\tobject.environment = this.environment.toJSON(meta).uuid;\n\t\t\t\t}\n\t\t\t} else if (this.isMesh || this.isLine || this.isPoints) {\n\t\t\t\tobject.geometry = serialize(meta.geometries, this.geometry);\n\t\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\t\tif (parameters !== undefined && parameters.shapes !== undefined) {\n\t\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\t\tif (Array.isArray(shapes)) {\n\t\t\t\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\t\t\t\tconst shape = shapes[i];\n\t\t\t\t\t\t\tserialize(meta.shapes, shape);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tserialize(meta.shapes, shapes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isSkinnedMesh) {\n\t\t\t\tobject.bindMode = this.bindMode;\n\t\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\t\tif (this.skeleton !== undefined) {\n\t\t\t\t\tserialize(meta.skeletons, this.skeleton);\n\t\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.material !== undefined) {\n\t\t\t\tif (Array.isArray(this.material)) {\n\t\t\t\t\tconst uuids = [];\n\n\t\t\t\t\tfor (let i = 0, l = this.material.length; i < l; i++) {\n\t\t\t\t\t\tuuids.push(serialize(meta.materials, this.material[i]));\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.material = uuids;\n\t\t\t\t} else {\n\t\t\t\t\tobject.material = serialize(meta.materials, this.material);\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tif (this.children.length > 0) {\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor (let i = 0; i < this.children.length; i++) {\n\t\t\t\t\tobject.children.push(this.children[i].toJSON(meta).object);\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tif (this.animations.length > 0) {\n\t\t\t\tobject.animations = [];\n\n\t\t\t\tfor (let i = 0; i < this.animations.length; i++) {\n\t\t\t\t\tconst animation = this.animations[i];\n\t\t\t\t\tobject.animations.push(serialize(meta.animations, animation));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isRootObject) {\n\t\t\t\tconst geometries = extractFromCache(meta.geometries);\n\t\t\t\tconst materials = extractFromCache(meta.materials);\n\t\t\t\tconst textures = extractFromCache(meta.textures);\n\t\t\t\tconst images = extractFromCache(meta.images);\n\t\t\t\tconst shapes = extractFromCache(meta.shapes);\n\t\t\t\tconst skeletons = extractFromCache(meta.skeletons);\n\t\t\t\tconst animations = extractFromCache(meta.animations);\n\t\t\t\tif (geometries.length > 0) output.geometries = geometries;\n\t\t\t\tif (materials.length > 0) output.materials = materials;\n\t\t\t\tif (textures.length > 0) output.textures = textures;\n\t\t\t\tif (images.length > 0) output.images = images;\n\t\t\t\tif (shapes.length > 0) output.shapes = shapes;\n\t\t\t\tif (skeletons.length > 0) output.skeletons = skeletons;\n\t\t\t\tif (animations.length > 0) output.animations = animations;\n\t\t\t}\n\n\t\t\toutput.object = object;\n\t\t\treturn output; // extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\n\t\t\tfunction extractFromCache(cache) {\n\t\t\t\tconst values = [];\n\n\t\t\t\tfor (const key in cache) {\n\t\t\t\t\tconst data = cache[key];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push(data);\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\n\t\tclone(recursive) {\n\t\t\treturn new this.constructor().copy(this, recursive);\n\t\t}\n\n\t\tcopy(source, recursive = true) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.up.copy(source.up);\n\t\t\tthis.position.copy(source.position);\n\t\t\tthis.rotation.order = source.rotation.order;\n\t\t\tthis.quaternion.copy(source.quaternion);\n\t\t\tthis.scale.copy(source.scale);\n\t\t\tthis.matrix.copy(source.matrix);\n\t\t\tthis.matrixWorld.copy(source.matrixWorld);\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\t\t\tthis.layers.mask = source.layers.mask;\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\t\t\tthis.userData = JSON.parse(JSON.stringify(source.userData));\n\n\t\t\tif (recursive === true) {\n\t\t\t\tfor (let i = 0; i < source.children.length; i++) {\n\t\t\t\t\tconst child = source.children[i];\n\t\t\t\t\tthis.add(child.clone());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tObject3D.DefaultUp = new Vector3(0, 1, 0);\n\tObject3D.DefaultMatrixAutoUpdate = true;\n\tObject3D.prototype.isObject3D = true;\n\n\tconst _v0$1 = /*@__PURE__*/new Vector3();\n\n\tconst _v1$3 = /*@__PURE__*/new Vector3();\n\n\tconst _v2$2 = /*@__PURE__*/new Vector3();\n\n\tconst _v3$1 = /*@__PURE__*/new Vector3();\n\n\tconst _vab = /*@__PURE__*/new Vector3();\n\n\tconst _vac = /*@__PURE__*/new Vector3();\n\n\tconst _vbc = /*@__PURE__*/new Vector3();\n\n\tconst _vap = /*@__PURE__*/new Vector3();\n\n\tconst _vbp = /*@__PURE__*/new Vector3();\n\n\tconst _vcp = /*@__PURE__*/new Vector3();\n\n\tclass Triangle {\n\t\tconstructor(a = new Vector3(), b = new Vector3(), c = new Vector3()) {\n\t\t\tthis.a = a;\n\t\t\tthis.b = b;\n\t\t\tthis.c = c;\n\t\t}\n\n\t\tstatic getNormal(a, b, c, target) {\n\t\t\ttarget.subVectors(c, b);\n\n\t\t\t_v0$1.subVectors(a, b);\n\n\t\t\ttarget.cross(_v0$1);\n\t\t\tconst targetLengthSq = target.lengthSq();\n\n\t\t\tif (targetLengthSq > 0) {\n\t\t\t\treturn target.multiplyScalar(1 / Math.sqrt(targetLengthSq));\n\t\t\t}\n\n\t\t\treturn target.set(0, 0, 0);\n\t\t} // static/instance method to calculate barycentric coordinates\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\n\n\t\tstatic getBarycoord(point, a, b, c, target) {\n\t\t\t_v0$1.subVectors(c, a);\n\n\t\t\t_v1$3.subVectors(b, a);\n\n\t\t\t_v2$2.subVectors(point, a);\n\n\t\t\tconst dot00 = _v0$1.dot(_v0$1);\n\n\t\t\tconst dot01 = _v0$1.dot(_v1$3);\n\n\t\t\tconst dot02 = _v0$1.dot(_v2$2);\n\n\t\t\tconst dot11 = _v1$3.dot(_v1$3);\n\n\t\t\tconst dot12 = _v1$3.dot(_v2$2);\n\n\t\t\tconst denom = dot00 * dot11 - dot01 * dot01; // collinear or singular triangle\n\n\t\t\tif (denom === 0) {\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set(-2, -1, -1);\n\t\t\t}\n\n\t\t\tconst invDenom = 1 / denom;\n\t\t\tconst u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n\t\t\tconst v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n\t\t\treturn target.set(1 - u - v, v, u);\n\t\t}\n\n\t\tstatic containsPoint(point, a, b, c) {\n\t\t\tthis.getBarycoord(point, a, b, c, _v3$1);\n\t\t\treturn _v3$1.x >= 0 && _v3$1.y >= 0 && _v3$1.x + _v3$1.y <= 1;\n\t\t}\n\n\t\tstatic getUV(point, p1, p2, p3, uv1, uv2, uv3, target) {\n\t\t\tthis.getBarycoord(point, p1, p2, p3, _v3$1);\n\t\t\ttarget.set(0, 0);\n\t\t\ttarget.addScaledVector(uv1, _v3$1.x);\n\t\t\ttarget.addScaledVector(uv2, _v3$1.y);\n\t\t\ttarget.addScaledVector(uv3, _v3$1.z);\n\t\t\treturn target;\n\t\t}\n\n\t\tstatic isFrontFacing(a, b, c, direction) {\n\t\t\t_v0$1.subVectors(c, b);\n\n\t\t\t_v1$3.subVectors(a, b); // strictly front facing\n\n\n\t\t\treturn _v0$1.cross(_v1$3).dot(direction) < 0 ? true : false;\n\t\t}\n\n\t\tset(a, b, c) {\n\t\t\tthis.a.copy(a);\n\t\t\tthis.b.copy(b);\n\t\t\tthis.c.copy(c);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPointsAndIndices(points, i0, i1, i2) {\n\t\t\tthis.a.copy(points[i0]);\n\t\t\tthis.b.copy(points[i1]);\n\t\t\tthis.c.copy(points[i2]);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromAttributeAndIndices(attribute, i0, i1, i2) {\n\t\t\tthis.a.fromBufferAttribute(attribute, i0);\n\t\t\tthis.b.fromBufferAttribute(attribute, i1);\n\t\t\tthis.c.fromBufferAttribute(attribute, i2);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(triangle) {\n\t\t\tthis.a.copy(triangle.a);\n\t\t\tthis.b.copy(triangle.b);\n\t\t\tthis.c.copy(triangle.c);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetArea() {\n\t\t\t_v0$1.subVectors(this.c, this.b);\n\n\t\t\t_v1$3.subVectors(this.a, this.b);\n\n\t\t\treturn _v0$1.cross(_v1$3).length() * 0.5;\n\t\t}\n\n\t\tgetMidpoint(target) {\n\t\t\treturn target.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n\t\t}\n\n\t\tgetNormal(target) {\n\t\t\treturn Triangle.getNormal(this.a, this.b, this.c, target);\n\t\t}\n\n\t\tgetPlane(target) {\n\t\t\treturn target.setFromCoplanarPoints(this.a, this.b, this.c);\n\t\t}\n\n\t\tgetBarycoord(point, target) {\n\t\t\treturn Triangle.getBarycoord(point, this.a, this.b, this.c, target);\n\t\t}\n\n\t\tgetUV(point, uv1, uv2, uv3, target) {\n\t\t\treturn Triangle.getUV(point, this.a, this.b, this.c, uv1, uv2, uv3, target);\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn Triangle.containsPoint(point, this.a, this.b, this.c);\n\t\t}\n\n\t\tisFrontFacing(direction) {\n\t\t\treturn Triangle.isFrontFacing(this.a, this.b, this.c, direction);\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn box.intersectsTriangle(this);\n\t\t}\n\n\t\tclosestPointToPoint(p, target) {\n\t\t\tconst a = this.a,\n\t\t\t\t\t\tb = this.b,\n\t\t\t\t\t\tc = this.c;\n\t\t\tlet v, w; // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\t_vab.subVectors(b, a);\n\n\t\t\t_vac.subVectors(c, a);\n\n\t\t\t_vap.subVectors(p, a);\n\n\t\t\tconst d1 = _vab.dot(_vap);\n\n\t\t\tconst d2 = _vac.dot(_vap);\n\n\t\t\tif (d1 <= 0 && d2 <= 0) {\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy(a);\n\t\t\t}\n\n\t\t\t_vbp.subVectors(p, b);\n\n\t\t\tconst d3 = _vab.dot(_vbp);\n\n\t\t\tconst d4 = _vac.dot(_vbp);\n\n\t\t\tif (d3 >= 0 && d4 <= d3) {\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy(b);\n\t\t\t}\n\n\t\t\tconst vc = d1 * d4 - d3 * d2;\n\n\t\t\tif (vc <= 0 && d1 >= 0 && d3 <= 0) {\n\t\t\t\tv = d1 / (d1 - d3); // edge region of AB; barycentric coords (1-v, v, 0)\n\n\t\t\t\treturn target.copy(a).addScaledVector(_vab, v);\n\t\t\t}\n\n\t\t\t_vcp.subVectors(p, c);\n\n\t\t\tconst d5 = _vab.dot(_vcp);\n\n\t\t\tconst d6 = _vac.dot(_vcp);\n\n\t\t\tif (d6 >= 0 && d5 <= d6) {\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy(c);\n\t\t\t}\n\n\t\t\tconst vb = d5 * d2 - d1 * d6;\n\n\t\t\tif (vb <= 0 && d2 >= 0 && d6 <= 0) {\n\t\t\t\tw = d2 / (d2 - d6); // edge region of AC; barycentric coords (1-w, 0, w)\n\n\t\t\t\treturn target.copy(a).addScaledVector(_vac, w);\n\t\t\t}\n\n\t\t\tconst va = d3 * d6 - d5 * d4;\n\n\t\t\tif (va <= 0 && d4 - d3 >= 0 && d5 - d6 >= 0) {\n\t\t\t\t_vbc.subVectors(c, b);\n\n\t\t\t\tw = (d4 - d3) / (d4 - d3 + (d5 - d6)); // edge region of BC; barycentric coords (0, 1-w, w)\n\n\t\t\t\treturn target.copy(b).addScaledVector(_vbc, w); // edge region of BC\n\t\t\t} // face region\n\n\n\t\t\tconst denom = 1 / (va + vb + vc); // u = va * denom\n\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\t\t\treturn target.copy(a).addScaledVector(_vab, v).addScaledVector(_vac, w);\n\t\t}\n\n\t\tequals(triangle) {\n\t\t\treturn triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n\t\t}\n\n\t}\n\n\tlet materialId = 0;\n\n\tclass Material extends EventDispatcher {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: materialId++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'Material';\n\t\t\tthis.fog = true;\n\t\t\tthis.blending = NormalBlending;\n\t\t\tthis.side = FrontSide;\n\t\t\tthis.vertexColors = false;\n\t\t\tthis.opacity = 1;\n\t\t\tthis.transparent = false;\n\t\t\tthis.blendSrc = SrcAlphaFactor;\n\t\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\t\tthis.blendEquation = AddEquation;\n\t\t\tthis.blendSrcAlpha = null;\n\t\t\tthis.blendDstAlpha = null;\n\t\t\tthis.blendEquationAlpha = null;\n\t\t\tthis.depthFunc = LessEqualDepth;\n\t\t\tthis.depthTest = true;\n\t\t\tthis.depthWrite = true;\n\t\t\tthis.stencilWriteMask = 0xff;\n\t\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\t\tthis.stencilRef = 0;\n\t\t\tthis.stencilFuncMask = 0xff;\n\t\t\tthis.stencilFail = KeepStencilOp;\n\t\t\tthis.stencilZFail = KeepStencilOp;\n\t\t\tthis.stencilZPass = KeepStencilOp;\n\t\t\tthis.stencilWrite = false;\n\t\t\tthis.clippingPlanes = null;\n\t\t\tthis.clipIntersection = false;\n\t\t\tthis.clipShadows = false;\n\t\t\tthis.shadowSide = null;\n\t\t\tthis.colorWrite = true;\n\t\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\t\tthis.polygonOffset = false;\n\t\t\tthis.polygonOffsetFactor = 0;\n\t\t\tthis.polygonOffsetUnits = 0;\n\t\t\tthis.dithering = false;\n\t\t\tthis.alphaToCoverage = false;\n\t\t\tthis.premultipliedAlpha = false;\n\t\t\tthis.visible = true;\n\t\t\tthis.toneMapped = true;\n\t\t\tthis.userData = {};\n\t\t\tthis.version = 0;\n\t\t\tthis._alphaTest = 0;\n\t\t}\n\n\t\tget alphaTest() {\n\t\t\treturn this._alphaTest;\n\t\t}\n\n\t\tset alphaTest(value) {\n\t\t\tif (this._alphaTest > 0 !== value > 0) {\n\t\t\t\tthis.version++;\n\t\t\t}\n\n\t\t\tthis._alphaTest = value;\n\t\t}\n\n\t\tonBuild() {}\n\n\t\tonBeforeRender() {}\n\n\t\tonBeforeCompile() {}\n\n\t\tcustomProgramCacheKey() {\n\t\t\treturn this.onBeforeCompile.toString();\n\t\t}\n\n\t\tsetValues(values) {\n\t\t\tif (values === undefined) return;\n\n\t\t\tfor (const key in values) {\n\t\t\t\tconst newValue = values[key];\n\n\t\t\t\tif (newValue === undefined) {\n\t\t\t\t\tconsole.warn('THREE.Material: \\'' + key + '\\' parameter is undefined.');\n\t\t\t\t\tcontinue;\n\t\t\t\t} // for backward compatability if shading is set in the constructor\n\n\n\t\t\t\tif (key === 'shading') {\n\t\t\t\t\tconsole.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n\t\t\t\t\tthis.flatShading = newValue === FlatShading ? true : false;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst currentValue = this[key];\n\n\t\t\t\tif (currentValue === undefined) {\n\t\t\t\t\tconsole.warn('THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.');\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (currentValue && currentValue.isColor) {\n\t\t\t\t\tcurrentValue.set(newValue);\n\t\t\t\t} else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\n\t\t\t\t\tcurrentValue.copy(newValue);\n\t\t\t\t} else {\n\t\t\t\t\tthis[key] = newValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst isRoot = meta === undefined || typeof meta === 'string';\n\n\t\t\tif (isRoot) {\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t}; // standard Material serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif (this.name !== '') data.name = this.name;\n\t\t\tif (this.color && this.color.isColor) data.color = this.color.getHex();\n\t\t\tif (this.roughness !== undefined) data.roughness = this.roughness;\n\t\t\tif (this.metalness !== undefined) data.metalness = this.metalness;\n\t\t\tif (this.sheen !== undefined) data.sheen = this.sheen;\n\t\t\tif (this.sheenColor && this.sheenColor.isColor) data.sheenColor = this.sheenColor.getHex();\n\t\t\tif (this.sheenRoughness !== undefined) data.sheenRoughness = this.sheenRoughness;\n\t\t\tif (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\n\t\t\tif (this.emissiveIntensity && this.emissiveIntensity !== 1) data.emissiveIntensity = this.emissiveIntensity;\n\t\t\tif (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\n\t\t\tif (this.specularIntensity !== undefined) data.specularIntensity = this.specularIntensity;\n\t\t\tif (this.specularColor && this.specularColor.isColor) data.specularColor = this.specularColor.getHex();\n\t\t\tif (this.shininess !== undefined) data.shininess = this.shininess;\n\t\t\tif (this.clearcoat !== undefined) data.clearcoat = this.clearcoat;\n\t\t\tif (this.clearcoatRoughness !== undefined) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\t\tif (this.clearcoatMap && this.clearcoatMap.isTexture) {\n\t\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON(meta).uuid;\n\t\t\t}\n\n\t\t\tif (this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture) {\n\t\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(meta).uuid;\n\t\t\t}\n\n\t\t\tif (this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture) {\n\t\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(meta).uuid;\n\t\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\t\t\t}\n\n\t\t\tif (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\n\t\t\tif (this.matcap && this.matcap.isTexture) data.matcap = this.matcap.toJSON(meta).uuid;\n\t\t\tif (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n\n\t\t\tif (this.lightMap && this.lightMap.isTexture) {\n\t\t\t\tdata.lightMap = this.lightMap.toJSON(meta).uuid;\n\t\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\t\t\t}\n\n\t\t\tif (this.aoMap && this.aoMap.isTexture) {\n\t\t\t\tdata.aoMap = this.aoMap.toJSON(meta).uuid;\n\t\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\t\t\t}\n\n\t\t\tif (this.bumpMap && this.bumpMap.isTexture) {\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON(meta).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\t\t\t}\n\n\t\t\tif (this.normalMap && this.normalMap.isTexture) {\n\t\t\t\tdata.normalMap = this.normalMap.toJSON(meta).uuid;\n\t\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\t\t\t}\n\n\t\t\tif (this.displacementMap && this.displacementMap.isTexture) {\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON(meta).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\t\t\t}\n\n\t\t\tif (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n\t\t\tif (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n\t\t\tif (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n\t\t\tif (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n\t\t\tif (this.specularIntensityMap && this.specularIntensityMap.isTexture) data.specularIntensityMap = this.specularIntensityMap.toJSON(meta).uuid;\n\t\t\tif (this.specularColorMap && this.specularColorMap.isTexture) data.specularColorMap = this.specularColorMap.toJSON(meta).uuid;\n\n\t\t\tif (this.envMap && this.envMap.isTexture) {\n\t\t\t\tdata.envMap = this.envMap.toJSON(meta).uuid;\n\t\t\t\tif (this.combine !== undefined) data.combine = this.combine;\n\t\t\t}\n\n\t\t\tif (this.envMapIntensity !== undefined) data.envMapIntensity = this.envMapIntensity;\n\t\t\tif (this.reflectivity !== undefined) data.reflectivity = this.reflectivity;\n\t\t\tif (this.refractionRatio !== undefined) data.refractionRatio = this.refractionRatio;\n\n\t\t\tif (this.gradientMap && this.gradientMap.isTexture) {\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON(meta).uuid;\n\t\t\t}\n\n\t\t\tif (this.transmission !== undefined) data.transmission = this.transmission;\n\t\t\tif (this.transmissionMap && this.transmissionMap.isTexture) data.transmissionMap = this.transmissionMap.toJSON(meta).uuid;\n\t\t\tif (this.thickness !== undefined) data.thickness = this.thickness;\n\t\t\tif (this.thicknessMap && this.thicknessMap.isTexture) data.thicknessMap = this.thicknessMap.toJSON(meta).uuid;\n\t\t\tif (this.attenuationDistance !== undefined) data.attenuationDistance = this.attenuationDistance;\n\t\t\tif (this.attenuationColor !== undefined) data.attenuationColor = this.attenuationColor.getHex();\n\t\t\tif (this.size !== undefined) data.size = this.size;\n\t\t\tif (this.shadowSide !== null) data.shadowSide = this.shadowSide;\n\t\t\tif (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n\t\t\tif (this.blending !== NormalBlending) data.blending = this.blending;\n\t\t\tif (this.side !== FrontSide) data.side = this.side;\n\t\t\tif (this.vertexColors) data.vertexColors = true;\n\t\t\tif (this.opacity < 1) data.opacity = this.opacity;\n\t\t\tif (this.transparent === true) data.transparent = this.transparent;\n\t\t\tdata.depthFunc = this.depthFunc;\n\t\t\tdata.depthTest = this.depthTest;\n\t\t\tdata.depthWrite = this.depthWrite;\n\t\t\tdata.colorWrite = this.colorWrite;\n\t\t\tdata.stencilWrite = this.stencilWrite;\n\t\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\t\tdata.stencilFunc = this.stencilFunc;\n\t\t\tdata.stencilRef = this.stencilRef;\n\t\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\t\tdata.stencilFail = this.stencilFail;\n\t\t\tdata.stencilZFail = this.stencilZFail;\n\t\t\tdata.stencilZPass = this.stencilZPass; // rotation (SpriteMaterial)\n\n\t\t\tif (this.rotation && this.rotation !== 0) data.rotation = this.rotation;\n\t\t\tif (this.polygonOffset === true) data.polygonOffset = true;\n\t\t\tif (this.polygonOffsetFactor !== 0) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\t\tif (this.polygonOffsetUnits !== 0) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\t\t\tif (this.linewidth && this.linewidth !== 1) data.linewidth = this.linewidth;\n\t\t\tif (this.dashSize !== undefined) data.dashSize = this.dashSize;\n\t\t\tif (this.gapSize !== undefined) data.gapSize = this.gapSize;\n\t\t\tif (this.scale !== undefined) data.scale = this.scale;\n\t\t\tif (this.dithering === true) data.dithering = true;\n\t\t\tif (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n\t\t\tif (this.alphaToCoverage === true) data.alphaToCoverage = this.alphaToCoverage;\n\t\t\tif (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\t\tif (this.wireframe === true) data.wireframe = this.wireframe;\n\t\t\tif (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\t\tif (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n\t\t\tif (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n\t\t\tif (this.flatShading === true) data.flatShading = this.flatShading;\n\t\t\tif (this.visible === false) data.visible = false;\n\t\t\tif (this.toneMapped === false) data.toneMapped = false;\n\t\t\tif (JSON.stringify(this.userData) !== '{}') data.userData = this.userData; // TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache(cache) {\n\t\t\t\tconst values = [];\n\n\t\t\t\tfor (const key in cache) {\n\t\t\t\t\tconst data = cache[key];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push(data);\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t}\n\n\t\t\tif (isRoot) {\n\t\t\t\tconst textures = extractFromCache(meta.textures);\n\t\t\t\tconst images = extractFromCache(meta.images);\n\t\t\t\tif (textures.length > 0) data.textures = textures;\n\t\t\t\tif (images.length > 0) data.images = images;\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.fog = source.fog;\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.vertexColors = source.vertexColors;\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.transparent = source.transparent;\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\t\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\t\tthis.stencilFunc = source.stencilFunc;\n\t\t\tthis.stencilRef = source.stencilRef;\n\t\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\t\tthis.stencilFail = source.stencilFail;\n\t\t\tthis.stencilZFail = source.stencilZFail;\n\t\t\tthis.stencilZPass = source.stencilZPass;\n\t\t\tthis.stencilWrite = source.stencilWrite;\n\t\t\tconst srcPlanes = source.clippingPlanes;\n\t\t\tlet dstPlanes = null;\n\n\t\t\tif (srcPlanes !== null) {\n\t\t\t\tconst n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array(n);\n\n\t\t\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\t\t\tdstPlanes[i] = srcPlanes[i].clone();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\t\t\tthis.clipIntersection = source.clipIntersection;\n\t\t\tthis.clipShadows = source.clipShadows;\n\t\t\tthis.shadowSide = source.shadowSide;\n\t\t\tthis.colorWrite = source.colorWrite;\n\t\t\tthis.precision = source.precision;\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\t\t\tthis.dithering = source.dithering;\n\t\t\tthis.alphaTest = source.alphaTest;\n\t\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.toneMapped = source.toneMapped;\n\t\t\tthis.userData = JSON.parse(JSON.stringify(source.userData));\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t}\n\n\tMaterial.prototype.isMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\tspecularMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tcombine: THREE.Multiply,\n\t *\treflectivity: <float>,\n\t *\trefractionRatio: <float>,\n\t *\n\t *\tdepthTest: <bool>,\n\t *\tdepthWrite: <bool>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t * }\n\t */\n\n\tclass MeshBasicMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshBasicMaterial';\n\t\t\tthis.color = new Color(0xffffff); // emissive\n\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.specularMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.specularMap = source.specularMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n\tconst _vector$9 = /*@__PURE__*/new Vector3();\n\n\tconst _vector2$1 = /*@__PURE__*/new Vector2();\n\n\tclass BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tif (Array.isArray(array)) {\n\t\t\t\tthrow new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n\t\t\t}\n\n\t\t\tthis.name = '';\n\t\t\tthis.array = array;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\t\tthis.normalized = normalized === true;\n\t\t\tthis.usage = StaticDrawUsage;\n\t\t\tthis.updateRange = {\n\t\t\t\toffset: 0,\n\t\t\t\tcount: -1\n\t\t\t};\n\t\t\tthis.version = 0;\n\t\t}\n\n\t\tonUploadCallback() {}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t\tsetUsage(value) {\n\t\t\tthis.usage = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.array = new source.array.constructor(source.array);\n\t\t\tthis.itemSize = source.itemSize;\n\t\t\tthis.count = source.count;\n\t\t\tthis.normalized = source.normalized;\n\t\t\tthis.usage = source.usage;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyAt(index1, attribute, index2) {\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor (let i = 0, l = this.itemSize; i < l; i++) {\n\t\t\t\tthis.array[index1 + i] = attribute.array[index2 + i];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyArray(array) {\n\t\t\tthis.array.set(array);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyColorsArray(colors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = colors.length; i < l; i++) {\n\t\t\t\tlet color = colors[i];\n\n\t\t\t\tif (color === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\n\t\t\t\t\tcolor = new Color();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = color.r;\n\t\t\t\tarray[offset++] = color.g;\n\t\t\t\tarray[offset++] = color.b;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyVector2sArray(vectors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\n\t\t\t\tlet vector = vectors[i];\n\n\t\t\t\tif (vector === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\n\t\t\t\t\tvector = new Vector2();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = vector.x;\n\t\t\t\tarray[offset++] = vector.y;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyVector3sArray(vectors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\n\t\t\t\tlet vector = vectors[i];\n\n\t\t\t\tif (vector === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\n\t\t\t\t\tvector = new Vector3();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = vector.x;\n\t\t\t\tarray[offset++] = vector.y;\n\t\t\t\tarray[offset++] = vector.z;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyVector4sArray(vectors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\n\t\t\t\tlet vector = vectors[i];\n\n\t\t\t\tif (vector === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\n\t\t\t\t\tvector = new Vector4();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = vector.x;\n\t\t\t\tarray[offset++] = vector.y;\n\t\t\t\tarray[offset++] = vector.z;\n\t\t\t\tarray[offset++] = vector.w;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix3(m) {\n\t\t\tif (this.itemSize === 2) {\n\t\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t\t_vector2$1.fromBufferAttribute(this, i);\n\n\t\t\t\t\t_vector2$1.applyMatrix3(m);\n\n\t\t\t\t\tthis.setXY(i, _vector2$1.x, _vector2$1.y);\n\t\t\t\t}\n\t\t\t} else if (this.itemSize === 3) {\n\t\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t\t_vector$9.fromBufferAttribute(this, i);\n\n\t\t\t\t\t_vector$9.applyMatrix3(m);\n\n\t\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$9.x = this.getX(i);\n\t\t\t\t_vector$9.y = this.getY(i);\n\t\t\t\t_vector$9.z = this.getZ(i);\n\n\t\t\t\t_vector$9.applyMatrix4(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyNormalMatrix(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$9.x = this.getX(i);\n\t\t\t\t_vector$9.y = this.getY(i);\n\t\t\t\t_vector$9.z = this.getZ(i);\n\n\t\t\t\t_vector$9.applyNormalMatrix(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttransformDirection(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$9.x = this.getX(i);\n\t\t\t\t_vector$9.y = this.getY(i);\n\t\t\t\t_vector$9.z = this.getZ(i);\n\n\t\t\t\t_vector$9.transformDirection(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(value, offset = 0) {\n\t\t\tthis.array.set(value, offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetX(index) {\n\t\t\treturn this.array[index * this.itemSize];\n\t\t}\n\n\t\tsetX(index, x) {\n\t\t\tthis.array[index * this.itemSize] = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetY(index) {\n\t\t\treturn this.array[index * this.itemSize + 1];\n\t\t}\n\n\t\tsetY(index, y) {\n\t\t\tthis.array[index * this.itemSize + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetZ(index) {\n\t\t\treturn this.array[index * this.itemSize + 2];\n\t\t}\n\n\t\tsetZ(index, z) {\n\t\t\tthis.array[index * this.itemSize + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetW(index) {\n\t\t\treturn this.array[index * this.itemSize + 3];\n\t\t}\n\n\t\tsetW(index, w) {\n\t\t\tthis.array[index * this.itemSize + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXY(index, x, y) {\n\t\t\tindex *= this.itemSize;\n\t\t\tthis.array[index + 0] = x;\n\t\t\tthis.array[index + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZ(index, x, y, z) {\n\t\t\tindex *= this.itemSize;\n\t\t\tthis.array[index + 0] = x;\n\t\t\tthis.array[index + 1] = y;\n\t\t\tthis.array[index + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZW(index, x, y, z, w) {\n\t\t\tindex *= this.itemSize;\n\t\t\tthis.array[index + 0] = x;\n\t\t\tthis.array[index + 1] = y;\n\t\t\tthis.array[index + 2] = z;\n\t\t\tthis.array[index + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tonUpload(callback) {\n\t\t\tthis.onUploadCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.array, this.itemSize).copy(this);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call(this.array),\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\t\t\tif (this.name !== '') data.name = this.name;\n\t\t\tif (this.usage !== StaticDrawUsage) data.usage = this.usage;\n\t\t\tif (this.updateRange.offset !== 0 || this.updateRange.count !== -1) data.updateRange = this.updateRange;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tBufferAttribute.prototype.isBufferAttribute = true; //\n\n\tclass Int8BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Int8Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint8BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint8Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint8ClampedArray(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Int16BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Int16Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint16BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint16Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Int32BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Int32Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint32BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint32Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Float16BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint16Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tFloat16BufferAttribute.prototype.isFloat16BufferAttribute = true;\n\n\tclass Float32BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Float32Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Float64BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Float64Array(array), itemSize, normalized);\n\t\t}\n\n\t} //\n\n\tlet _id$1 = 0;\n\n\tconst _m1 = /*@__PURE__*/new Matrix4();\n\n\tconst _obj = /*@__PURE__*/new Object3D();\n\n\tconst _offset = /*@__PURE__*/new Vector3();\n\n\tconst _box$1 = /*@__PURE__*/new Box3();\n\n\tconst _boxMorphTargets = /*@__PURE__*/new Box3();\n\n\tconst _vector$8 = /*@__PURE__*/new Vector3();\n\n\tclass BufferGeometry extends EventDispatcher {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: _id$1++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'BufferGeometry';\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.morphTargetsRelative = false;\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\t\t\tthis.drawRange = {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: Infinity\n\t\t\t};\n\t\t\tthis.userData = {};\n\t\t}\n\n\t\tgetIndex() {\n\t\t\treturn this.index;\n\t\t}\n\n\t\tsetIndex(index) {\n\t\t\tif (Array.isArray(index)) {\n\t\t\t\tthis.index = new (arrayNeedsUint32(index) ? Uint32BufferAttribute : Uint16BufferAttribute)(index, 1);\n\t\t\t} else {\n\t\t\t\tthis.index = index;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetAttribute(name) {\n\t\t\treturn this.attributes[name];\n\t\t}\n\n\t\tsetAttribute(name, attribute) {\n\t\t\tthis.attributes[name] = attribute;\n\t\t\treturn this;\n\t\t}\n\n\t\tdeleteAttribute(name) {\n\t\t\tdelete this.attributes[name];\n\t\t\treturn this;\n\t\t}\n\n\t\thasAttribute(name) {\n\t\t\treturn this.attributes[name] !== undefined;\n\t\t}\n\n\t\taddGroup(start, count, materialIndex = 0) {\n\t\t\tthis.groups.push({\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex\n\t\t\t});\n\t\t}\n\n\t\tclearGroups() {\n\t\t\tthis.groups = [];\n\t\t}\n\n\t\tsetDrawRange(start, count) {\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tconst position = this.attributes.position;\n\n\t\t\tif (position !== undefined) {\n\t\t\t\tposition.applyMatrix4(matrix);\n\t\t\t\tposition.needsUpdate = true;\n\t\t\t}\n\n\t\t\tconst normal = this.attributes.normal;\n\n\t\t\tif (normal !== undefined) {\n\t\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix(matrix);\n\t\t\t\tnormal.applyNormalMatrix(normalMatrix);\n\t\t\t\tnormal.needsUpdate = true;\n\t\t\t}\n\n\t\t\tconst tangent = this.attributes.tangent;\n\n\t\t\tif (tangent !== undefined) {\n\t\t\t\ttangent.transformDirection(matrix);\n\t\t\t\ttangent.needsUpdate = true;\n\t\t\t}\n\n\t\t\tif (this.boundingBox !== null) {\n\t\t\t\tthis.computeBoundingBox();\n\t\t\t}\n\n\t\t\tif (this.boundingSphere !== null) {\n\t\t\t\tthis.computeBoundingSphere();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyQuaternion(q) {\n\t\t\t_m1.makeRotationFromQuaternion(q);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateX(angle) {\n\t\t\t// rotate geometry around world x-axis\n\t\t\t_m1.makeRotationX(angle);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateY(angle) {\n\t\t\t// rotate geometry around world y-axis\n\t\t\t_m1.makeRotationY(angle);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateZ(angle) {\n\t\t\t// rotate geometry around world z-axis\n\t\t\t_m1.makeRotationZ(angle);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(x, y, z) {\n\t\t\t// translate geometry\n\t\t\t_m1.makeTranslation(x, y, z);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(x, y, z) {\n\t\t\t// scale geometry\n\t\t\t_m1.makeScale(x, y, z);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\tlookAt(vector) {\n\t\t\t_obj.lookAt(vector);\n\n\t\t\t_obj.updateMatrix();\n\n\t\t\tthis.applyMatrix4(_obj.matrix);\n\t\t\treturn this;\n\t\t}\n\n\t\tcenter() {\n\t\t\tthis.computeBoundingBox();\n\t\t\tthis.boundingBox.getCenter(_offset).negate();\n\t\t\tthis.translate(_offset.x, _offset.y, _offset.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tconst position = [];\n\n\t\t\tfor (let i = 0, l = points.length; i < l; i++) {\n\t\t\t\tconst point = points[i];\n\t\t\t\tposition.push(point.x, point.y, point.z || 0);\n\t\t\t}\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(position, 3));\n\t\t\treturn this;\n\t\t}\n\n\t\tcomputeBoundingBox() {\n\t\t\tif (this.boundingBox === null) {\n\t\t\t\tthis.boundingBox = new Box3();\n\t\t\t}\n\n\t\t\tconst position = this.attributes.position;\n\t\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif (position && position.isGLBufferAttribute) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\n\t\t\t\tthis.boundingBox.set(new Vector3(-Infinity, -Infinity, -Infinity), new Vector3(+Infinity, +Infinity, +Infinity));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (position !== undefined) {\n\t\t\t\tthis.boundingBox.setFromBufferAttribute(position); // process morph attributes if present\n\n\t\t\t\tif (morphAttributesPosition) {\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\n\n\t\t\t\t\t\t_box$1.setFromBufferAttribute(morphAttribute);\n\n\t\t\t\t\t\tif (this.morphTargetsRelative) {\n\t\t\t\t\t\t\t_vector$8.addVectors(this.boundingBox.min, _box$1.min);\n\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_vector$8);\n\n\t\t\t\t\t\t\t_vector$8.addVectors(this.boundingBox.max, _box$1.max);\n\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_vector$8);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_box$1.min);\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_box$1.max);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.boundingBox.makeEmpty();\n\t\t\t}\n\n\t\t\tif (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n\t\t\t}\n\t\t}\n\n\t\tcomputeBoundingSphere() {\n\t\t\tif (this.boundingSphere === null) {\n\t\t\t\tthis.boundingSphere = new Sphere();\n\t\t\t}\n\n\t\t\tconst position = this.attributes.position;\n\t\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif (position && position.isGLBufferAttribute) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\n\t\t\t\tthis.boundingSphere.set(new Vector3(), Infinity);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (position) {\n\t\t\t\t// first, find the center of the bounding sphere\n\t\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t\t_box$1.setFromBufferAttribute(position); // process morph attributes if present\n\n\n\t\t\t\tif (morphAttributesPosition) {\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\n\n\t\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute(morphAttribute);\n\n\t\t\t\t\t\tif (this.morphTargetsRelative) {\n\t\t\t\t\t\t\t_vector$8.addVectors(_box$1.min, _boxMorphTargets.min);\n\n\t\t\t\t\t\t\t_box$1.expandByPoint(_vector$8);\n\n\t\t\t\t\t\t\t_vector$8.addVectors(_box$1.max, _boxMorphTargets.max);\n\n\t\t\t\t\t\t\t_box$1.expandByPoint(_vector$8);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_box$1.expandByPoint(_boxMorphTargets.min);\n\n\t\t\t\t\t\t\t_box$1.expandByPoint(_boxMorphTargets.max);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t_box$1.getCenter(center); // second, try to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\n\t\t\t\tlet maxRadiusSq = 0;\n\n\t\t\t\tfor (let i = 0, il = position.count; i < il; i++) {\n\t\t\t\t\t_vector$8.fromBufferAttribute(position, i);\n\n\t\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\n\t\t\t\t} // process morph attributes if present\n\n\n\t\t\t\tif (morphAttributesPosition) {\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\n\t\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\t\tfor (let j = 0, jl = morphAttribute.count; j < jl; j++) {\n\t\t\t\t\t\t\t_vector$8.fromBufferAttribute(morphAttribute, j);\n\n\t\t\t\t\t\t\tif (morphTargetsRelative) {\n\t\t\t\t\t\t\t\t_offset.fromBufferAttribute(position, j);\n\n\t\t\t\t\t\t\t\t_vector$8.add(_offset);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n\t\t\t\tif (isNaN(this.boundingSphere.radius)) {\n\t\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcomputeTangents() {\n\t\t\tconst index = this.index;\n\t\t\tconst attributes = this.attributes; // based on http://www.terathon.com/code/tangent.html\n\t\t\t// (per vertex tangents)\n\n\t\t\tif (index === null || attributes.position === undefined || attributes.normal === undefined || attributes.uv === undefined) {\n\t\t\t\tconsole.error('THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst indices = index.array;\n\t\t\tconst positions = attributes.position.array;\n\t\t\tconst normals = attributes.normal.array;\n\t\t\tconst uvs = attributes.uv.array;\n\t\t\tconst nVertices = positions.length / 3;\n\n\t\t\tif (attributes.tangent === undefined) {\n\t\t\t\tthis.setAttribute('tangent', new BufferAttribute(new Float32Array(4 * nVertices), 4));\n\t\t\t}\n\n\t\t\tconst tangents = attributes.tangent.array;\n\t\t\tconst tan1 = [],\n\t\t\t\t\t\ttan2 = [];\n\n\t\t\tfor (let i = 0; i < nVertices; i++) {\n\t\t\t\ttan1[i] = new Vector3();\n\t\t\t\ttan2[i] = new Vector3();\n\t\t\t}\n\n\t\t\tconst vA = new Vector3(),\n\t\t\t\t\t\tvB = new Vector3(),\n\t\t\t\t\t\tvC = new Vector3(),\n\t\t\t\t\t\tuvA = new Vector2(),\n\t\t\t\t\t\tuvB = new Vector2(),\n\t\t\t\t\t\tuvC = new Vector2(),\n\t\t\t\t\t\tsdir = new Vector3(),\n\t\t\t\t\t\ttdir = new Vector3();\n\n\t\t\tfunction handleTriangle(a, b, c) {\n\t\t\t\tvA.fromArray(positions, a * 3);\n\t\t\t\tvB.fromArray(positions, b * 3);\n\t\t\t\tvC.fromArray(positions, c * 3);\n\t\t\t\tuvA.fromArray(uvs, a * 2);\n\t\t\t\tuvB.fromArray(uvs, b * 2);\n\t\t\t\tuvC.fromArray(uvs, c * 2);\n\t\t\t\tvB.sub(vA);\n\t\t\t\tvC.sub(vA);\n\t\t\t\tuvB.sub(uvA);\n\t\t\t\tuvC.sub(uvA);\n\t\t\t\tconst r = 1.0 / (uvB.x * uvC.y - uvC.x * uvB.y); // silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\t\tif (!isFinite(r)) return;\n\t\t\t\tsdir.copy(vB).multiplyScalar(uvC.y).addScaledVector(vC, -uvB.y).multiplyScalar(r);\n\t\t\t\ttdir.copy(vC).multiplyScalar(uvB.x).addScaledVector(vB, -uvC.x).multiplyScalar(r);\n\t\t\t\ttan1[a].add(sdir);\n\t\t\t\ttan1[b].add(sdir);\n\t\t\t\ttan1[c].add(sdir);\n\t\t\t\ttan2[a].add(tdir);\n\t\t\t\ttan2[b].add(tdir);\n\t\t\t\ttan2[c].add(tdir);\n\t\t\t}\n\n\t\t\tlet groups = this.groups;\n\n\t\t\tif (groups.length === 0) {\n\t\t\t\tgroups = [{\n\t\t\t\t\tstart: 0,\n\t\t\t\t\tcount: indices.length\n\t\t\t\t}];\n\t\t\t}\n\n\t\t\tfor (let i = 0, il = groups.length; i < il; ++i) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tconst start = group.start;\n\t\t\t\tconst count = group.count;\n\n\t\t\t\tfor (let j = start, jl = start + count; j < jl; j += 3) {\n\t\t\t\t\thandleTriangle(indices[j + 0], indices[j + 1], indices[j + 2]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst tmp = new Vector3(),\n\t\t\t\t\t\ttmp2 = new Vector3();\n\t\t\tconst n = new Vector3(),\n\t\t\t\t\t\tn2 = new Vector3();\n\n\t\t\tfunction handleVertex(v) {\n\t\t\t\tn.fromArray(normals, v * 3);\n\t\t\t\tn2.copy(n);\n\t\t\t\tconst t = tan1[v]; // Gram-Schmidt orthogonalize\n\n\t\t\t\ttmp.copy(t);\n\t\t\t\ttmp.sub(n.multiplyScalar(n.dot(t))).normalize(); // Calculate handedness\n\n\t\t\t\ttmp2.crossVectors(n2, t);\n\t\t\t\tconst test = tmp2.dot(tan2[v]);\n\t\t\t\tconst w = test < 0.0 ? -1.0 : 1.0;\n\t\t\t\ttangents[v * 4] = tmp.x;\n\t\t\t\ttangents[v * 4 + 1] = tmp.y;\n\t\t\t\ttangents[v * 4 + 2] = tmp.z;\n\t\t\t\ttangents[v * 4 + 3] = w;\n\t\t\t}\n\n\t\t\tfor (let i = 0, il = groups.length; i < il; ++i) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tconst start = group.start;\n\t\t\t\tconst count = group.count;\n\n\t\t\t\tfor (let j = start, jl = start + count; j < jl; j += 3) {\n\t\t\t\t\thandleVertex(indices[j + 0]);\n\t\t\t\t\thandleVertex(indices[j + 1]);\n\t\t\t\t\thandleVertex(indices[j + 2]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcomputeVertexNormals() {\n\t\t\tconst index = this.index;\n\t\t\tconst positionAttribute = this.getAttribute('position');\n\n\t\t\tif (positionAttribute !== undefined) {\n\t\t\t\tlet normalAttribute = this.getAttribute('normal');\n\n\t\t\t\tif (normalAttribute === undefined) {\n\t\t\t\t\tnormalAttribute = new BufferAttribute(new Float32Array(positionAttribute.count * 3), 3);\n\t\t\t\t\tthis.setAttribute('normal', normalAttribute);\n\t\t\t\t} else {\n\t\t\t\t\t// reset existing normals to zero\n\t\t\t\t\tfor (let i = 0, il = normalAttribute.count; i < il; i++) {\n\t\t\t\t\t\tnormalAttribute.setXYZ(i, 0, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst pA = new Vector3(),\n\t\t\t\t\t\t\tpB = new Vector3(),\n\t\t\t\t\t\t\tpC = new Vector3();\n\t\t\t\tconst nA = new Vector3(),\n\t\t\t\t\t\t\tnB = new Vector3(),\n\t\t\t\t\t\t\tnC = new Vector3();\n\t\t\t\tconst cb = new Vector3(),\n\t\t\t\t\t\t\tab = new Vector3(); // indexed elements\n\n\t\t\t\tif (index) {\n\t\t\t\t\tfor (let i = 0, il = index.count; i < il; i += 3) {\n\t\t\t\t\t\tconst vA = index.getX(i + 0);\n\t\t\t\t\t\tconst vB = index.getX(i + 1);\n\t\t\t\t\t\tconst vC = index.getX(i + 2);\n\t\t\t\t\t\tpA.fromBufferAttribute(positionAttribute, vA);\n\t\t\t\t\t\tpB.fromBufferAttribute(positionAttribute, vB);\n\t\t\t\t\t\tpC.fromBufferAttribute(positionAttribute, vC);\n\t\t\t\t\t\tcb.subVectors(pC, pB);\n\t\t\t\t\t\tab.subVectors(pA, pB);\n\t\t\t\t\t\tcb.cross(ab);\n\t\t\t\t\t\tnA.fromBufferAttribute(normalAttribute, vA);\n\t\t\t\t\t\tnB.fromBufferAttribute(normalAttribute, vB);\n\t\t\t\t\t\tnC.fromBufferAttribute(normalAttribute, vC);\n\t\t\t\t\t\tnA.add(cb);\n\t\t\t\t\t\tnB.add(cb);\n\t\t\t\t\t\tnC.add(cb);\n\t\t\t\t\t\tnormalAttribute.setXYZ(vA, nA.x, nA.y, nA.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(vB, nB.x, nB.y, nB.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(vC, nC.x, nC.y, nC.z);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\t\t\t\t\tfor (let i = 0, il = positionAttribute.count; i < il; i += 3) {\n\t\t\t\t\t\tpA.fromBufferAttribute(positionAttribute, i + 0);\n\t\t\t\t\t\tpB.fromBufferAttribute(positionAttribute, i + 1);\n\t\t\t\t\t\tpC.fromBufferAttribute(positionAttribute, i + 2);\n\t\t\t\t\t\tcb.subVectors(pC, pB);\n\t\t\t\t\t\tab.subVectors(pA, pB);\n\t\t\t\t\t\tcb.cross(ab);\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 0, cb.x, cb.y, cb.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 1, cb.x, cb.y, cb.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 2, cb.x, cb.y, cb.z);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\t\t\t\tnormalAttribute.needsUpdate = true;\n\t\t\t}\n\t\t}\n\n\t\tmerge(geometry, offset) {\n\t\t\tif (!(geometry && geometry.isBufferGeometry)) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (offset === undefined) {\n\t\t\t\toffset = 0;\n\t\t\t\tconsole.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. ' + 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');\n\t\t\t}\n\n\t\t\tconst attributes = this.attributes;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tif (geometry.attributes[key] === undefined) continue;\n\t\t\t\tconst attribute1 = attributes[key];\n\t\t\t\tconst attributeArray1 = attribute1.array;\n\t\t\t\tconst attribute2 = geometry.attributes[key];\n\t\t\t\tconst attributeArray2 = attribute2.array;\n\t\t\t\tconst attributeOffset = attribute2.itemSize * offset;\n\t\t\t\tconst length = Math.min(attributeArray2.length, attributeArray1.length - attributeOffset);\n\n\t\t\t\tfor (let i = 0, j = attributeOffset; i < length; i++, j++) {\n\t\t\t\t\tattributeArray1[j] = attributeArray2[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tnormalizeNormals() {\n\t\t\tconst normals = this.attributes.normal;\n\n\t\t\tfor (let i = 0, il = normals.count; i < il; i++) {\n\t\t\t\t_vector$8.fromBufferAttribute(normals, i);\n\n\t\t\t\t_vector$8.normalize();\n\n\t\t\t\tnormals.setXYZ(i, _vector$8.x, _vector$8.y, _vector$8.z);\n\t\t\t}\n\t\t}\n\n\t\ttoNonIndexed() {\n\t\t\tfunction convertBufferAttribute(attribute, indices) {\n\t\t\t\tconst array = attribute.array;\n\t\t\t\tconst itemSize = attribute.itemSize;\n\t\t\t\tconst normalized = attribute.normalized;\n\t\t\t\tconst array2 = new array.constructor(indices.length * itemSize);\n\t\t\t\tlet index = 0,\n\t\t\t\t\t\tindex2 = 0;\n\n\t\t\t\tfor (let i = 0, l = indices.length; i < l; i++) {\n\t\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\n\t\t\t\t\t\tindex = indices[i] * attribute.data.stride + attribute.offset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindex = indices[i] * itemSize;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let j = 0; j < itemSize; j++) {\n\t\t\t\t\t\tarray2[index2++] = array[index++];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute(array2, itemSize, normalized);\n\t\t\t} //\n\n\n\t\t\tif (this.index === null) {\n\t\t\t\tconsole.warn('THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.');\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst geometry2 = new BufferGeometry();\n\t\t\tconst indices = this.index.array;\n\t\t\tconst attributes = this.attributes; // attributes\n\n\t\t\tfor (const name in attributes) {\n\t\t\t\tconst attribute = attributes[name];\n\t\t\t\tconst newAttribute = convertBufferAttribute(attribute, indices);\n\t\t\t\tgeometry2.setAttribute(name, newAttribute);\n\t\t\t} // morph attributes\n\n\n\t\t\tconst morphAttributes = this.morphAttributes;\n\n\t\t\tfor (const name in morphAttributes) {\n\t\t\t\tconst morphArray = [];\n\t\t\t\tconst morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor (let i = 0, il = morphAttribute.length; i < il; i++) {\n\t\t\t\t\tconst attribute = morphAttribute[i];\n\t\t\t\t\tconst newAttribute = convertBufferAttribute(attribute, indices);\n\t\t\t\t\tmorphArray.push(newAttribute);\n\t\t\t\t}\n\n\t\t\t\tgeometry2.morphAttributes[name] = morphArray;\n\t\t\t}\n\n\t\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative; // groups\n\n\t\t\tconst groups = this.groups;\n\n\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tgeometry2.addGroup(group.start, group.count, group.materialIndex);\n\t\t\t}\n\n\t\t\treturn geometry2;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t}; // standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif (this.name !== '') data.name = this.name;\n\t\t\tif (Object.keys(this.userData).length > 0) data.userData = this.userData;\n\n\t\t\tif (this.parameters !== undefined) {\n\t\t\t\tconst parameters = this.parameters;\n\n\t\t\t\tfor (const key in parameters) {\n\t\t\t\t\tif (parameters[key] !== undefined) data[key] = parameters[key];\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\t\t\t} // for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\n\t\t\tdata.data = {\n\t\t\t\tattributes: {}\n\t\t\t};\n\t\t\tconst index = this.index;\n\n\t\t\tif (index !== null) {\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: Array.prototype.slice.call(index.array)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst attributes = this.attributes;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tconst attribute = attributes[key];\n\t\t\t\tdata.data.attributes[key] = attribute.toJSON(data.data);\n\t\t\t}\n\n\t\t\tconst morphAttributes = {};\n\t\t\tlet hasMorphAttributes = false;\n\n\t\t\tfor (const key in this.morphAttributes) {\n\t\t\t\tconst attributeArray = this.morphAttributes[key];\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor (let i = 0, il = attributeArray.length; i < il; i++) {\n\t\t\t\t\tconst attribute = attributeArray[i];\n\t\t\t\t\tarray.push(attribute.toJSON(data.data));\n\t\t\t\t}\n\n\t\t\t\tif (array.length > 0) {\n\t\t\t\t\tmorphAttributes[key] = array;\n\t\t\t\t\thasMorphAttributes = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasMorphAttributes) {\n\t\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\t\t\t}\n\n\t\t\tconst groups = this.groups;\n\n\t\t\tif (groups.length > 0) {\n\t\t\t\tdata.data.groups = JSON.parse(JSON.stringify(groups));\n\t\t\t}\n\n\t\t\tconst boundingSphere = this.boundingSphere;\n\n\t\t\tif (boundingSphere !== null) {\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\t// reset\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null; // used for storing cloned, shared data\n\n\t\t\tconst data = {}; // name\n\n\t\t\tthis.name = source.name; // index\n\n\t\t\tconst index = source.index;\n\n\t\t\tif (index !== null) {\n\t\t\t\tthis.setIndex(index.clone(data));\n\t\t\t} // attributes\n\n\n\t\t\tconst attributes = source.attributes;\n\n\t\t\tfor (const name in attributes) {\n\t\t\t\tconst attribute = attributes[name];\n\t\t\t\tthis.setAttribute(name, attribute.clone(data));\n\t\t\t} // morph attributes\n\n\n\t\t\tconst morphAttributes = source.morphAttributes;\n\n\t\t\tfor (const name in morphAttributes) {\n\t\t\t\tconst array = [];\n\t\t\t\tconst morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor (let i = 0, l = morphAttribute.length; i < l; i++) {\n\t\t\t\t\tarray.push(morphAttribute[i].clone(data));\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[name] = array;\n\t\t\t}\n\n\t\t\tthis.morphTargetsRelative = source.morphTargetsRelative; // groups\n\n\t\t\tconst groups = source.groups;\n\n\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tthis.addGroup(group.start, group.count, group.materialIndex);\n\t\t\t} // bounding box\n\n\n\t\t\tconst boundingBox = source.boundingBox;\n\n\t\t\tif (boundingBox !== null) {\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\t\t\t} // bounding sphere\n\n\n\t\t\tconst boundingSphere = source.boundingSphere;\n\n\t\t\tif (boundingSphere !== null) {\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\t\t\t} // draw range\n\n\n\t\t\tthis.drawRange.start = source.drawRange.start;\n\t\t\tthis.drawRange.count = source.drawRange.count; // user data\n\n\t\t\tthis.userData = source.userData; // geometry generator parameters\n\n\t\t\tif (source.parameters !== undefined) this.parameters = Object.assign({}, source.parameters);\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t}\n\n\tBufferGeometry.prototype.isBufferGeometry = true;\n\n\tconst _inverseMatrix$2 = /*@__PURE__*/new Matrix4();\n\n\tconst _ray$2 = /*@__PURE__*/new Ray();\n\n\tconst _sphere$3 = /*@__PURE__*/new Sphere();\n\n\tconst _vA$1 = /*@__PURE__*/new Vector3();\n\n\tconst _vB$1 = /*@__PURE__*/new Vector3();\n\n\tconst _vC$1 = /*@__PURE__*/new Vector3();\n\n\tconst _tempA = /*@__PURE__*/new Vector3();\n\n\tconst _tempB = /*@__PURE__*/new Vector3();\n\n\tconst _tempC = /*@__PURE__*/new Vector3();\n\n\tconst _morphA = /*@__PURE__*/new Vector3();\n\n\tconst _morphB = /*@__PURE__*/new Vector3();\n\n\tconst _morphC = /*@__PURE__*/new Vector3();\n\n\tconst _uvA$1 = /*@__PURE__*/new Vector2();\n\n\tconst _uvB$1 = /*@__PURE__*/new Vector2();\n\n\tconst _uvC$1 = /*@__PURE__*/new Vector2();\n\n\tconst _intersectionPoint = /*@__PURE__*/new Vector3();\n\n\tconst _intersectionPointWorld = /*@__PURE__*/new Vector3();\n\n\tclass Mesh extends Object3D {\n\t\tconstructor(geometry = new BufferGeometry(), material = new MeshBasicMaterial()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Mesh';\n\t\t\tthis.geometry = geometry;\n\t\t\tthis.material = material;\n\t\t\tthis.updateMorphTargets();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\n\t\t\tif (source.morphTargetInfluences !== undefined) {\n\t\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\t\t\t}\n\n\t\t\tif (source.morphTargetDictionary !== undefined) {\n\t\t\t\tthis.morphTargetDictionary = Object.assign({}, source.morphTargetDictionary);\n\t\t\t}\n\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\t\t\treturn this;\n\t\t}\n\n\t\tupdateMorphTargets() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\t\tconst keys = Object.keys(morphAttributes);\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\n\n\t\t\t\t\tif (morphAttribute !== undefined) {\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\n\t\t\t\t\tconsole.error('THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst material = this.material;\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tif (material === undefined) return; // Checking boundingSphere distance to ray\n\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy(geometry.boundingSphere);\n\n\t\t\t_sphere$3.applyMatrix4(matrixWorld);\n\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere$3) === false) return; //\n\n\t\t\t_inverseMatrix$2.copy(matrixWorld).invert();\n\n\t\t\t_ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2); // Check boundingBox before continuing\n\n\n\t\t\tif (geometry.boundingBox !== null) {\n\t\t\t\tif (_ray$2.intersectsBox(geometry.boundingBox) === false) return;\n\t\t\t}\n\n\t\t\tlet intersection;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\t\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\t\tconst uv = geometry.attributes.uv;\n\t\t\t\tconst uv2 = geometry.attributes.uv2;\n\t\t\t\tconst groups = geometry.groups;\n\t\t\t\tconst drawRange = geometry.drawRange;\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\t// indexed buffer geometry\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tfor (let i = 0, il = groups.length; i < il; i++) {\n\t\t\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\t\t\t\t\t\t\tconst start = Math.max(group.start, drawRange.start);\n\t\t\t\t\t\t\tconst end = Math.min(index.count, Math.min(group.start + group.count, drawRange.start + drawRange.count));\n\n\t\t\t\t\t\t\tfor (let j = start, jl = end; j < jl; j += 3) {\n\t\t\t\t\t\t\t\tconst a = index.getX(j);\n\t\t\t\t\t\t\t\tconst b = index.getX(j + 1);\n\t\t\t\t\t\t\t\tconst c = index.getX(j + 2);\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(j / 3); // triangle number in indexed buffer semantics\n\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\t\tfor (let i = start, il = end; i < il; i += 3) {\n\t\t\t\t\t\t\tconst a = index.getX(i);\n\t\t\t\t\t\t\tconst b = index.getX(i + 1);\n\t\t\t\t\t\t\tconst c = index.getX(i + 2);\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(i / 3); // triangle number in indexed buffer semantics\n\n\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (position !== undefined) {\n\t\t\t\t\t// non-indexed buffer geometry\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tfor (let i = 0, il = groups.length; i < il; i++) {\n\t\t\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\t\t\t\t\t\t\tconst start = Math.max(group.start, drawRange.start);\n\t\t\t\t\t\t\tconst end = Math.min(position.count, Math.min(group.start + group.count, drawRange.start + drawRange.count));\n\n\t\t\t\t\t\t\tfor (let j = start, jl = end; j < jl; j += 3) {\n\t\t\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\t\t\tconst c = j + 2;\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(j / 3); // triangle number in non-indexed buffer semantics\n\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\t\tconst end = Math.min(position.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\t\tfor (let i = start, il = end; i < il; i += 3) {\n\t\t\t\t\t\t\tconst a = i;\n\t\t\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\t\t\tconst c = i + 2;\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(i / 3); // triangle number in non-indexed buffer semantics\n\n\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\t\t}\n\n\t}\n\n\tMesh.prototype.isMesh = true;\n\n\tfunction checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\n\t\tlet intersect;\n\n\t\tif (material.side === BackSide) {\n\t\t\tintersect = ray.intersectTriangle(pC, pB, pA, true, point);\n\t\t} else {\n\t\t\tintersect = ray.intersectTriangle(pA, pB, pC, material.side !== DoubleSide, point);\n\t\t}\n\n\t\tif (intersect === null) return null;\n\n\t\t_intersectionPointWorld.copy(point);\n\n\t\t_intersectionPointWorld.applyMatrix4(object.matrixWorld);\n\n\t\tconst distance = raycaster.ray.origin.distanceTo(_intersectionPointWorld);\n\t\tif (distance < raycaster.near || distance > raycaster.far) return null;\n\t\treturn {\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectionPointWorld.clone(),\n\t\t\tobject: object\n\t\t};\n\t}\n\n\tfunction checkBufferGeometryIntersection(object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c) {\n\t\t_vA$1.fromBufferAttribute(position, a);\n\n\t\t_vB$1.fromBufferAttribute(position, b);\n\n\t\t_vC$1.fromBufferAttribute(position, c);\n\n\t\tconst morphInfluences = object.morphTargetInfluences;\n\n\t\tif (morphPosition && morphInfluences) {\n\t\t\t_morphA.set(0, 0, 0);\n\n\t\t\t_morphB.set(0, 0, 0);\n\n\t\t\t_morphC.set(0, 0, 0);\n\n\t\t\tfor (let i = 0, il = morphPosition.length; i < il; i++) {\n\t\t\t\tconst influence = morphInfluences[i];\n\t\t\t\tconst morphAttribute = morphPosition[i];\n\t\t\t\tif (influence === 0) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute(morphAttribute, a);\n\n\t\t\t\t_tempB.fromBufferAttribute(morphAttribute, b);\n\n\t\t\t\t_tempC.fromBufferAttribute(morphAttribute, c);\n\n\t\t\t\tif (morphTargetsRelative) {\n\t\t\t\t\t_morphA.addScaledVector(_tempA, influence);\n\n\t\t\t\t\t_morphB.addScaledVector(_tempB, influence);\n\n\t\t\t\t\t_morphC.addScaledVector(_tempC, influence);\n\t\t\t\t} else {\n\t\t\t\t\t_morphA.addScaledVector(_tempA.sub(_vA$1), influence);\n\n\t\t\t\t\t_morphB.addScaledVector(_tempB.sub(_vB$1), influence);\n\n\t\t\t\t\t_morphC.addScaledVector(_tempC.sub(_vC$1), influence);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_vA$1.add(_morphA);\n\n\t\t\t_vB$1.add(_morphB);\n\n\t\t\t_vC$1.add(_morphC);\n\t\t}\n\n\t\tif (object.isSkinnedMesh) {\n\t\t\tobject.boneTransform(a, _vA$1);\n\t\t\tobject.boneTransform(b, _vB$1);\n\t\t\tobject.boneTransform(c, _vC$1);\n\t\t}\n\n\t\tconst intersection = checkIntersection(object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint);\n\n\t\tif (intersection) {\n\t\t\tif (uv) {\n\t\t\t\t_uvA$1.fromBufferAttribute(uv, a);\n\n\t\t\t\t_uvB$1.fromBufferAttribute(uv, b);\n\n\t\t\t\t_uvC$1.fromBufferAttribute(uv, c);\n\n\t\t\t\tintersection.uv = Triangle.getUV(_intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2());\n\t\t\t}\n\n\t\t\tif (uv2) {\n\t\t\t\t_uvA$1.fromBufferAttribute(uv2, a);\n\n\t\t\t\t_uvB$1.fromBufferAttribute(uv2, b);\n\n\t\t\t\t_uvC$1.fromBufferAttribute(uv2, c);\n\n\t\t\t\tintersection.uv2 = Triangle.getUV(_intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2());\n\t\t\t}\n\n\t\t\tconst face = {\n\t\t\t\ta: a,\n\t\t\t\tb: b,\n\t\t\t\tc: c,\n\t\t\t\tnormal: new Vector3(),\n\t\t\t\tmaterialIndex: 0\n\t\t\t};\n\t\t\tTriangle.getNormal(_vA$1, _vB$1, _vC$1, face.normal);\n\t\t\tintersection.face = face;\n\t\t}\n\n\t\treturn intersection;\n\t}\n\n\tclass BoxGeometry extends BufferGeometry {\n\t\tconstructor(width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1) {\n\t\t\tsuper();\n\t\t\tthis.type = 'BoxGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: depth,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tdepthSegments: depthSegments\n\t\t\t};\n\t\t\tconst scope = this; // segments\n\n\t\t\twidthSegments = Math.floor(widthSegments);\n\t\t\theightSegments = Math.floor(heightSegments);\n\t\t\tdepthSegments = Math.floor(depthSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tlet numberOfVertices = 0;\n\t\t\tlet groupStart = 0; // build each side of the box geometry\n\n\t\t\tbuildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\n\n\t\t\tbuildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\n\n\t\t\tbuildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\n\n\t\t\tbuildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\n\n\t\t\tbuildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\n\n\t\t\tbuildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\n\t\t\t// build geometry\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n\t\t\tfunction buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\n\t\t\t\tconst segmentWidth = width / gridX;\n\t\t\t\tconst segmentHeight = height / gridY;\n\t\t\t\tconst widthHalf = width / 2;\n\t\t\t\tconst heightHalf = height / 2;\n\t\t\t\tconst depthHalf = depth / 2;\n\t\t\t\tconst gridX1 = gridX + 1;\n\t\t\t\tconst gridY1 = gridY + 1;\n\t\t\t\tlet vertexCounter = 0;\n\t\t\t\tlet groupCount = 0;\n\t\t\t\tconst vector = new Vector3(); // generate vertices, normals and uvs\n\n\t\t\t\tfor (let iy = 0; iy < gridY1; iy++) {\n\t\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\n\t\t\t\t\t\tconst x = ix * segmentWidth - widthHalf; // set values to correct vector component\n\n\t\t\t\t\t\tvector[u] = x * udir;\n\t\t\t\t\t\tvector[v] = y * vdir;\n\t\t\t\t\t\tvector[w] = depthHalf; // now apply vector to vertex buffer\n\n\t\t\t\t\t\tvertices.push(vector.x, vector.y, vector.z); // set values to correct vector component\n\n\t\t\t\t\t\tvector[u] = 0;\n\t\t\t\t\t\tvector[v] = 0;\n\t\t\t\t\t\tvector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\n\n\t\t\t\t\t\tnormals.push(vector.x, vector.y, vector.z); // uvs\n\n\t\t\t\t\t\tuvs.push(ix / gridX);\n\t\t\t\t\t\tuvs.push(1 - iy / gridY); // counters\n\n\t\t\t\t\t\tvertexCounter += 1;\n\t\t\t\t\t}\n\t\t\t\t} // indices\n\t\t\t\t// 1. you need three indices to draw a single face\n\t\t\t\t// 2. a single segment consists of two faces\n\t\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\n\t\t\t\tfor (let iy = 0; iy < gridY; iy++) {\n\t\t\t\t\tfor (let ix = 0; ix < gridX; ix++) {\n\t\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * (iy + 1);\n\t\t\t\t\t\tconst c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\n\t\t\t\t\t\tconst d = numberOfVertices + (ix + 1) + gridX1 * iy; // faces\n\n\t\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\t\tindices.push(b, c, d); // increase counter\n\n\t\t\t\t\t\tgroupCount += 6;\n\t\t\t\t\t}\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\n\n\n\t\t\t\tscope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount; // update total number of vertices\n\n\t\t\t\tnumberOfVertices += vertexCounter;\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new BoxGeometry(data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n\t\t}\n\n\t}\n\n\t/**\n\t * Uniform Utilities\n\t */\n\tfunction cloneUniforms(src) {\n\t\tconst dst = {};\n\n\t\tfor (const u in src) {\n\t\t\tdst[u] = {};\n\n\t\t\tfor (const p in src[u]) {\n\t\t\t\tconst property = src[u][p];\n\n\t\t\t\tif (property && (property.isColor || property.isMatrix3 || property.isMatrix4 || property.isVector2 || property.isVector3 || property.isVector4 || property.isTexture || property.isQuaternion)) {\n\t\t\t\t\tdst[u][p] = property.clone();\n\t\t\t\t} else if (Array.isArray(property)) {\n\t\t\t\t\tdst[u][p] = property.slice();\n\t\t\t\t} else {\n\t\t\t\t\tdst[u][p] = property;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dst;\n\t}\n\tfunction mergeUniforms(uniforms) {\n\t\tconst merged = {};\n\n\t\tfor (let u = 0; u < uniforms.length; u++) {\n\t\t\tconst tmp = cloneUniforms(uniforms[u]);\n\n\t\t\tfor (const p in tmp) {\n\t\t\t\tmerged[p] = tmp[p];\n\t\t\t}\n\t\t}\n\n\t\treturn merged;\n\t} // Legacy\n\n\tconst UniformsUtils = {\n\t\tclone: cloneUniforms,\n\t\tmerge: mergeUniforms\n\t};\n\n\tvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\n\tvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n\t/**\n\t * parameters = {\n\t *\tdefines: { \"label\" : \"value\" },\n\t *\tuniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *\tfragmentShader: <string>,\n\t *\tvertexShader: <string>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tlights: <bool>\n\t * }\n\t */\n\n\tclass ShaderMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ShaderMaterial';\n\t\t\tthis.defines = {};\n\t\t\tthis.uniforms = {};\n\t\t\tthis.vertexShader = default_vertex;\n\t\t\tthis.fragmentShader = default_fragment;\n\t\t\tthis.linewidth = 1;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.fog = false; // set to use scene fog\n\n\t\t\tthis.lights = false; // set to use scene lights\n\n\t\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\t\tthis.extensions = {\n\t\t\t\tderivatives: false,\n\t\t\t\t// set to use derivatives\n\t\t\t\tfragDepth: false,\n\t\t\t\t// set to use fragment depth values\n\t\t\t\tdrawBuffers: false,\n\t\t\t\t// set to use draw buffers\n\t\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\n\t\t\t}; // When rendered geometry doesn't include these attributes but the material does,\n\t\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\n\t\t\tthis.defaultAttributeValues = {\n\t\t\t\t'color': [1, 1, 1],\n\t\t\t\t'uv': [0, 0],\n\t\t\t\t'uv2': [0, 0]\n\t\t\t};\n\t\t\tthis.index0AttributeName = undefined;\n\t\t\tthis.uniformsNeedUpdate = false;\n\t\t\tthis.glslVersion = null;\n\n\t\t\tif (parameters !== undefined) {\n\t\t\t\tif (parameters.attributes !== undefined) {\n\t\t\t\t\tconsole.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');\n\t\t\t\t}\n\n\t\t\t\tthis.setValues(parameters);\n\t\t\t}\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.fragmentShader = source.fragmentShader;\n\t\t\tthis.vertexShader = source.vertexShader;\n\t\t\tthis.uniforms = cloneUniforms(source.uniforms);\n\t\t\tthis.defines = Object.assign({}, source.defines);\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.lights = source.lights;\n\t\t\tthis.clipping = source.clipping;\n\t\t\tthis.extensions = Object.assign({}, source.extensions);\n\t\t\tthis.glslVersion = source.glslVersion;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.glslVersion = this.glslVersion;\n\t\t\tdata.uniforms = {};\n\n\t\t\tfor (const name in this.uniforms) {\n\t\t\t\tconst uniform = this.uniforms[name];\n\t\t\t\tconst value = uniform.value;\n\n\t\t\t\tif (value && value.isTexture) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 't',\n\t\t\t\t\t\tvalue: value.toJSON(meta).uuid\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isColor) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'c',\n\t\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isVector2) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'v2',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isVector3) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'v3',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isVector4) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'v4',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isMatrix3) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'm3',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isMatrix4) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'm4',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\tvalue: value\n\t\t\t\t\t}; // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Object.keys(this.defines).length > 0) data.defines = this.defines;\n\t\t\tdata.vertexShader = this.vertexShader;\n\t\t\tdata.fragmentShader = this.fragmentShader;\n\t\t\tconst extensions = {};\n\n\t\t\tfor (const key in this.extensions) {\n\t\t\t\tif (this.extensions[key] === true) extensions[key] = true;\n\t\t\t}\n\n\t\t\tif (Object.keys(extensions).length > 0) data.extensions = extensions;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tShaderMaterial.prototype.isShaderMaterial = true;\n\n\tclass Camera extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Camera';\n\t\t\tthis.matrixWorldInverse = new Matrix4();\n\t\t\tthis.projectionMatrix = new Matrix4();\n\t\t\tthis.projectionMatrixInverse = new Matrix4();\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tthis.matrixWorldInverse.copy(source.matrixWorldInverse);\n\t\t\tthis.projectionMatrix.copy(source.projectionMatrix);\n\t\t\tthis.projectionMatrixInverse.copy(source.projectionMatrixInverse);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetWorldDirection(target) {\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tconst e = this.matrixWorld.elements;\n\t\t\treturn target.set(-e[8], -e[9], -e[10]).normalize();\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t\tthis.matrixWorldInverse.copy(this.matrixWorld).invert();\n\t\t}\n\n\t\tupdateWorldMatrix(updateParents, updateChildren) {\n\t\t\tsuper.updateWorldMatrix(updateParents, updateChildren);\n\t\t\tthis.matrixWorldInverse.copy(this.matrixWorld).invert();\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tCamera.prototype.isCamera = true;\n\n\tclass PerspectiveCamera extends Camera {\n\t\tconstructor(fov = 50, aspect = 1, near = 0.1, far = 2000) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PerspectiveCamera';\n\t\t\tthis.fov = fov;\n\t\t\tthis.zoom = 1;\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t\tthis.focus = 10;\n\t\t\tthis.aspect = aspect;\n\t\t\tthis.view = null;\n\t\t\tthis.filmGauge = 35; // width of the film (default in millimeters)\n\n\t\t\tthis.filmOffset = 0; // horizontal film offset (same unit as gauge)\n\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign({}, source.view);\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\t\t\treturn this;\n\t\t}\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\n\n\t\tsetFocalLength(focalLength) {\n\t\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\t\t\tthis.fov = RAD2DEG * 2 * Math.atan(vExtentSlope);\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\n\n\t\tgetFocalLength() {\n\t\t\tconst vExtentSlope = Math.tan(DEG2RAD * 0.5 * this.fov);\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\t\t}\n\n\t\tgetEffectiveFOV() {\n\t\t\treturn RAD2DEG * 2 * Math.atan(Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom);\n\t\t}\n\n\t\tgetFilmWidth() {\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min(this.aspect, 1);\n\t\t}\n\n\t\tgetFilmHeight() {\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max(this.aspect, 1);\n\t\t}\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *\t +---+---+---+\n\t\t *\t | A | B | C |\n\t\t *\t +---+---+---+\n\t\t *\t | D | E | F |\n\t\t *\t +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *\t const w = 1920;\n\t\t *\t const h = 1080;\n\t\t *\t const fullWidth = w * 3;\n\t\t *\t const fullHeight = h * 2;\n\t\t *\n\t\t *\t --A--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *\t --B--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *\t --C--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *\t --D--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *\t --E--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *\t --F--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *\t Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\n\n\t\tsetViewOffset(fullWidth, fullHeight, x, y, width, height) {\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tif (this.view === null) {\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tclearViewOffset() {\n\t\t\tif (this.view !== null) {\n\t\t\t\tthis.view.enabled = false;\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tupdateProjectionMatrix() {\n\t\t\tconst near = this.near;\n\t\t\tlet top = near * Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom;\n\t\t\tlet height = 2 * top;\n\t\t\tlet width = this.aspect * height;\n\t\t\tlet left = -0.5 * width;\n\t\t\tconst view = this.view;\n\n\t\t\tif (this.view !== null && this.view.enabled) {\n\t\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\t\t\t\tfullHeight = view.fullHeight;\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\t\t\t}\n\n\t\t\tconst skew = this.filmOffset;\n\t\t\tif (skew !== 0) left += near * skew / this.getFilmWidth();\n\t\t\tthis.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.far);\n\t\t\tthis.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\t\t\tdata.object.aspect = this.aspect;\n\t\t\tif (this.view !== null) data.object.view = Object.assign({}, this.view);\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tPerspectiveCamera.prototype.isPerspectiveCamera = true;\n\n\tconst fov = 90,\n\t\t\t\taspect = 1;\n\n\tclass CubeCamera extends Object3D {\n\t\tconstructor(near, far, renderTarget) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CubeCamera';\n\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget !== true) {\n\t\t\t\tconsole.error('THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.renderTarget = renderTarget;\n\t\t\tconst cameraPX = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraPX.layers = this.layers;\n\t\t\tcameraPX.up.set(0, -1, 0);\n\t\t\tcameraPX.lookAt(new Vector3(1, 0, 0));\n\t\t\tthis.add(cameraPX);\n\t\t\tconst cameraNX = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraNX.layers = this.layers;\n\t\t\tcameraNX.up.set(0, -1, 0);\n\t\t\tcameraNX.lookAt(new Vector3(-1, 0, 0));\n\t\t\tthis.add(cameraNX);\n\t\t\tconst cameraPY = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraPY.layers = this.layers;\n\t\t\tcameraPY.up.set(0, 0, 1);\n\t\t\tcameraPY.lookAt(new Vector3(0, 1, 0));\n\t\t\tthis.add(cameraPY);\n\t\t\tconst cameraNY = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraNY.layers = this.layers;\n\t\t\tcameraNY.up.set(0, 0, -1);\n\t\t\tcameraNY.lookAt(new Vector3(0, -1, 0));\n\t\t\tthis.add(cameraNY);\n\t\t\tconst cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraPZ.layers = this.layers;\n\t\t\tcameraPZ.up.set(0, -1, 0);\n\t\t\tcameraPZ.lookAt(new Vector3(0, 0, 1));\n\t\t\tthis.add(cameraPZ);\n\t\t\tconst cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraNZ.layers = this.layers;\n\t\t\tcameraNZ.up.set(0, -1, 0);\n\t\t\tcameraNZ.lookAt(new Vector3(0, 0, -1));\n\t\t\tthis.add(cameraNZ);\n\t\t}\n\n\t\tupdate(renderer, scene) {\n\t\t\tif (this.parent === null) this.updateMatrixWorld();\n\t\t\tconst renderTarget = this.renderTarget;\n\t\t\tconst [cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ] = this.children;\n\t\t\tconst currentXrEnabled = renderer.xr.enabled;\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\t\trenderer.xr.enabled = false;\n\t\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\t\t\trenderer.setRenderTarget(renderTarget, 0);\n\t\t\trenderer.render(scene, cameraPX);\n\t\t\trenderer.setRenderTarget(renderTarget, 1);\n\t\t\trenderer.render(scene, cameraNX);\n\t\t\trenderer.setRenderTarget(renderTarget, 2);\n\t\t\trenderer.render(scene, cameraPY);\n\t\t\trenderer.setRenderTarget(renderTarget, 3);\n\t\t\trenderer.render(scene, cameraNY);\n\t\t\trenderer.setRenderTarget(renderTarget, 4);\n\t\t\trenderer.render(scene, cameraPZ);\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\t\t\trenderer.setRenderTarget(renderTarget, 5);\n\t\t\trenderer.render(scene, cameraNZ);\n\t\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\t\trenderer.xr.enabled = currentXrEnabled;\n\t\t\trenderTarget.texture.needsPMREMUpdate = true;\n\t\t}\n\n\t}\n\n\tclass CubeTexture extends Texture {\n\t\tconstructor(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n\t\t\timages = images !== undefined ? images : [];\n\t\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\t\t\tsuper(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n\t\t\tthis.flipY = false;\n\t\t}\n\n\t\tget images() {\n\t\t\treturn this.image;\n\t\t}\n\n\t\tset images(value) {\n\t\t\tthis.image = value;\n\t\t}\n\n\t}\n\n\tCubeTexture.prototype.isCubeTexture = true;\n\n\tclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\t\tconstructor(size, options, dummy) {\n\t\t\tif (Number.isInteger(options)) {\n\t\t\t\tconsole.warn('THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )');\n\t\t\t\toptions = dummy;\n\t\t\t}\n\n\t\t\tsuper(size, size, options);\n\t\t\toptions = options || {}; // By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\t\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\t\tthis.texture = new CubeTexture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n\t\t\tthis.texture.isRenderTargetTexture = true;\n\t\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\t\t}\n\n\t\tfromEquirectangularTexture(renderer, texture) {\n\t\t\tthis.texture.type = texture.type;\n\t\t\tthis.texture.format = RGBAFormat; // see #18859\n\n\t\t\tthis.texture.encoding = texture.encoding;\n\t\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\t\tthis.texture.minFilter = texture.minFilter;\n\t\t\tthis.texture.magFilter = texture.magFilter;\n\t\t\tconst shader = {\n\t\t\t\tuniforms: {\n\t\t\t\t\ttEquirect: {\n\t\t\t\t\t\tvalue: null\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tvertexShader:\n\t\t\t\t/* glsl */\n\t\t\t\t`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\tfragmentShader:\n\t\t\t\t/* glsl */\n\t\t\t\t`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t\t};\n\t\t\tconst geometry = new BoxGeometry(5, 5, 5);\n\t\t\tconst material = new ShaderMaterial({\n\t\t\t\tname: 'CubemapFromEquirect',\n\t\t\t\tuniforms: cloneUniforms(shader.uniforms),\n\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\t\tside: BackSide,\n\t\t\t\tblending: NoBlending\n\t\t\t});\n\t\t\tmaterial.uniforms.tEquirect.value = texture;\n\t\t\tconst mesh = new Mesh(geometry, material);\n\t\t\tconst currentMinFilter = texture.minFilter; // Avoid blurred poles\n\n\t\t\tif (texture.minFilter === LinearMipmapLinearFilter) texture.minFilter = LinearFilter;\n\t\t\tconst camera = new CubeCamera(1, 10, this);\n\t\t\tcamera.update(renderer, mesh);\n\t\t\ttexture.minFilter = currentMinFilter;\n\t\t\tmesh.geometry.dispose();\n\t\t\tmesh.material.dispose();\n\t\t\treturn this;\n\t\t}\n\n\t\tclear(renderer, color, depth, stencil) {\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\trenderer.setRenderTarget(this, i);\n\t\t\t\trenderer.clear(color, depth, stencil);\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\t}\n\n\t}\n\n\tWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\n\tconst _vector1 = /*@__PURE__*/new Vector3();\n\n\tconst _vector2 = /*@__PURE__*/new Vector3();\n\n\tconst _normalMatrix = /*@__PURE__*/new Matrix3();\n\n\tclass Plane {\n\t\tconstructor(normal = new Vector3(1, 0, 0), constant = 0) {\n\t\t\t// normal is assumed to be normalized\n\t\t\tthis.normal = normal;\n\t\t\tthis.constant = constant;\n\t\t}\n\n\t\tset(normal, constant) {\n\t\t\tthis.normal.copy(normal);\n\t\t\tthis.constant = constant;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponents(x, y, z, w) {\n\t\t\tthis.normal.set(x, y, z);\n\t\t\tthis.constant = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromNormalAndCoplanarPoint(normal, point) {\n\t\t\tthis.normal.copy(normal);\n\t\t\tthis.constant = -point.dot(this.normal);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCoplanarPoints(a, b, c) {\n\t\t\tconst normal = _vector1.subVectors(c, b).cross(_vector2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\n\t\t\tthis.setFromNormalAndCoplanarPoint(normal, a);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(plane) {\n\t\t\tthis.normal.copy(plane.normal);\n\t\t\tthis.constant = plane.constant;\n\t\t\treturn this;\n\t\t}\n\n\t\tnormalize() {\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\t\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar(inverseNormalLength);\n\t\t\tthis.constant *= inverseNormalLength;\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.constant *= -1;\n\t\t\tthis.normal.negate();\n\t\t\treturn this;\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\treturn this.normal.dot(point) + this.constant;\n\t\t}\n\n\t\tdistanceToSphere(sphere) {\n\t\t\treturn this.distanceToPoint(sphere.center) - sphere.radius;\n\t\t}\n\n\t\tprojectPoint(point, target) {\n\t\t\treturn target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);\n\t\t}\n\n\t\tintersectLine(line, target) {\n\t\t\tconst direction = line.delta(_vector1);\n\t\t\tconst denominator = this.normal.dot(direction);\n\n\t\t\tif (denominator === 0) {\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif (this.distanceToPoint(line.start) === 0) {\n\t\t\t\t\treturn target.copy(line.start);\n\t\t\t\t} // Unsure if this is the correct method to handle this case.\n\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n\t\t\tif (t < 0 || t > 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn target.copy(direction).multiplyScalar(t).add(line.start);\n\t\t}\n\n\t\tintersectsLine(line) {\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\t\t\tconst startSign = this.distanceToPoint(line.start);\n\t\t\tconst endSign = this.distanceToPoint(line.end);\n\t\t\treturn startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn box.intersectsPlane(this);\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\treturn sphere.intersectsPlane(this);\n\t\t}\n\n\t\tcoplanarPoint(target) {\n\t\t\treturn target.copy(this.normal).multiplyScalar(-this.constant);\n\t\t}\n\n\t\tapplyMatrix4(matrix, optionalNormalMatrix) {\n\t\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix(matrix);\n\n\t\t\tconst referencePoint = this.coplanarPoint(_vector1).applyMatrix4(matrix);\n\t\t\tconst normal = this.normal.applyMatrix3(normalMatrix).normalize();\n\t\t\tthis.constant = -referencePoint.dot(normal);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.constant -= offset.dot(this.normal);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(plane) {\n\t\t\treturn plane.normal.equals(this.normal) && plane.constant === this.constant;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tPlane.prototype.isPlane = true;\n\n\tconst _sphere$2 = /*@__PURE__*/new Sphere();\n\n\tconst _vector$7 = /*@__PURE__*/new Vector3();\n\n\tclass Frustum {\n\t\tconstructor(p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane()) {\n\t\t\tthis.planes = [p0, p1, p2, p3, p4, p5];\n\t\t}\n\n\t\tset(p0, p1, p2, p3, p4, p5) {\n\t\t\tconst planes = this.planes;\n\t\t\tplanes[0].copy(p0);\n\t\t\tplanes[1].copy(p1);\n\t\t\tplanes[2].copy(p2);\n\t\t\tplanes[3].copy(p3);\n\t\t\tplanes[4].copy(p4);\n\t\t\tplanes[5].copy(p5);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(frustum) {\n\t\t\tconst planes = this.planes;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tplanes[i].copy(frustum.planes[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromProjectionMatrix(m) {\n\t\t\tconst planes = this.planes;\n\t\t\tconst me = m.elements;\n\t\t\tconst me0 = me[0],\n\t\t\t\t\t\tme1 = me[1],\n\t\t\t\t\t\tme2 = me[2],\n\t\t\t\t\t\tme3 = me[3];\n\t\t\tconst me4 = me[4],\n\t\t\t\t\t\tme5 = me[5],\n\t\t\t\t\t\tme6 = me[6],\n\t\t\t\t\t\tme7 = me[7];\n\t\t\tconst me8 = me[8],\n\t\t\t\t\t\tme9 = me[9],\n\t\t\t\t\t\tme10 = me[10],\n\t\t\t\t\t\tme11 = me[11];\n\t\t\tconst me12 = me[12],\n\t\t\t\t\t\tme13 = me[13],\n\t\t\t\t\t\tme14 = me[14],\n\t\t\t\t\t\tme15 = me[15];\n\t\t\tplanes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n\t\t\tplanes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n\t\t\tplanes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n\t\t\tplanes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n\t\t\tplanes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n\t\t\tplanes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n\t\t\treturn this;\n\t\t}\n\n\t\tintersectsObject(object) {\n\t\t\tconst geometry = object.geometry;\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$2.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n\n\t\t\treturn this.intersectsSphere(_sphere$2);\n\t\t}\n\n\t\tintersectsSprite(sprite) {\n\t\t\t_sphere$2.center.set(0, 0, 0);\n\n\t\t\t_sphere$2.radius = 0.7071067811865476;\n\n\t\t\t_sphere$2.applyMatrix4(sprite.matrixWorld);\n\n\t\t\treturn this.intersectsSphere(_sphere$2);\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\tconst planes = this.planes;\n\t\t\tconst center = sphere.center;\n\t\t\tconst negRadius = -sphere.radius;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tconst distance = planes[i].distanceToPoint(center);\n\n\t\t\t\tif (distance < negRadius) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\tconst planes = this.planes;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tconst plane = planes[i]; // corner at max distance\n\n\t\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif (plane.distanceToPoint(_vector$7) < 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\tconst planes = this.planes;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tif (planes[i].distanceToPoint(point) < 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tfunction WebGLAnimation() {\n\t\tlet context = null;\n\t\tlet isAnimating = false;\n\t\tlet animationLoop = null;\n\t\tlet requestId = null;\n\n\t\tfunction onAnimationFrame(time, frame) {\n\t\t\tanimationLoop(time, frame);\n\t\t\trequestId = context.requestAnimationFrame(onAnimationFrame);\n\t\t}\n\n\t\treturn {\n\t\t\tstart: function () {\n\t\t\t\tif (isAnimating === true) return;\n\t\t\t\tif (animationLoop === null) return;\n\t\t\t\trequestId = context.requestAnimationFrame(onAnimationFrame);\n\t\t\t\tisAnimating = true;\n\t\t\t},\n\t\t\tstop: function () {\n\t\t\t\tcontext.cancelAnimationFrame(requestId);\n\t\t\t\tisAnimating = false;\n\t\t\t},\n\t\t\tsetAnimationLoop: function (callback) {\n\t\t\t\tanimationLoop = callback;\n\t\t\t},\n\t\t\tsetContext: function (value) {\n\t\t\t\tcontext = value;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction WebGLAttributes(gl, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tconst buffers = new WeakMap();\n\n\t\tfunction createBuffer(attribute, bufferType) {\n\t\t\tconst array = attribute.array;\n\t\t\tconst usage = attribute.usage;\n\t\t\tconst buffer = gl.createBuffer();\n\t\t\tgl.bindBuffer(bufferType, buffer);\n\t\t\tgl.bufferData(bufferType, array, usage);\n\t\t\tattribute.onUploadCallback();\n\t\t\tlet type = gl.FLOAT;\n\n\t\t\tif (array instanceof Float32Array) {\n\t\t\t\ttype = gl.FLOAT;\n\t\t\t} else if (array instanceof Float64Array) {\n\t\t\t\tconsole.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');\n\t\t\t} else if (array instanceof Uint16Array) {\n\t\t\t\tif (attribute.isFloat16BufferAttribute) {\n\t\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t\ttype = gl.HALF_FLOAT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\t\t\t\t}\n\t\t\t} else if (array instanceof Int16Array) {\n\t\t\t\ttype = gl.SHORT;\n\t\t\t} else if (array instanceof Uint32Array) {\n\t\t\t\ttype = gl.UNSIGNED_INT;\n\t\t\t} else if (array instanceof Int32Array) {\n\t\t\t\ttype = gl.INT;\n\t\t\t} else if (array instanceof Int8Array) {\n\t\t\t\ttype = gl.BYTE;\n\t\t\t} else if (array instanceof Uint8Array) {\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\n\t\t\t} else if (array instanceof Uint8ClampedArray) {\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: buffer,\n\t\t\t\ttype: type,\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\t\tversion: attribute.version\n\t\t\t};\n\t\t}\n\n\t\tfunction updateBuffer(buffer, attribute, bufferType) {\n\t\t\tconst array = attribute.array;\n\t\t\tconst updateRange = attribute.updateRange;\n\t\t\tgl.bindBuffer(bufferType, buffer);\n\n\t\t\tif (updateRange.count === -1) {\n\t\t\t\t// Not using update ranges\n\t\t\t\tgl.bufferSubData(bufferType, 0, array);\n\t\t\t} else {\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\tgl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array, updateRange.offset, updateRange.count);\n\t\t\t\t} else {\n\t\t\t\t\tgl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array.subarray(updateRange.offset, updateRange.offset + updateRange.count));\n\t\t\t\t}\n\n\t\t\t\tupdateRange.count = -1; // reset range\n\t\t\t}\n\t\t} //\n\n\n\t\tfunction get(attribute) {\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\t\t\treturn buffers.get(attribute);\n\t\t}\n\n\t\tfunction remove(attribute) {\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\t\t\tconst data = buffers.get(attribute);\n\n\t\t\tif (data) {\n\t\t\t\tgl.deleteBuffer(data.buffer);\n\t\t\t\tbuffers.delete(attribute);\n\t\t\t}\n\t\t}\n\n\t\tfunction update(attribute, bufferType) {\n\t\t\tif (attribute.isGLBufferAttribute) {\n\t\t\t\tconst cached = buffers.get(attribute);\n\n\t\t\t\tif (!cached || cached.version < attribute.version) {\n\t\t\t\t\tbuffers.set(attribute, {\n\t\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\t\tversion: attribute.version\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\t\t\tconst data = buffers.get(attribute);\n\n\t\t\tif (data === undefined) {\n\t\t\t\tbuffers.set(attribute, createBuffer(attribute, bufferType));\n\t\t\t} else if (data.version < attribute.version) {\n\t\t\t\tupdateBuffer(data.buffer, attribute, bufferType);\n\t\t\t\tdata.version = attribute.version;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update\n\t\t};\n\t}\n\n\tclass PlaneGeometry extends BufferGeometry {\n\t\tconstructor(width = 1, height = 1, widthSegments = 1, heightSegments = 1) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PlaneGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments\n\t\t\t};\n\t\t\tconst width_half = width / 2;\n\t\t\tconst height_half = height / 2;\n\t\t\tconst gridX = Math.floor(widthSegments);\n\t\t\tconst gridY = Math.floor(heightSegments);\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\t\t\tconst segment_width = width / gridX;\n\t\t\tconst segment_height = height / gridY; //\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\n\t\t\tfor (let iy = 0; iy < gridY1; iy++) {\n\t\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\n\t\t\t\t\tconst x = ix * segment_width - width_half;\n\t\t\t\t\tvertices.push(x, -y, 0);\n\t\t\t\t\tnormals.push(0, 0, 1);\n\t\t\t\t\tuvs.push(ix / gridX);\n\t\t\t\t\tuvs.push(1 - iy / gridY);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let iy = 0; iy < gridY; iy++) {\n\t\t\t\tfor (let ix = 0; ix < gridX; ix++) {\n\t\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\t\tconst b = ix + gridX1 * (iy + 1);\n\t\t\t\t\tconst c = ix + 1 + gridX1 * (iy + 1);\n\t\t\t\t\tconst d = ix + 1 + gridX1 * iy;\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new PlaneGeometry(data.width, data.height, data.widthSegments, data.heightSegments);\n\t\t}\n\n\t}\n\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\n\tvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n\tvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\n\tvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\n\tvar bsdfs = \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\";\n\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\n\tvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\tvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\n\tvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\n\tvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\n\tvar encodings_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\n\tvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\n\tvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tlightMapIrradiance *= PI;\\n\\t#endif\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\n\tvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\n\tvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec;\\n\\t\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\t\\treflectVec = reflect( - viewDir, normal );\\n\\t\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treflectVec = refract( - viewDir, normal, refractionRatio );\\n\\t\\t\\t#endif\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\n\tvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\\t#endif\\n#endif\";\n\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(\t\t0, 1,\t\t0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\n\tvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\n\tvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\n\tvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\n\tvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\n\tvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\n\tvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\n\tvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform vec2 morphTargetsTextureSize;\\n\\t\\tvec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\\n\\t\\t\\tfloat texelIndex = float( vertexIndex * stride + offset );\\n\\t\\t\\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\\n\\t\\t\\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\\n\\t\\t\\treturn texture( morphTargetsTexture, morphUV ).xyz;\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\\n\\t\\t\\t#else\\n\\t\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\n\tvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\n\tvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\n\tvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\n\tvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\n\tvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\n\tvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\n\tvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\n\tvar output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\n\tvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\n\tvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\n\tvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\n\tvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(\t1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,\t1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,\t1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\n\tvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tfloat transmissionAlpha = 1.0;\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\\n\\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\\n#endif\";\n\n\tvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( attenuationDistance == 0.0 ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\n\n\tvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\n\tvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\n\tvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\n\tconst vertex$g = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\tconst fragment$g = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tgl_FragColor = texture2D( t2D, vUv );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\tconst fragment$f = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\tconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\n\tconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\tconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\n\tconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\tconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\n\tconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$9 = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\tconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\tconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\n\tconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\tconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\n\tconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\tconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tconst ShaderChunk = {\n\t\talphamap_fragment: alphamap_fragment,\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\n\t\talphatest_fragment: alphatest_fragment,\n\t\talphatest_pars_fragment: alphatest_pars_fragment,\n\t\taomap_fragment: aomap_fragment,\n\t\taomap_pars_fragment: aomap_pars_fragment,\n\t\tbegin_vertex: begin_vertex,\n\t\tbeginnormal_vertex: beginnormal_vertex,\n\t\tbsdfs: bsdfs,\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\t\tclipping_planes_fragment: clipping_planes_fragment,\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t\tclipping_planes_vertex: clipping_planes_vertex,\n\t\tcolor_fragment: color_fragment,\n\t\tcolor_pars_fragment: color_pars_fragment,\n\t\tcolor_pars_vertex: color_pars_vertex,\n\t\tcolor_vertex: color_vertex,\n\t\tcommon: common,\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\t\tdisplacementmap_vertex: displacementmap_vertex,\n\t\temissivemap_fragment: emissivemap_fragment,\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\t\tencodings_fragment: encodings_fragment,\n\t\tencodings_pars_fragment: encodings_pars_fragment,\n\t\tenvmap_fragment: envmap_fragment,\n\t\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\n\t\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\t\tenvmap_vertex: envmap_vertex,\n\t\tfog_vertex: fog_vertex,\n\t\tfog_pars_vertex: fog_pars_vertex,\n\t\tfog_fragment: fog_fragment,\n\t\tfog_pars_fragment: fog_pars_fragment,\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\t\tlightmap_fragment: lightmap_fragment,\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\n\t\tlights_lambert_vertex: lights_lambert_vertex,\n\t\tlights_pars_begin: lights_pars_begin,\n\t\tlights_toon_fragment: lights_toon_fragment,\n\t\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\t\tlights_phong_fragment: lights_phong_fragment,\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\t\tlights_physical_fragment: lights_physical_fragment,\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\t\tlights_fragment_begin: lights_fragment_begin,\n\t\tlights_fragment_maps: lights_fragment_maps,\n\t\tlights_fragment_end: lights_fragment_end,\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\t\tmap_fragment: map_fragment,\n\t\tmap_pars_fragment: map_pars_fragment,\n\t\tmap_particle_fragment: map_particle_fragment,\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t\tmorphnormal_vertex: morphnormal_vertex,\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\t\tmorphtarget_vertex: morphtarget_vertex,\n\t\tnormal_fragment_begin: normal_fragment_begin,\n\t\tnormal_fragment_maps: normal_fragment_maps,\n\t\tnormal_pars_fragment: normal_pars_fragment,\n\t\tnormal_pars_vertex: normal_pars_vertex,\n\t\tnormal_vertex: normal_vertex,\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\t\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\t\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\t\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\t\toutput_fragment: output_fragment,\n\t\tpacking: packing,\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t\tproject_vertex: project_vertex,\n\t\tdithering_fragment: dithering_fragment,\n\t\tdithering_pars_fragment: dithering_pars_fragment,\n\t\troughnessmap_fragment: roughnessmap_fragment,\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\t\tshadowmap_vertex: shadowmap_vertex,\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\t\tskinbase_vertex: skinbase_vertex,\n\t\tskinning_pars_vertex: skinning_pars_vertex,\n\t\tskinning_vertex: skinning_vertex,\n\t\tskinnormal_vertex: skinnormal_vertex,\n\t\tspecularmap_fragment: specularmap_fragment,\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\t\ttonemapping_fragment: tonemapping_fragment,\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\t\ttransmission_fragment: transmission_fragment,\n\t\ttransmission_pars_fragment: transmission_pars_fragment,\n\t\tuv_pars_fragment: uv_pars_fragment,\n\t\tuv_pars_vertex: uv_pars_vertex,\n\t\tuv_vertex: uv_vertex,\n\t\tuv2_pars_fragment: uv2_pars_fragment,\n\t\tuv2_pars_vertex: uv2_pars_vertex,\n\t\tuv2_vertex: uv2_vertex,\n\t\tworldpos_vertex: worldpos_vertex,\n\t\tbackground_vert: vertex$g,\n\t\tbackground_frag: fragment$g,\n\t\tcube_vert: vertex$f,\n\t\tcube_frag: fragment$f,\n\t\tdepth_vert: vertex$e,\n\t\tdepth_frag: fragment$e,\n\t\tdistanceRGBA_vert: vertex$d,\n\t\tdistanceRGBA_frag: fragment$d,\n\t\tequirect_vert: vertex$c,\n\t\tequirect_frag: fragment$c,\n\t\tlinedashed_vert: vertex$b,\n\t\tlinedashed_frag: fragment$b,\n\t\tmeshbasic_vert: vertex$a,\n\t\tmeshbasic_frag: fragment$a,\n\t\tmeshlambert_vert: vertex$9,\n\t\tmeshlambert_frag: fragment$9,\n\t\tmeshmatcap_vert: vertex$8,\n\t\tmeshmatcap_frag: fragment$8,\n\t\tmeshnormal_vert: vertex$7,\n\t\tmeshnormal_frag: fragment$7,\n\t\tmeshphong_vert: vertex$6,\n\t\tmeshphong_frag: fragment$6,\n\t\tmeshphysical_vert: vertex$5,\n\t\tmeshphysical_frag: fragment$5,\n\t\tmeshtoon_vert: vertex$4,\n\t\tmeshtoon_frag: fragment$4,\n\t\tpoints_vert: vertex$3,\n\t\tpoints_frag: fragment$3,\n\t\tshadow_vert: vertex$2,\n\t\tshadow_frag: fragment$2,\n\t\tsprite_vert: vertex$1,\n\t\tsprite_frag: fragment$1\n\t};\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tconst UniformsLib = {\n\t\tcommon: {\n\t\t\tdiffuse: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tmap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tuvTransform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t},\n\t\t\tuv2Transform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t},\n\t\t\talphaMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaTest: {\n\t\t\t\tvalue: 0\n\t\t\t}\n\t\t},\n\t\tspecularmap: {\n\t\t\tspecularMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tenvmap: {\n\t\t\tenvMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tflipEnvMap: {\n\t\t\t\tvalue: -1\n\t\t\t},\n\t\t\treflectivity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\t// basic, lambert, phong\n\t\t\tior: {\n\t\t\t\tvalue: 1.5\n\t\t\t},\n\t\t\t// standard, physical\n\t\t\trefractionRatio: {\n\t\t\t\tvalue: 0.98\n\t\t\t}\n\t\t},\n\t\taomap: {\n\t\t\taoMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\taoMapIntensity: {\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t},\n\t\tlightmap: {\n\t\t\tlightMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tlightMapIntensity: {\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t},\n\t\temissivemap: {\n\t\t\temissiveMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tbumpmap: {\n\t\t\tbumpMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tbumpScale: {\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t},\n\t\tnormalmap: {\n\t\t\tnormalMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tnormalScale: {\n\t\t\t\tvalue: new Vector2(1, 1)\n\t\t\t}\n\t\t},\n\t\tdisplacementmap: {\n\t\t\tdisplacementMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tdisplacementScale: {\n\t\t\t\tvalue: 1\n\t\t\t},\n\t\t\tdisplacementBias: {\n\t\t\t\tvalue: 0\n\t\t\t}\n\t\t},\n\t\troughnessmap: {\n\t\t\troughnessMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tmetalnessmap: {\n\t\t\tmetalnessMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tgradientmap: {\n\t\t\tgradientMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tfog: {\n\t\t\tfogDensity: {\n\t\t\t\tvalue: 0.00025\n\t\t\t},\n\t\t\tfogNear: {\n\t\t\t\tvalue: 1\n\t\t\t},\n\t\t\tfogFar: {\n\t\t\t\tvalue: 2000\n\t\t\t},\n\t\t\tfogColor: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t}\n\t\t},\n\t\tlights: {\n\t\t\tambientLightColor: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tlightProbe: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tdirectionalLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tcolor: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdirectionalLightShadows: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowNormalBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdirectionalShadowMap: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tdirectionalShadowMatrix: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tspotLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tdistance: {},\n\t\t\t\t\tconeCos: {},\n\t\t\t\t\tpenumbraCos: {},\n\t\t\t\t\tdecay: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tspotLightShadows: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowNormalBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tspotShadowMap: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tspotShadowMatrix: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tpointLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\tdecay: {},\n\t\t\t\t\tdistance: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tpointLightShadows: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowNormalBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {},\n\t\t\t\t\tshadowCameraNear: {},\n\t\t\t\t\tshadowCameraFar: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tpointShadowMap: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tpointShadowMatrix: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\themisphereLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tskyColor: {},\n\t\t\t\t\tgroundColor: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\t\trectAreaLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\twidth: {},\n\t\t\t\t\theight: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tltc_1: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tltc_2: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tpoints: {\n\t\t\tdiffuse: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tmap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaTest: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tuvTransform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t},\n\t\tsprite: {\n\t\t\tdiffuse: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tcenter: {\n\t\t\t\tvalue: new Vector2(0.5, 0.5)\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tvalue: 0.0\n\t\t\t},\n\t\t\tmap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaTest: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tuvTransform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t}\n\t};\n\n\tconst ShaderLib = {\n\t\tbasic: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.fog]),\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\t\t},\n\t\tlambert: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\t\t},\n\t\tphong: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t},\n\t\t\t\tspecular: {\n\t\t\t\t\tvalue: new Color(0x111111)\n\t\t\t\t},\n\t\t\t\tshininess: {\n\t\t\t\t\tvalue: 30\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\n\t\t},\n\t\tstandard: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.roughnessmap, UniformsLib.metalnessmap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t},\n\t\t\t\troughness: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t},\n\t\t\t\tmetalness: {\n\t\t\t\t\tvalue: 0.0\n\t\t\t\t},\n\t\t\t\tenvMapIntensity: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t} // temporary\n\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\t\t},\n\t\ttoon: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.gradientmap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\t\t},\n\t\tmatcap: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, {\n\t\t\t\tmatcap: {\n\t\t\t\t\tvalue: null\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\t\t},\n\t\tpoints: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.points, UniformsLib.fog]),\n\t\t\tvertexShader: ShaderChunk.points_vert,\n\t\t\tfragmentShader: ShaderChunk.points_frag\n\t\t},\n\t\tdashed: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.fog, {\n\t\t\t\tscale: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\tdashSize: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\ttotalSize: {\n\t\t\t\t\tvalue: 2\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\n\t\t},\n\t\tdepth: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap]),\n\t\t\tvertexShader: ShaderChunk.depth_vert,\n\t\t\tfragmentShader: ShaderChunk.depth_frag\n\t\t},\n\t\tnormal: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, {\n\t\t\t\topacity: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\t\t},\n\t\tsprite: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.sprite, UniformsLib.fog]),\n\t\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\t\tfragmentShader: ShaderChunk.sprite_frag\n\t\t},\n\t\tbackground: {\n\t\t\tuniforms: {\n\t\t\t\tuvTransform: {\n\t\t\t\t\tvalue: new Matrix3()\n\t\t\t\t},\n\t\t\t\tt2D: {\n\t\t\t\t\tvalue: null\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: ShaderChunk.background_vert,\n\t\t\tfragmentShader: ShaderChunk.background_frag\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\t\tcube: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.envmap, {\n\t\t\t\topacity: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.cube_vert,\n\t\t\tfragmentShader: ShaderChunk.cube_frag\n\t\t},\n\t\tequirect: {\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: {\n\t\t\t\t\tvalue: null\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\n\t\t},\n\t\tdistanceRGBA: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap, {\n\t\t\t\treferencePosition: {\n\t\t\t\t\tvalue: new Vector3()\n\t\t\t\t},\n\t\t\t\tnearDistance: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\tfarDistance: {\n\t\t\t\t\tvalue: 1000\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\t\t},\n\t\tshadow: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.lights, UniformsLib.fog, {\n\t\t\t\tcolor: {\n\t\t\t\t\tvalue: new Color(0x00000)\n\t\t\t\t},\n\t\t\t\topacity: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\t\tfragmentShader: ShaderChunk.shadow_frag\n\t\t}\n\t};\n\tShaderLib.physical = {\n\t\tuniforms: mergeUniforms([ShaderLib.standard.uniforms, {\n\t\t\tclearcoat: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tclearcoatMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tclearcoatRoughness: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tclearcoatRoughnessMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tclearcoatNormalScale: {\n\t\t\t\tvalue: new Vector2(1, 1)\n\t\t\t},\n\t\t\tclearcoatNormalMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tsheen: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tsheenColor: {\n\t\t\t\tvalue: new Color(0x000000)\n\t\t\t},\n\t\t\tsheenColorMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tsheenRoughness: {\n\t\t\t\tvalue: 1\n\t\t\t},\n\t\t\tsheenRoughnessMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\ttransmission: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\ttransmissionMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\ttransmissionSamplerSize: {\n\t\t\t\tvalue: new Vector2()\n\t\t\t},\n\t\t\ttransmissionSamplerMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tthickness: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tthicknessMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tattenuationDistance: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tattenuationColor: {\n\t\t\t\tvalue: new Color(0x000000)\n\t\t\t},\n\t\t\tspecularIntensity: {\n\t\t\t\tvalue: 1\n\t\t\t},\n\t\t\tspecularIntensityMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tspecularColor: {\n\t\t\t\tvalue: new Color(1, 1, 1)\n\t\t\t},\n\t\t\tspecularColorMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t}]),\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\t};\n\n\tfunction WebGLBackground(renderer, cubemaps, state, objects, alpha, premultipliedAlpha) {\n\t\tconst clearColor = new Color(0x000000);\n\t\tlet clearAlpha = alpha === true ? 0 : 1;\n\t\tlet planeMesh;\n\t\tlet boxMesh;\n\t\tlet currentBackground = null;\n\t\tlet currentBackgroundVersion = 0;\n\t\tlet currentTonemapping = null;\n\n\t\tfunction render(renderList, scene) {\n\t\t\tlet forceClear = false;\n\t\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\t\tif (background && background.isTexture) {\n\t\t\t\tbackground = cubemaps.get(background);\n\t\t\t} // Ignore background in AR\n\t\t\t// TODO: Reconsider this.\n\n\n\t\t\tconst xr = renderer.xr;\n\t\t\tconst session = xr.getSession && xr.getSession();\n\n\t\t\tif (session && session.environmentBlendMode === 'additive') {\n\t\t\t\tbackground = null;\n\t\t\t}\n\n\t\t\tif (background === null) {\n\t\t\t\tsetClear(clearColor, clearAlpha);\n\t\t\t} else if (background && background.isColor) {\n\t\t\t\tsetClear(background, 1);\n\t\t\t\tforceClear = true;\n\t\t\t}\n\n\t\t\tif (renderer.autoClear || forceClear) {\n\t\t\t\trenderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n\t\t\t}\n\n\t\t\tif (background && (background.isCubeTexture || background.mapping === CubeUVReflectionMapping)) {\n\t\t\t\tif (boxMesh === undefined) {\n\t\t\t\t\tboxMesh = new Mesh(new BoxGeometry(1, 1, 1), new ShaderMaterial({\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms(ShaderLib.cube.uniforms),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t}));\n\t\t\t\t\tboxMesh.geometry.deleteAttribute('normal');\n\t\t\t\t\tboxMesh.geometry.deleteAttribute('uv');\n\n\t\t\t\t\tboxMesh.onBeforeRender = function (renderer, scene, camera) {\n\t\t\t\t\t\tthis.matrixWorld.copyPosition(camera.matrixWorld);\n\t\t\t\t\t}; // enable code injection for non-built-in material\n\n\n\t\t\t\t\tObject.defineProperty(boxMesh.material, 'envMap', {\n\t\t\t\t\t\tget: function () {\n\t\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tobjects.update(boxMesh);\n\t\t\t\t}\n\n\t\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\t\tboxMesh.material.uniforms.flipEnvMap.value = background.isCubeTexture && background.isRenderTargetTexture === false ? -1 : 1;\n\n\t\t\t\tif (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\n\t\t\t\t\tboxMesh.material.needsUpdate = true;\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\t\t\t\t} // push to the pre-sorted opaque render list\n\n\n\t\t\t\trenderList.unshift(boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null);\n\t\t\t} else if (background && background.isTexture) {\n\t\t\t\tif (planeMesh === undefined) {\n\t\t\t\t\tplaneMesh = new Mesh(new PlaneGeometry(2, 2), new ShaderMaterial({\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms(ShaderLib.background.uniforms),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t}));\n\t\t\t\t\tplaneMesh.geometry.deleteAttribute('normal'); // enable code injection for non-built-in material\n\n\t\t\t\t\tObject.defineProperty(planeMesh.material, 'map', {\n\t\t\t\t\t\tget: function () {\n\t\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tobjects.update(planeMesh);\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\t\tif (background.matrixAutoUpdate === true) {\n\t\t\t\t\tbackground.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy(background.matrix);\n\n\t\t\t\tif (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\n\t\t\t\t\tplaneMesh.material.needsUpdate = true;\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\t\t\t\t} // push to the pre-sorted opaque render list\n\n\n\t\t\t\trenderList.unshift(planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null);\n\t\t\t}\n\t\t}\n\n\t\tfunction setClear(color, alpha) {\n\t\t\tstate.buffers.color.setClear(color.r, color.g, color.b, alpha, premultipliedAlpha);\n\t\t}\n\n\t\treturn {\n\t\t\tgetClearColor: function () {\n\t\t\t\treturn clearColor;\n\t\t\t},\n\t\t\tsetClearColor: function (color, alpha = 1) {\n\t\t\t\tclearColor.set(color);\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear(clearColor, clearAlpha);\n\t\t\t},\n\t\t\tgetClearAlpha: function () {\n\t\t\t\treturn clearAlpha;\n\t\t\t},\n\t\t\tsetClearAlpha: function (alpha) {\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear(clearColor, clearAlpha);\n\t\t\t},\n\t\t\trender: render\n\t\t};\n\t}\n\n\tfunction WebGLBindingStates(gl, extensions, attributes, capabilities) {\n\t\tconst maxVertexAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\t\tconst extension = capabilities.isWebGL2 ? null : extensions.get('OES_vertex_array_object');\n\t\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\t\tconst bindingStates = {};\n\t\tconst defaultState = createBindingState(null);\n\t\tlet currentState = defaultState;\n\n\t\tfunction setup(object, material, program, geometry, index) {\n\t\t\tlet updateBuffers = false;\n\n\t\t\tif (vaoAvailable) {\n\t\t\t\tconst state = getBindingState(geometry, program, material);\n\n\t\t\t\tif (currentState !== state) {\n\t\t\t\t\tcurrentState = state;\n\t\t\t\t\tbindVertexArrayObject(currentState.object);\n\t\t\t\t}\n\n\t\t\t\tupdateBuffers = needsUpdate(geometry, index);\n\t\t\t\tif (updateBuffers) saveCache(geometry, index);\n\t\t\t} else {\n\t\t\t\tconst wireframe = material.wireframe === true;\n\n\t\t\t\tif (currentState.geometry !== geometry.id || currentState.program !== program.id || currentState.wireframe !== wireframe) {\n\t\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\t\tcurrentState.program = program.id;\n\t\t\t\t\tcurrentState.wireframe = wireframe;\n\t\t\t\t\tupdateBuffers = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (object.isInstancedMesh === true) {\n\t\t\t\tupdateBuffers = true;\n\t\t\t}\n\n\t\t\tif (index !== null) {\n\t\t\t\tattributes.update(index, gl.ELEMENT_ARRAY_BUFFER);\n\t\t\t}\n\n\t\t\tif (updateBuffers) {\n\t\t\t\tsetupVertexAttributes(object, material, program, geometry);\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, attributes.get(index).buffer);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction createVertexArrayObject() {\n\t\t\tif (capabilities.isWebGL2) return gl.createVertexArray();\n\t\t\treturn extension.createVertexArrayOES();\n\t\t}\n\n\t\tfunction bindVertexArrayObject(vao) {\n\t\t\tif (capabilities.isWebGL2) return gl.bindVertexArray(vao);\n\t\t\treturn extension.bindVertexArrayOES(vao);\n\t\t}\n\n\t\tfunction deleteVertexArrayObject(vao) {\n\t\t\tif (capabilities.isWebGL2) return gl.deleteVertexArray(vao);\n\t\t\treturn extension.deleteVertexArrayOES(vao);\n\t\t}\n\n\t\tfunction getBindingState(geometry, program, material) {\n\t\t\tconst wireframe = material.wireframe === true;\n\t\t\tlet programMap = bindingStates[geometry.id];\n\n\t\t\tif (programMap === undefined) {\n\t\t\t\tprogramMap = {};\n\t\t\t\tbindingStates[geometry.id] = programMap;\n\t\t\t}\n\n\t\t\tlet stateMap = programMap[program.id];\n\n\t\t\tif (stateMap === undefined) {\n\t\t\t\tstateMap = {};\n\t\t\t\tprogramMap[program.id] = stateMap;\n\t\t\t}\n\n\t\t\tlet state = stateMap[wireframe];\n\n\t\t\tif (state === undefined) {\n\t\t\t\tstate = createBindingState(createVertexArrayObject());\n\t\t\t\tstateMap[wireframe] = state;\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\tfunction createBindingState(vao) {\n\t\t\tconst newAttributes = [];\n\t\t\tconst enabledAttributes = [];\n\t\t\tconst attributeDivisors = [];\n\n\t\t\tfor (let i = 0; i < maxVertexAttributes; i++) {\n\t\t\t\tnewAttributes[i] = 0;\n\t\t\t\tenabledAttributes[i] = 0;\n\t\t\t\tattributeDivisors[i] = 0;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\t\tgeometry: null,\n\t\t\t\tprogram: null,\n\t\t\t\twireframe: false,\n\t\t\t\tnewAttributes: newAttributes,\n\t\t\t\tenabledAttributes: enabledAttributes,\n\t\t\t\tattributeDivisors: attributeDivisors,\n\t\t\t\tobject: vao,\n\t\t\t\tattributes: {},\n\t\t\t\tindex: null\n\t\t\t};\n\t\t}\n\n\t\tfunction needsUpdate(geometry, index) {\n\t\t\tconst cachedAttributes = currentState.attributes;\n\t\t\tconst geometryAttributes = geometry.attributes;\n\t\t\tlet attributesNum = 0;\n\n\t\t\tfor (const key in geometryAttributes) {\n\t\t\t\tconst cachedAttribute = cachedAttributes[key];\n\t\t\t\tconst geometryAttribute = geometryAttributes[key];\n\t\t\t\tif (cachedAttribute === undefined) return true;\n\t\t\t\tif (cachedAttribute.attribute !== geometryAttribute) return true;\n\t\t\t\tif (cachedAttribute.data !== geometryAttribute.data) return true;\n\t\t\t\tattributesNum++;\n\t\t\t}\n\n\t\t\tif (currentState.attributesNum !== attributesNum) return true;\n\t\t\tif (currentState.index !== index) return true;\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction saveCache(geometry, index) {\n\t\t\tconst cache = {};\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tlet attributesNum = 0;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tconst attribute = attributes[key];\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif (attribute.data) {\n\t\t\t\t\tdata.data = attribute.data;\n\t\t\t\t}\n\n\t\t\t\tcache[key] = data;\n\t\t\t\tattributesNum++;\n\t\t\t}\n\n\t\t\tcurrentState.attributes = cache;\n\t\t\tcurrentState.attributesNum = attributesNum;\n\t\t\tcurrentState.index = index;\n\t\t}\n\n\t\tfunction initAttributes() {\n\t\t\tconst newAttributes = currentState.newAttributes;\n\n\t\t\tfor (let i = 0, il = newAttributes.length; i < il; i++) {\n\t\t\t\tnewAttributes[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\tfunction enableAttribute(attribute) {\n\t\t\tenableAttributeAndDivisor(attribute, 0);\n\t\t}\n\n\t\tfunction enableAttributeAndDivisor(attribute, meshPerAttribute) {\n\t\t\tconst newAttributes = currentState.newAttributes;\n\t\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\t\tconst attributeDivisors = currentState.attributeDivisors;\n\t\t\tnewAttributes[attribute] = 1;\n\n\t\t\tif (enabledAttributes[attribute] === 0) {\n\t\t\t\tgl.enableVertexAttribArray(attribute);\n\t\t\t\tenabledAttributes[attribute] = 1;\n\t\t\t}\n\n\t\t\tif (attributeDivisors[attribute] !== meshPerAttribute) {\n\t\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get('ANGLE_instanced_arrays');\n\t\t\t\textension[capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'](attribute, meshPerAttribute);\n\t\t\t\tattributeDivisors[attribute] = meshPerAttribute;\n\t\t\t}\n\t\t}\n\n\t\tfunction disableUnusedAttributes() {\n\t\t\tconst newAttributes = currentState.newAttributes;\n\t\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\t\tfor (let i = 0, il = enabledAttributes.length; i < il; i++) {\n\t\t\t\tif (enabledAttributes[i] !== newAttributes[i]) {\n\t\t\t\t\tgl.disableVertexAttribArray(i);\n\t\t\t\t\tenabledAttributes[i] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction vertexAttribPointer(index, size, type, normalized, stride, offset) {\n\t\t\tif (capabilities.isWebGL2 === true && (type === gl.INT || type === gl.UNSIGNED_INT)) {\n\t\t\t\tgl.vertexAttribIPointer(index, size, type, stride, offset);\n\t\t\t} else {\n\t\t\t\tgl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n\t\t\t}\n\t\t}\n\n\t\tfunction setupVertexAttributes(object, material, program, geometry) {\n\t\t\tif (capabilities.isWebGL2 === false && (object.isInstancedMesh || geometry.isInstancedBufferGeometry)) {\n\t\t\t\tif (extensions.get('ANGLE_instanced_arrays') === null) return;\n\t\t\t}\n\n\t\t\tinitAttributes();\n\t\t\tconst geometryAttributes = geometry.attributes;\n\t\t\tconst programAttributes = program.getAttributes();\n\t\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor (const name in programAttributes) {\n\t\t\t\tconst programAttribute = programAttributes[name];\n\n\t\t\t\tif (programAttribute.location >= 0) {\n\t\t\t\t\tlet geometryAttribute = geometryAttributes[name];\n\n\t\t\t\t\tif (geometryAttribute === undefined) {\n\t\t\t\t\t\tif (name === 'instanceMatrix' && object.instanceMatrix) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\t\tif (name === 'instanceColor' && object.instanceColor) geometryAttribute = object.instanceColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (geometryAttribute !== undefined) {\n\t\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\t\t\t\t\t\tconst attribute = attributes.get(geometryAttribute); // TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif (attribute === undefined) continue;\n\t\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t\tif (geometryAttribute.isInterleavedBufferAttribute) {\n\t\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif (data && data.isInstancedInterleavedBuffer) {\n\t\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\n\t\t\t\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute.location + i, data.meshPerAttribute);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined) {\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\n\t\t\t\t\t\t\t\t\tenableAttribute(programAttribute.location + i);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\n\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\n\t\t\t\t\t\t\t\tvertexAttribPointer(programAttribute.location + i, size / programAttribute.locationSize, type, normalized, stride * bytesPerElement, (offset + size / programAttribute.locationSize * i) * bytesPerElement);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (geometryAttribute.isInstancedBufferAttribute) {\n\t\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\n\t\t\t\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute.location + i, geometryAttribute.meshPerAttribute);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined) {\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\n\t\t\t\t\t\t\t\t\tenableAttribute(programAttribute.location + i);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\n\t\t\t\t\t\t\tfor (let i = 0; i < programAttribute.locationSize; i++) {\n\t\t\t\t\t\t\t\tvertexAttribPointer(programAttribute.location + i, size / programAttribute.locationSize, type, normalized, size * bytesPerElement, size / programAttribute.locationSize * i * bytesPerElement);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (materialDefaultAttributeValues !== undefined) {\n\t\t\t\t\t\tconst value = materialDefaultAttributeValues[name];\n\n\t\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\t\tswitch (value.length) {\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib2fv(programAttribute.location, value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib3fv(programAttribute.location, value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib4fv(programAttribute.location, value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib1fv(programAttribute.location, value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdisableUnusedAttributes();\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\treset();\n\n\t\t\tfor (const geometryId in bindingStates) {\n\t\t\t\tconst programMap = bindingStates[geometryId];\n\n\t\t\t\tfor (const programId in programMap) {\n\t\t\t\t\tconst stateMap = programMap[programId];\n\n\t\t\t\t\tfor (const wireframe in stateMap) {\n\t\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\n\t\t\t\t\t\tdelete stateMap[wireframe];\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete programMap[programId];\n\t\t\t\t}\n\n\t\t\t\tdelete bindingStates[geometryId];\n\t\t\t}\n\t\t}\n\n\t\tfunction releaseStatesOfGeometry(geometry) {\n\t\t\tif (bindingStates[geometry.id] === undefined) return;\n\t\t\tconst programMap = bindingStates[geometry.id];\n\n\t\t\tfor (const programId in programMap) {\n\t\t\t\tconst stateMap = programMap[programId];\n\n\t\t\t\tfor (const wireframe in stateMap) {\n\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\n\t\t\t\t\tdelete stateMap[wireframe];\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[programId];\n\t\t\t}\n\n\t\t\tdelete bindingStates[geometry.id];\n\t\t}\n\n\t\tfunction releaseStatesOfProgram(program) {\n\t\t\tfor (const geometryId in bindingStates) {\n\t\t\t\tconst programMap = bindingStates[geometryId];\n\t\t\t\tif (programMap[program.id] === undefined) continue;\n\t\t\t\tconst stateMap = programMap[program.id];\n\n\t\t\t\tfor (const wireframe in stateMap) {\n\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\n\t\t\t\t\tdelete stateMap[wireframe];\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[program.id];\n\t\t\t}\n\t\t}\n\n\t\tfunction reset() {\n\t\t\tresetDefaultState();\n\t\t\tif (currentState === defaultState) return;\n\t\t\tcurrentState = defaultState;\n\t\t\tbindVertexArrayObject(currentState.object);\n\t\t} // for backward-compatilibity\n\n\n\t\tfunction resetDefaultState() {\n\t\t\tdefaultState.geometry = null;\n\t\t\tdefaultState.program = null;\n\t\t\tdefaultState.wireframe = false;\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\treset: reset,\n\t\t\tresetDefaultState: resetDefaultState,\n\t\t\tdispose: dispose,\n\t\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\t\t\tinitAttributes: initAttributes,\n\t\t\tenableAttribute: enableAttribute,\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes\n\t\t};\n\t}\n\n\tfunction WebGLBufferRenderer(gl, extensions, info, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tlet mode;\n\n\t\tfunction setMode(value) {\n\t\t\tmode = value;\n\t\t}\n\n\t\tfunction render(start, count) {\n\t\t\tgl.drawArrays(mode, start, count);\n\t\t\tinfo.update(count, mode, 1);\n\t\t}\n\n\t\tfunction renderInstances(start, count, primcount) {\n\t\t\tif (primcount === 0) return;\n\t\t\tlet extension, methodName;\n\n\t\t\tif (isWebGL2) {\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawArraysInstanced';\n\t\t\t} else {\n\t\t\t\textension = extensions.get('ANGLE_instanced_arrays');\n\t\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\t\tif (extension === null) {\n\t\t\t\t\tconsole.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\textension[methodName](mode, start, count, primcount);\n\t\t\tinfo.update(count, mode, primcount);\n\t\t} //\n\n\n\t\tthis.setMode = setMode;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\t}\n\n\tfunction WebGLCapabilities(gl, extensions, parameters) {\n\t\tlet maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\t\t\tif (maxAnisotropy !== undefined) return maxAnisotropy;\n\n\t\t\tif (extensions.has('EXT_texture_filter_anisotropic') === true) {\n\t\t\t\tconst extension = extensions.get('EXT_texture_filter_anisotropic');\n\t\t\t\tmaxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n\t\t\t} else {\n\t\t\t\tmaxAnisotropy = 0;\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\t\t}\n\n\t\tfunction getMaxPrecision(precision) {\n\t\t\tif (precision === 'highp') {\n\t\t\t\tif (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n\t\t\t\t\treturn 'highp';\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\t\t\t}\n\n\t\t\tif (precision === 'mediump') {\n\t\t\t\tif (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n\t\t\t\t\treturn 'mediump';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\t\t}\n\n\t\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext;\n\t\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tconst maxPrecision = getMaxPrecision(precision);\n\n\t\tif (maxPrecision !== precision) {\n\t\t\tconsole.warn('THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.');\n\t\t\tprecision = maxPrecision;\n\t\t}\n\n\t\tconst drawBuffers = isWebGL2 || extensions.has('WEBGL_draw_buffers');\n\t\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\t\tconst maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n\t\tconst maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n\t\tconst maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n\t\tconst maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n\t\tconst maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\t\tconst maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n\t\tconst maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n\t\tconst maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n\t\tconst vertexTextures = maxVertexTextures > 0;\n\t\tconst floatFragmentTextures = isWebGL2 || extensions.has('OES_texture_float');\n\t\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\t\tconst maxSamples = isWebGL2 ? gl.getParameter(gl.MAX_SAMPLES) : 0;\n\t\treturn {\n\t\t\tisWebGL2: isWebGL2,\n\t\t\tdrawBuffers: drawBuffers,\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\t\tgetMaxPrecision: getMaxPrecision,\n\t\t\tprecision: precision,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\t\tmaxTextures: maxTextures,\n\t\t\tmaxVertexTextures: maxVertexTextures,\n\t\t\tmaxTextureSize: maxTextureSize,\n\t\t\tmaxCubemapSize: maxCubemapSize,\n\t\t\tmaxAttributes: maxAttributes,\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\t\tmaxVaryings: maxVaryings,\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\t\t\tvertexTextures: vertexTextures,\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\t\tfloatVertexTextures: floatVertexTextures,\n\t\t\tmaxSamples: maxSamples\n\t\t};\n\t}\n\n\tfunction WebGLClipping(properties) {\n\t\tconst scope = this;\n\t\tlet globalState = null,\n\t\t\t\tnumGlobalPlanes = 0,\n\t\t\t\tlocalClippingEnabled = false,\n\t\t\t\trenderingShadows = false;\n\t\tconst plane = new Plane(),\n\t\t\t\t\tviewNormalMatrix = new Matrix3(),\n\t\t\t\t\tuniform = {\n\t\t\tvalue: null,\n\t\t\tneedsUpdate: false\n\t\t};\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\t\tthis.numIntersection = 0;\n\n\t\tthis.init = function (planes, enableLocalClipping, camera) {\n\t\t\tconst enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 || localClippingEnabled;\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\t\t\tglobalState = projectPlanes(planes, camera, 0);\n\t\t\tnumGlobalPlanes = planes.length;\n\t\t\treturn enabled;\n\t\t};\n\n\t\tthis.beginShadows = function () {\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes(null);\n\t\t};\n\n\t\tthis.endShadows = function () {\n\t\t\trenderingShadows = false;\n\t\t\tresetGlobalState();\n\t\t};\n\n\t\tthis.setState = function (material, camera, useCache) {\n\t\t\tconst planes = material.clippingPlanes,\n\t\t\t\t\t\tclipIntersection = material.clipIntersection,\n\t\t\t\t\t\tclipShadows = material.clipShadows;\n\t\t\tconst materialProperties = properties.get(material);\n\n\t\t\tif (!localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && !clipShadows) {\n\t\t\t\t// there's no local clipping\n\t\t\t\tif (renderingShadows) {\n\t\t\t\t\t// there's no global clipping\n\t\t\t\t\tprojectPlanes(null);\n\t\t\t\t} else {\n\t\t\t\t\tresetGlobalState();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\t\t\tlGlobal = nGlobal * 4;\n\t\t\t\tlet dstArray = materialProperties.clippingState || null;\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes(planes, camera, lGlobal, useCache);\n\n\t\t\t\tfor (let i = 0; i !== lGlobal; ++i) {\n\t\t\t\t\tdstArray[i] = globalState[i];\n\t\t\t\t}\n\n\t\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t\tthis.numPlanes += nGlobal;\n\t\t\t}\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\t\t\tif (uniform.value !== globalState) {\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\t\t\tscope.numIntersection = 0;\n\t\t}\n\n\t\tfunction projectPlanes(planes, camera, dstOffset, skipTransform) {\n\t\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\t\tlet dstArray = null;\n\n\t\t\tif (nPlanes !== 0) {\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif (skipTransform !== true || dstArray === null) {\n\t\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix(viewMatrix);\n\n\t\t\t\t\tif (dstArray === null || dstArray.length < flatSize) {\n\t\t\t\t\t\tdstArray = new Float32Array(flatSize);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {\n\t\t\t\t\t\tplane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);\n\t\t\t\t\t\tplane.normal.toArray(dstArray, i4);\n\t\t\t\t\t\tdstArray[i4 + 3] = plane.constant;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\t\t\tscope.numIntersection = 0;\n\t\t\treturn dstArray;\n\t\t}\n\t}\n\n\tfunction WebGLCubeMaps(renderer) {\n\t\tlet cubemaps = new WeakMap();\n\n\t\tfunction mapTextureMapping(texture, mapping) {\n\t\t\tif (mapping === EquirectangularReflectionMapping) {\n\t\t\t\ttexture.mapping = CubeReflectionMapping;\n\t\t\t} else if (mapping === EquirectangularRefractionMapping) {\n\t\t\t\ttexture.mapping = CubeRefractionMapping;\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tfunction get(texture) {\n\t\t\tif (texture && texture.isTexture && texture.isRenderTargetTexture === false) {\n\t\t\t\tconst mapping = texture.mapping;\n\n\t\t\t\tif (mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping) {\n\t\t\t\t\tif (cubemaps.has(texture)) {\n\t\t\t\t\t\tconst cubemap = cubemaps.get(texture).texture;\n\t\t\t\t\t\treturn mapTextureMapping(cubemap, texture.mapping);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif (image && image.height > 0) {\n\t\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget(image.height / 2);\n\t\t\t\t\t\t\trenderTarget.fromEquirectangularTexture(renderer, texture);\n\t\t\t\t\t\t\tcubemaps.set(texture, renderTarget);\n\t\t\t\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\n\t\t\t\t\t\t\treturn mapTextureMapping(renderTarget.texture, texture.mapping);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tfunction onTextureDispose(event) {\n\t\t\tconst texture = event.target;\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\n\t\t\tconst cubemap = cubemaps.get(texture);\n\n\t\t\tif (cubemap !== undefined) {\n\t\t\t\tcubemaps.delete(texture);\n\t\t\t\tcubemap.dispose();\n\t\t\t}\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tcubemaps = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tclass OrthographicCamera extends Camera {\n\t\tconstructor(left = -1, right = 1, top = 1, bottom = -1, near = 0.1, far = 2000) {\n\t\t\tsuper();\n\t\t\tthis.type = 'OrthographicCamera';\n\t\t\tthis.zoom = 1;\n\t\t\tthis.view = null;\n\t\t\tthis.left = left;\n\t\t\tthis.right = right;\n\t\t\tthis.top = top;\n\t\t\tthis.bottom = bottom;\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign({}, source.view);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetViewOffset(fullWidth, fullHeight, x, y, width, height) {\n\t\t\tif (this.view === null) {\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tclearViewOffset() {\n\t\t\tif (this.view !== null) {\n\t\t\t\tthis.view.enabled = false;\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tupdateProjectionMatrix() {\n\t\t\tconst dx = (this.right - this.left) / (2 * this.zoom);\n\t\t\tconst dy = (this.top - this.bottom) / (2 * this.zoom);\n\t\t\tconst cx = (this.right + this.left) / 2;\n\t\t\tconst cy = (this.top + this.bottom) / 2;\n\t\t\tlet left = cx - dx;\n\t\t\tlet right = cx + dx;\n\t\t\tlet top = cy + dy;\n\t\t\tlet bottom = cy - dy;\n\n\t\t\tif (this.view !== null && this.view.enabled) {\n\t\t\t\tconst scaleW = (this.right - this.left) / this.view.fullWidth / this.zoom;\n\t\t\t\tconst scaleH = (this.top - this.bottom) / this.view.fullHeight / this.zoom;\n\t\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\t\tright = left + scaleW * this.view.width;\n\t\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\t\tbottom = top - scaleH * this.view.height;\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\n\t\t\tthis.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tif (this.view !== null) data.object.view = Object.assign({}, this.view);\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tOrthographicCamera.prototype.isOrthographicCamera = true;\n\n\tclass RawShaderMaterial extends ShaderMaterial {\n\t\tconstructor(parameters) {\n\t\t\tsuper(parameters);\n\t\t\tthis.type = 'RawShaderMaterial';\n\t\t}\n\n\t}\n\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n\tconst LOD_MIN = 4;\n\tconst LOD_MAX = 8;\n\tconst SIZE_MAX = Math.pow(2, LOD_MAX); // The standard deviations (radians) associated with the extra mips. These are\n\t// chosen to approximate a Trowbridge-Reitz distribution function times the\n\t// geometric shadowing function. These sigma values squared must match the\n\t// variance #defines in cube_uv_reflection_fragment.glsl.js.\n\n\tconst EXTRA_LOD_SIGMA = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582];\n\tconst TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length; // The maximum length of the blur for loop. Smaller sigmas will use fewer\n\t// samples and exit early, but not recompile the shader.\n\n\tconst MAX_SAMPLES = 20;\n\n\tconst _flatCamera = /*@__PURE__*/new OrthographicCamera();\n\n\tconst {\n\t\t_lodPlanes,\n\t\t_sizeLods,\n\t\t_sigmas\n\t} = /*@__PURE__*/_createPlanes();\n\n\tconst _clearColor = /*@__PURE__*/new Color();\n\n\tlet _oldTarget = null; // Golden Ratio\n\n\tconst PHI = (1 + Math.sqrt(5)) / 2;\n\tconst INV_PHI = 1 / PHI; // Vertices of a dodecahedron (except the opposites, which represent the\n\t// same axis), used as axis directions evenly spread on a sphere.\n\n\tconst _axisDirections = [/*@__PURE__*/new Vector3(1, 1, 1), /*@__PURE__*/new Vector3(-1, 1, 1), /*@__PURE__*/new Vector3(1, 1, -1), /*@__PURE__*/new Vector3(-1, 1, -1), /*@__PURE__*/new Vector3(0, PHI, INV_PHI), /*@__PURE__*/new Vector3(0, PHI, -INV_PHI), /*@__PURE__*/new Vector3(INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(-INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(PHI, INV_PHI, 0), /*@__PURE__*/new Vector3(-PHI, INV_PHI, 0)];\n\t/**\n\t * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n\t * (PMREM) from a cubeMap environment texture. This allows different levels of\n\t * blur to be quickly accessed based on material roughness. It is packed into a\n\t * special CubeUV format that allows us to perform custom interpolation so that\n\t * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n\t * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n\t * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n\t * higher roughness levels. In this way we maintain resolution to smoothly\n\t * interpolate diffuse lighting while limiting sampling computation.\n\t *\n\t * Paper: Fast, Accurate Image-Based Lighting\n\t * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n\t*/\n\n\tclass PMREMGenerator {\n\t\tconstructor(renderer) {\n\t\t\tthis._renderer = renderer;\n\t\t\tthis._pingPongRenderTarget = null;\n\t\t\tthis._blurMaterial = _getBlurShader(MAX_SAMPLES);\n\t\t\tthis._equirectShader = null;\n\t\t\tthis._cubemapShader = null;\n\n\t\t\tthis._compileMaterial(this._blurMaterial);\n\t\t}\n\t\t/**\n\t\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t\t * is placed at the origin).\n\t\t */\n\n\n\t\tfromScene(scene, sigma = 0, near = 0.1, far = 100) {\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\n\t\t\tthis._sceneToCubeUV(scene, near, far, cubeUVRenderTarget);\n\n\t\t\tif (sigma > 0) {\n\t\t\t\tthis._blur(cubeUVRenderTarget, 0, 0, sigma);\n\t\t\t}\n\n\t\t\tthis._applyPMREM(cubeUVRenderTarget);\n\n\t\t\tthis._cleanup(cubeUVRenderTarget);\n\n\t\t\treturn cubeUVRenderTarget;\n\t\t}\n\t\t/**\n\t\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t\t * as this matches best with the 256 x 256 cubemap output.\n\t\t */\n\n\n\t\tfromEquirectangular(equirectangular, renderTarget = null) {\n\t\t\treturn this._fromTexture(equirectangular, renderTarget);\n\t\t}\n\t\t/**\n\t\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t\t * or HDR. The ideal input cube size is 256 x 256,\n\t\t * as this matches best with the 256 x 256 cubemap output.\n\t\t */\n\n\n\t\tfromCubemap(cubemap, renderTarget = null) {\n\t\t\treturn this._fromTexture(cubemap, renderTarget);\n\t\t}\n\t\t/**\n\t\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t\t * your texture's network fetch for increased concurrency.\n\t\t */\n\n\n\t\tcompileCubemapShader() {\n\t\t\tif (this._cubemapShader === null) {\n\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\n\t\t\t\tthis._compileMaterial(this._cubemapShader);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t\t * your texture's network fetch for increased concurrency.\n\t\t */\n\n\n\t\tcompileEquirectangularShader() {\n\t\t\tif (this._equirectShader === null) {\n\t\t\t\tthis._equirectShader = _getEquirectShader();\n\n\t\t\t\tthis._compileMaterial(this._equirectShader);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t\t * one of them will cause any others to also become unusable.\n\t\t */\n\n\n\t\tdispose() {\n\t\t\tthis._blurMaterial.dispose();\n\n\t\t\tif (this._pingPongRenderTarget !== null) this._pingPongRenderTarget.dispose();\n\t\t\tif (this._cubemapShader !== null) this._cubemapShader.dispose();\n\t\t\tif (this._equirectShader !== null) this._equirectShader.dispose();\n\n\t\t\tfor (let i = 0; i < _lodPlanes.length; i++) {\n\t\t\t\t_lodPlanes[i].dispose();\n\t\t\t}\n\t\t} // private interface\n\n\n\t\t_cleanup(outputTarget) {\n\t\t\tthis._renderer.setRenderTarget(_oldTarget);\n\n\t\t\toutputTarget.scissorTest = false;\n\n\t\t\t_setViewport(outputTarget, 0, 0, outputTarget.width, outputTarget.height);\n\t\t}\n\n\t\t_fromTexture(texture, renderTarget) {\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets(texture);\n\n\t\t\tthis._textureToCubeUV(texture, cubeUVRenderTarget);\n\n\t\t\tthis._applyPMREM(cubeUVRenderTarget);\n\n\t\t\tthis._cleanup(cubeUVRenderTarget);\n\n\t\t\treturn cubeUVRenderTarget;\n\t\t}\n\n\t\t_allocateTargets(texture) {\n\t\t\t// warning: null texture is valid\n\t\t\tconst params = {\n\t\t\t\tmagFilter: LinearFilter,\n\t\t\t\tminFilter: LinearFilter,\n\t\t\t\tgenerateMipmaps: false,\n\t\t\t\ttype: HalfFloatType,\n\t\t\t\tformat: RGBAFormat,\n\t\t\t\tencoding: LinearEncoding,\n\t\t\t\tdepthBuffer: false\n\t\t\t};\n\n\t\t\tconst cubeUVRenderTarget = _createRenderTarget(params);\n\n\t\t\tcubeUVRenderTarget.depthBuffer = texture ? false : true;\n\n\t\t\tif (this._pingPongRenderTarget === null) {\n\t\t\t\tthis._pingPongRenderTarget = _createRenderTarget(params);\n\t\t\t}\n\n\t\t\treturn cubeUVRenderTarget;\n\t\t}\n\n\t\t_compileMaterial(material) {\n\t\t\tconst tmpMesh = new Mesh(_lodPlanes[0], material);\n\n\t\t\tthis._renderer.compile(tmpMesh, _flatCamera);\n\t\t}\n\n\t\t_sceneToCubeUV(scene, near, far, cubeUVRenderTarget) {\n\t\t\tconst fov = 90;\n\t\t\tconst aspect = 1;\n\t\t\tconst cubeCamera = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tconst upSign = [1, -1, 1, 1, 1, 1];\n\t\t\tconst forwardSign = [1, 1, 1, -1, -1, -1];\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst originalAutoClear = renderer.autoClear;\n\t\t\tconst toneMapping = renderer.toneMapping;\n\t\t\trenderer.getClearColor(_clearColor);\n\t\t\trenderer.toneMapping = NoToneMapping;\n\t\t\trenderer.autoClear = false;\n\t\t\tconst backgroundMaterial = new MeshBasicMaterial({\n\t\t\t\tname: 'PMREM.Background',\n\t\t\t\tside: BackSide,\n\t\t\t\tdepthWrite: false,\n\t\t\t\tdepthTest: false\n\t\t\t});\n\t\t\tconst backgroundBox = new Mesh(new BoxGeometry(), backgroundMaterial);\n\t\t\tlet useSolidColor = false;\n\t\t\tconst background = scene.background;\n\n\t\t\tif (background) {\n\t\t\t\tif (background.isColor) {\n\t\t\t\t\tbackgroundMaterial.color.copy(background);\n\t\t\t\t\tscene.background = null;\n\t\t\t\t\tuseSolidColor = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbackgroundMaterial.color.copy(_clearColor);\n\t\t\t\tuseSolidColor = true;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tconst col = i % 3;\n\n\t\t\t\tif (col === 0) {\n\t\t\t\t\tcubeCamera.up.set(0, upSign[i], 0);\n\t\t\t\t\tcubeCamera.lookAt(forwardSign[i], 0, 0);\n\t\t\t\t} else if (col === 1) {\n\t\t\t\t\tcubeCamera.up.set(0, 0, upSign[i]);\n\t\t\t\t\tcubeCamera.lookAt(0, forwardSign[i], 0);\n\t\t\t\t} else {\n\t\t\t\t\tcubeCamera.up.set(0, upSign[i], 0);\n\t\t\t\t\tcubeCamera.lookAt(0, 0, forwardSign[i]);\n\t\t\t\t}\n\n\t\t\t\t_setViewport(cubeUVRenderTarget, col * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX);\n\n\t\t\t\trenderer.setRenderTarget(cubeUVRenderTarget);\n\n\t\t\t\tif (useSolidColor) {\n\t\t\t\t\trenderer.render(backgroundBox, cubeCamera);\n\t\t\t\t}\n\n\t\t\t\trenderer.render(scene, cubeCamera);\n\t\t\t}\n\n\t\t\tbackgroundBox.geometry.dispose();\n\t\t\tbackgroundBox.material.dispose();\n\t\t\trenderer.toneMapping = toneMapping;\n\t\t\trenderer.autoClear = originalAutoClear;\n\t\t\tscene.background = background;\n\t\t}\n\n\t\t_textureToCubeUV(texture, cubeUVRenderTarget) {\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst isCubeTexture = texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping;\n\n\t\t\tif (isCubeTexture) {\n\t\t\t\tif (this._cubemapShader === null) {\n\t\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\t\t\t\t}\n\n\t\t\t\tthis._cubemapShader.uniforms.flipEnvMap.value = texture.isRenderTargetTexture === false ? -1 : 1;\n\t\t\t} else {\n\t\t\t\tif (this._equirectShader === null) {\n\t\t\t\t\tthis._equirectShader = _getEquirectShader();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst material = isCubeTexture ? this._cubemapShader : this._equirectShader;\n\t\t\tconst mesh = new Mesh(_lodPlanes[0], material);\n\t\t\tconst uniforms = material.uniforms;\n\t\t\tuniforms['envMap'].value = texture;\n\n\t\t\tif (!isCubeTexture) {\n\t\t\t\tuniforms['texelSize'].value.set(1.0 / texture.image.width, 1.0 / texture.image.height);\n\t\t\t}\n\n\t\t\t_setViewport(cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX);\n\n\t\t\trenderer.setRenderTarget(cubeUVRenderTarget);\n\t\t\trenderer.render(mesh, _flatCamera);\n\t\t}\n\n\t\t_applyPMREM(cubeUVRenderTarget) {\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst autoClear = renderer.autoClear;\n\t\t\trenderer.autoClear = false;\n\n\t\t\tfor (let i = 1; i < TOTAL_LODS; i++) {\n\t\t\t\tconst sigma = Math.sqrt(_sigmas[i] * _sigmas[i] - _sigmas[i - 1] * _sigmas[i - 1]);\n\t\t\t\tconst poleAxis = _axisDirections[(i - 1) % _axisDirections.length];\n\n\t\t\t\tthis._blur(cubeUVRenderTarget, i - 1, i, sigma, poleAxis);\n\t\t\t}\n\n\t\t\trenderer.autoClear = autoClear;\n\t\t}\n\t\t/**\n\t\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t\t * accurate at the poles, but still does a decent job.\n\t\t */\n\n\n\t\t_blur(cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis) {\n\t\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\t\tthis._halfBlur(cubeUVRenderTarget, pingPongRenderTarget, lodIn, lodOut, sigma, 'latitudinal', poleAxis);\n\n\t\t\tthis._halfBlur(pingPongRenderTarget, cubeUVRenderTarget, lodOut, lodOut, sigma, 'longitudinal', poleAxis);\n\t\t}\n\n\t\t_halfBlur(targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis) {\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst blurMaterial = this._blurMaterial;\n\n\t\t\tif (direction !== 'latitudinal' && direction !== 'longitudinal') {\n\t\t\t\tconsole.error('blur direction must be either latitudinal or longitudinal!');\n\t\t\t} // Number of standard deviations at which to cut off the discrete approximation.\n\n\n\t\t\tconst STANDARD_DEVIATIONS = 3;\n\t\t\tconst blurMesh = new Mesh(_lodPlanes[lodOut], blurMaterial);\n\t\t\tconst blurUniforms = blurMaterial.uniforms;\n\t\t\tconst pixels = _sizeLods[lodIn] - 1;\n\t\t\tconst radiansPerPixel = isFinite(sigmaRadians) ? Math.PI / (2 * pixels) : 2 * Math.PI / (2 * MAX_SAMPLES - 1);\n\t\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\t\tconst samples = isFinite(sigmaRadians) ? 1 + Math.floor(STANDARD_DEVIATIONS * sigmaPixels) : MAX_SAMPLES;\n\n\t\t\tif (samples > MAX_SAMPLES) {\n\t\t\t\tconsole.warn(`sigmaRadians, ${sigmaRadians}, is too large and will clip, as it requested ${samples} samples when the maximum is set to ${MAX_SAMPLES}`);\n\t\t\t}\n\n\t\t\tconst weights = [];\n\t\t\tlet sum = 0;\n\n\t\t\tfor (let i = 0; i < MAX_SAMPLES; ++i) {\n\t\t\t\tconst x = i / sigmaPixels;\n\t\t\t\tconst weight = Math.exp(-x * x / 2);\n\t\t\t\tweights.push(weight);\n\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tsum += weight;\n\t\t\t\t} else if (i < samples) {\n\t\t\t\t\tsum += 2 * weight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < weights.length; i++) {\n\t\t\t\tweights[i] = weights[i] / sum;\n\t\t\t}\n\n\t\t\tblurUniforms['envMap'].value = targetIn.texture;\n\t\t\tblurUniforms['samples'].value = samples;\n\t\t\tblurUniforms['weights'].value = weights;\n\t\t\tblurUniforms['latitudinal'].value = direction === 'latitudinal';\n\n\t\t\tif (poleAxis) {\n\t\t\t\tblurUniforms['poleAxis'].value = poleAxis;\n\t\t\t}\n\n\t\t\tblurUniforms['dTheta'].value = radiansPerPixel;\n\t\t\tblurUniforms['mipInt'].value = LOD_MAX - lodIn;\n\t\t\tconst outputSize = _sizeLods[lodOut];\n\t\t\tconst x = 3 * Math.max(0, SIZE_MAX - 2 * outputSize);\n\t\t\tconst y = (lodOut === 0 ? 0 : 2 * SIZE_MAX) + 2 * outputSize * (lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0);\n\n\t\t\t_setViewport(targetOut, x, y, 3 * outputSize, 2 * outputSize);\n\n\t\t\trenderer.setRenderTarget(targetOut);\n\t\t\trenderer.render(blurMesh, _flatCamera);\n\t\t}\n\n\t}\n\n\tfunction _createPlanes() {\n\t\tconst _lodPlanes = [];\n\t\tconst _sizeLods = [];\n\t\tconst _sigmas = [];\n\t\tlet lod = LOD_MAX;\n\n\t\tfor (let i = 0; i < TOTAL_LODS; i++) {\n\t\t\tconst sizeLod = Math.pow(2, lod);\n\n\t\t\t_sizeLods.push(sizeLod);\n\n\t\t\tlet sigma = 1.0 / sizeLod;\n\n\t\t\tif (i > LOD_MAX - LOD_MIN) {\n\t\t\t\tsigma = EXTRA_LOD_SIGMA[i - LOD_MAX + LOD_MIN - 1];\n\t\t\t} else if (i === 0) {\n\t\t\t\tsigma = 0;\n\t\t\t}\n\n\t\t\t_sigmas.push(sigma);\n\n\t\t\tconst texelSize = 1.0 / (sizeLod - 1);\n\t\t\tconst min = -texelSize / 2;\n\t\t\tconst max = 1 + texelSize / 2;\n\t\t\tconst uv1 = [min, min, max, min, max, max, min, min, max, max, min, max];\n\t\t\tconst cubeFaces = 6;\n\t\t\tconst vertices = 6;\n\t\t\tconst positionSize = 3;\n\t\t\tconst uvSize = 2;\n\t\t\tconst faceIndexSize = 1;\n\t\t\tconst position = new Float32Array(positionSize * vertices * cubeFaces);\n\t\t\tconst uv = new Float32Array(uvSize * vertices * cubeFaces);\n\t\t\tconst faceIndex = new Float32Array(faceIndexSize * vertices * cubeFaces);\n\n\t\t\tfor (let face = 0; face < cubeFaces; face++) {\n\t\t\t\tconst x = face % 3 * 2 / 3 - 1;\n\t\t\t\tconst y = face > 2 ? 0 : -1;\n\t\t\t\tconst coordinates = [x, y, 0, x + 2 / 3, y, 0, x + 2 / 3, y + 1, 0, x, y, 0, x + 2 / 3, y + 1, 0, x, y + 1, 0];\n\t\t\t\tposition.set(coordinates, positionSize * vertices * face);\n\t\t\t\tuv.set(uv1, uvSize * vertices * face);\n\t\t\t\tconst fill = [face, face, face, face, face, face];\n\t\t\t\tfaceIndex.set(fill, faceIndexSize * vertices * face);\n\t\t\t}\n\n\t\t\tconst planes = new BufferGeometry();\n\t\t\tplanes.setAttribute('position', new BufferAttribute(position, positionSize));\n\t\t\tplanes.setAttribute('uv', new BufferAttribute(uv, uvSize));\n\t\t\tplanes.setAttribute('faceIndex', new BufferAttribute(faceIndex, faceIndexSize));\n\n\t\t\t_lodPlanes.push(planes);\n\n\t\t\tif (lod > LOD_MIN) {\n\t\t\t\tlod--;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t_lodPlanes,\n\t\t\t_sizeLods,\n\t\t\t_sigmas\n\t\t};\n\t}\n\n\tfunction _createRenderTarget(params) {\n\t\tconst cubeUVRenderTarget = new WebGLRenderTarget(3 * SIZE_MAX, 3 * SIZE_MAX, params);\n\t\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\t\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\t\tcubeUVRenderTarget.scissorTest = true;\n\t\treturn cubeUVRenderTarget;\n\t}\n\n\tfunction _setViewport(target, x, y, width, height) {\n\t\ttarget.viewport.set(x, y, width, height);\n\t\ttarget.scissor.set(x, y, width, height);\n\t}\n\n\tfunction _getBlurShader(maxSamples) {\n\t\tconst weights = new Float32Array(maxSamples);\n\t\tconst poleAxis = new Vector3(0, 1, 0);\n\t\tconst shaderMaterial = new RawShaderMaterial({\n\t\t\tname: 'SphericalGaussianBlur',\n\t\t\tdefines: {\n\t\t\t\t'n': maxSamples\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\t'envMap': {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t'samples': {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\t'weights': {\n\t\t\t\t\tvalue: weights\n\t\t\t\t},\n\t\t\t\t'latitudinal': {\n\t\t\t\t\tvalue: false\n\t\t\t\t},\n\t\t\t\t'dTheta': {\n\t\t\t\t\tvalue: 0\n\t\t\t\t},\n\t\t\t\t'mipInt': {\n\t\t\t\t\tvalue: 0\n\t\t\t\t},\n\t\t\t\t'poleAxis': {\n\t\t\t\t\tvalue: poleAxis\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: _getCommonVertexShader(),\n\t\t\tfragmentShader:\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\t\treturn shaderMaterial;\n\t}\n\n\tfunction _getEquirectShader() {\n\t\tconst texelSize = new Vector2(1, 1);\n\t\tconst shaderMaterial = new RawShaderMaterial({\n\t\t\tname: 'EquirectangularToCubeUV',\n\t\t\tuniforms: {\n\t\t\t\t'envMap': {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t'texelSize': {\n\t\t\t\t\tvalue: texelSize\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: _getCommonVertexShader(),\n\t\t\tfragmentShader:\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = texture2D ( envMap, uv ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = texture2D ( envMap, uv ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = texture2D ( envMap, uv ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = texture2D ( envMap, uv ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t}\n\t\t`,\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\t\treturn shaderMaterial;\n\t}\n\n\tfunction _getCubemapShader() {\n\t\tconst shaderMaterial = new RawShaderMaterial({\n\t\t\tname: 'CubemapToCubeUV',\n\t\t\tuniforms: {\n\t\t\t\t'envMap': {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t'flipEnvMap': {\n\t\t\t\t\tvalue: -1\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: _getCommonVertexShader(),\n\t\t\tfragmentShader:\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\t\treturn shaderMaterial;\n\t}\n\n\tfunction _getCommonVertexShader() {\n\t\treturn (\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`\n\t\t);\n\t}\n\n\tfunction WebGLCubeUVMaps(renderer) {\n\t\tlet cubeUVmaps = new WeakMap();\n\t\tlet pmremGenerator = null;\n\n\t\tfunction get(texture) {\n\t\t\tif (texture && texture.isTexture) {\n\t\t\t\tconst mapping = texture.mapping;\n\t\t\t\tconst isEquirectMap = mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping;\n\t\t\t\tconst isCubeMap = mapping === CubeReflectionMapping || mapping === CubeRefractionMapping; // equirect/cube map to cubeUV conversion\n\n\t\t\t\tif (isEquirectMap || isCubeMap) {\n\t\t\t\t\tif (texture.isRenderTargetTexture && texture.needsPMREMUpdate === true) {\n\t\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\t\t\t\t\t\tlet renderTarget = cubeUVmaps.get(texture);\n\t\t\t\t\t\tif (pmremGenerator === null) pmremGenerator = new PMREMGenerator(renderer);\n\t\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular(texture, renderTarget) : pmremGenerator.fromCubemap(texture, renderTarget);\n\t\t\t\t\t\tcubeUVmaps.set(texture, renderTarget);\n\t\t\t\t\t\treturn renderTarget.texture;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (cubeUVmaps.has(texture)) {\n\t\t\t\t\t\t\treturn cubeUVmaps.get(texture).texture;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\t\tif (isEquirectMap && image && image.height > 0 || isCubeMap && image && isCubeTextureComplete(image)) {\n\t\t\t\t\t\t\t\tif (pmremGenerator === null) pmremGenerator = new PMREMGenerator(renderer);\n\t\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular(texture) : pmremGenerator.fromCubemap(texture);\n\t\t\t\t\t\t\t\tcubeUVmaps.set(texture, renderTarget);\n\t\t\t\t\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\n\t\t\t\t\t\t\t\treturn renderTarget.texture;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tfunction isCubeTextureComplete(image) {\n\t\t\tlet count = 0;\n\t\t\tconst length = 6;\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tif (image[i] !== undefined) count++;\n\t\t\t}\n\n\t\t\treturn count === length;\n\t\t}\n\n\t\tfunction onTextureDispose(event) {\n\t\t\tconst texture = event.target;\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\n\t\t\tconst cubemapUV = cubeUVmaps.get(texture);\n\n\t\t\tif (cubemapUV !== undefined) {\n\t\t\t\tcubeUVmaps.delete(texture);\n\t\t\t\tcubemapUV.dispose();\n\t\t\t}\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tcubeUVmaps = new WeakMap();\n\n\t\t\tif (pmremGenerator !== null) {\n\t\t\t\tpmremGenerator.dispose();\n\t\t\t\tpmremGenerator = null;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction WebGLExtensions(gl) {\n\t\tconst extensions = {};\n\n\t\tfunction getExtension(name) {\n\t\t\tif (extensions[name] !== undefined) {\n\t\t\t\treturn extensions[name];\n\t\t\t}\n\n\t\t\tlet extension;\n\n\t\t\tswitch (name) {\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension(name);\n\t\t\t}\n\n\t\t\textensions[name] = extension;\n\t\t\treturn extension;\n\t\t}\n\n\t\treturn {\n\t\t\thas: function (name) {\n\t\t\t\treturn getExtension(name) !== null;\n\t\t\t},\n\t\t\tinit: function (capabilities) {\n\t\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t\tgetExtension('EXT_color_buffer_float');\n\t\t\t\t} else {\n\t\t\t\t\tgetExtension('WEBGL_depth_texture');\n\t\t\t\t\tgetExtension('OES_texture_float');\n\t\t\t\t\tgetExtension('OES_texture_half_float');\n\t\t\t\t\tgetExtension('OES_texture_half_float_linear');\n\t\t\t\t\tgetExtension('OES_standard_derivatives');\n\t\t\t\t\tgetExtension('OES_element_index_uint');\n\t\t\t\t\tgetExtension('OES_vertex_array_object');\n\t\t\t\t\tgetExtension('ANGLE_instanced_arrays');\n\t\t\t\t}\n\n\t\t\t\tgetExtension('OES_texture_float_linear');\n\t\t\t\tgetExtension('EXT_color_buffer_half_float');\n\t\t\t\tgetExtension('WEBGL_multisampled_render_to_texture');\n\t\t\t},\n\t\t\tget: function (name) {\n\t\t\t\tconst extension = getExtension(name);\n\n\t\t\t\tif (extension === null) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n\t\t\t\t}\n\n\t\t\t\treturn extension;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction WebGLGeometries(gl, attributes, info, bindingStates) {\n\t\tconst geometries = {};\n\t\tconst wireframeAttributes = new WeakMap();\n\n\t\tfunction onGeometryDispose(event) {\n\t\t\tconst geometry = event.target;\n\n\t\t\tif (geometry.index !== null) {\n\t\t\t\tattributes.remove(geometry.index);\n\t\t\t}\n\n\t\t\tfor (const name in geometry.attributes) {\n\t\t\t\tattributes.remove(geometry.attributes[name]);\n\t\t\t}\n\n\t\t\tgeometry.removeEventListener('dispose', onGeometryDispose);\n\t\t\tdelete geometries[geometry.id];\n\t\t\tconst attribute = wireframeAttributes.get(geometry);\n\n\t\t\tif (attribute) {\n\t\t\t\tattributes.remove(attribute);\n\t\t\t\twireframeAttributes.delete(geometry);\n\t\t\t}\n\n\t\t\tbindingStates.releaseStatesOfGeometry(geometry);\n\n\t\t\tif (geometry.isInstancedBufferGeometry === true) {\n\t\t\t\tdelete geometry._maxInstanceCount;\n\t\t\t} //\n\n\n\t\t\tinfo.memory.geometries--;\n\t\t}\n\n\t\tfunction get(object, geometry) {\n\t\t\tif (geometries[geometry.id] === true) return geometry;\n\t\t\tgeometry.addEventListener('dispose', onGeometryDispose);\n\t\t\tgeometries[geometry.id] = true;\n\t\t\tinfo.memory.geometries++;\n\t\t\treturn geometry;\n\t\t}\n\n\t\tfunction update(geometry) {\n\t\t\tconst geometryAttributes = geometry.attributes; // Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\t\tfor (const name in geometryAttributes) {\n\t\t\t\tattributes.update(geometryAttributes[name], gl.ARRAY_BUFFER);\n\t\t\t} // morph targets\n\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor (const name in morphAttributes) {\n\t\t\t\tconst array = morphAttributes[name];\n\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i++) {\n\t\t\t\t\tattributes.update(array[i], gl.ARRAY_BUFFER);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction updateWireframeAttribute(geometry) {\n\t\t\tconst indices = [];\n\t\t\tconst geometryIndex = geometry.index;\n\t\t\tconst geometryPosition = geometry.attributes.position;\n\t\t\tlet version = 0;\n\n\t\t\tif (geometryIndex !== null) {\n\t\t\t\tconst array = geometryIndex.array;\n\t\t\t\tversion = geometryIndex.version;\n\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i += 3) {\n\t\t\t\t\tconst a = array[i + 0];\n\t\t\t\t\tconst b = array[i + 1];\n\t\t\t\t\tconst c = array[i + 2];\n\t\t\t\t\tindices.push(a, b, b, c, c, a);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst array = geometryPosition.array;\n\t\t\t\tversion = geometryPosition.version;\n\n\t\t\t\tfor (let i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n\t\t\t\t\tconst a = i + 0;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\t\t\t\t\tindices.push(a, b, b, c, c, a);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst attribute = new (arrayNeedsUint32(indices) ? Uint32BufferAttribute : Uint16BufferAttribute)(indices, 1);\n\t\t\tattribute.version = version; // Updating index buffer in VAO now. See WebGLBindingStates\n\t\t\t//\n\n\t\t\tconst previousAttribute = wireframeAttributes.get(geometry);\n\t\t\tif (previousAttribute) attributes.remove(previousAttribute); //\n\n\t\t\twireframeAttributes.set(geometry, attribute);\n\t\t}\n\n\t\tfunction getWireframeAttribute(geometry) {\n\t\t\tconst currentAttribute = wireframeAttributes.get(geometry);\n\n\t\t\tif (currentAttribute) {\n\t\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\t\tif (geometryIndex !== null) {\n\t\t\t\t\t// if the attribute is obsolete, create a new one\n\t\t\t\t\tif (currentAttribute.version < geometryIndex.version) {\n\t\t\t\t\t\tupdateWireframeAttribute(geometry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdateWireframeAttribute(geometry);\n\t\t\t}\n\n\t\t\treturn wireframeAttributes.get(geometry);\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tupdate: update,\n\t\t\tgetWireframeAttribute: getWireframeAttribute\n\t\t};\n\t}\n\n\tfunction WebGLIndexedBufferRenderer(gl, extensions, info, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tlet mode;\n\n\t\tfunction setMode(value) {\n\t\t\tmode = value;\n\t\t}\n\n\t\tlet type, bytesPerElement;\n\n\t\tfunction setIndex(value) {\n\t\t\ttype = value.type;\n\t\t\tbytesPerElement = value.bytesPerElement;\n\t\t}\n\n\t\tfunction render(start, count) {\n\t\t\tgl.drawElements(mode, count, type, start * bytesPerElement);\n\t\t\tinfo.update(count, mode, 1);\n\t\t}\n\n\t\tfunction renderInstances(start, count, primcount) {\n\t\t\tif (primcount === 0) return;\n\t\t\tlet extension, methodName;\n\n\t\t\tif (isWebGL2) {\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawElementsInstanced';\n\t\t\t} else {\n\t\t\t\textension = extensions.get('ANGLE_instanced_arrays');\n\t\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\t\tif (extension === null) {\n\t\t\t\t\tconsole.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\textension[methodName](mode, count, type, start * bytesPerElement, primcount);\n\t\t\tinfo.update(count, mode, primcount);\n\t\t} //\n\n\n\t\tthis.setMode = setMode;\n\t\tthis.setIndex = setIndex;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\t}\n\n\tfunction WebGLInfo(gl) {\n\t\tconst memory = {\n\t\t\tgeometries: 0,\n\t\t\ttextures: 0\n\t\t};\n\t\tconst render = {\n\t\t\tframe: 0,\n\t\t\tcalls: 0,\n\t\t\ttriangles: 0,\n\t\t\tpoints: 0,\n\t\t\tlines: 0\n\t\t};\n\n\t\tfunction update(count, mode, instanceCount) {\n\t\t\trender.calls++;\n\n\t\t\tswitch (mode) {\n\t\t\t\tcase gl.TRIANGLES:\n\t\t\t\t\trender.triangles += instanceCount * (count / 3);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINES:\n\t\t\t\t\trender.lines += instanceCount * (count / 2);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINE_STRIP:\n\t\t\t\t\trender.lines += instanceCount * (count - 1);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINE_LOOP:\n\t\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.POINTS:\n\t\t\t\t\trender.points += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error('THREE.WebGLInfo: Unknown draw mode:', mode);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfunction reset() {\n\t\t\trender.frame++;\n\t\t\trender.calls = 0;\n\t\t\trender.triangles = 0;\n\t\t\trender.points = 0;\n\t\t\trender.lines = 0;\n\t\t}\n\n\t\treturn {\n\t\t\tmemory: memory,\n\t\t\trender: render,\n\t\t\tprograms: null,\n\t\t\tautoReset: true,\n\t\t\treset: reset,\n\t\t\tupdate: update\n\t\t};\n\t}\n\n\tclass DataTexture2DArray extends Texture {\n\t\tconstructor(data = null, width = 1, height = 1, depth = 1) {\n\t\t\tsuper(null);\n\t\t\tthis.image = {\n\t\t\t\tdata,\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t\tdepth\n\t\t\t};\n\t\t\tthis.magFilter = NearestFilter;\n\t\t\tthis.minFilter = NearestFilter;\n\t\t\tthis.wrapR = ClampToEdgeWrapping;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.flipY = false;\n\t\t\tthis.unpackAlignment = 1;\n\t\t}\n\n\t}\n\n\tDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\n\tfunction numericalSort(a, b) {\n\t\treturn a[0] - b[0];\n\t}\n\n\tfunction absNumericalSort(a, b) {\n\t\treturn Math.abs(b[1]) - Math.abs(a[1]);\n\t}\n\n\tfunction denormalize(morph, attribute) {\n\t\tlet denominator = 1;\n\t\tconst array = attribute.isInterleavedBufferAttribute ? attribute.data.array : attribute.array;\n\t\tif (array instanceof Int8Array) denominator = 127;else if (array instanceof Int16Array) denominator = 32767;else if (array instanceof Int32Array) denominator = 2147483647;else console.error('THREE.WebGLMorphtargets: Unsupported morph attribute data type: ', array);\n\t\tmorph.divideScalar(denominator);\n\t}\n\n\tfunction WebGLMorphtargets(gl, capabilities, textures) {\n\t\tconst influencesList = {};\n\t\tconst morphInfluences = new Float32Array(8);\n\t\tconst morphTextures = new WeakMap();\n\t\tconst morph = new Vector3();\n\t\tconst workInfluences = [];\n\n\t\tfor (let i = 0; i < 8; i++) {\n\t\t\tworkInfluences[i] = [i, 0];\n\t\t}\n\n\t\tfunction update(object, geometry, material, program) {\n\t\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t\tif (capabilities.isWebGL2 === true) {\n\t\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\t\t\t\tconst numberOfMorphTargets = geometry.morphAttributes.position.length;\n\t\t\t\tlet entry = morphTextures.get(geometry);\n\n\t\t\t\tif (entry === undefined || entry.count !== numberOfMorphTargets) {\n\t\t\t\t\tif (entry !== undefined) entry.texture.dispose();\n\t\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\t\tconst numberOfVertices = geometry.attributes.position.count;\n\t\t\t\t\tconst numberOfVertexData = hasMorphNormals === true ? 2 : 1; // (v,n) vs. (v)\n\n\t\t\t\t\tlet width = numberOfVertices * numberOfVertexData;\n\t\t\t\t\tlet height = 1;\n\n\t\t\t\t\tif (width > capabilities.maxTextureSize) {\n\t\t\t\t\t\theight = Math.ceil(width / capabilities.maxTextureSize);\n\t\t\t\t\t\twidth = capabilities.maxTextureSize;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst buffer = new Float32Array(width * height * 4 * numberOfMorphTargets);\n\t\t\t\t\tconst texture = new DataTexture2DArray(buffer, width, height, numberOfMorphTargets);\n\t\t\t\t\ttexture.format = RGBAFormat; // using RGBA since RGB might be emulated (and is thus slower)\n\n\t\t\t\t\ttexture.type = FloatType;\n\t\t\t\t\ttexture.needsUpdate = true; // fill buffer\n\n\t\t\t\t\tconst vertexDataStride = numberOfVertexData * 4;\n\n\t\t\t\t\tfor (let i = 0; i < numberOfMorphTargets; i++) {\n\t\t\t\t\t\tconst morphTarget = morphTargets[i];\n\t\t\t\t\t\tconst morphNormal = morphNormals[i];\n\t\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\t\tfor (let j = 0; j < morphTarget.count; j++) {\n\t\t\t\t\t\t\tmorph.fromBufferAttribute(morphTarget, j);\n\t\t\t\t\t\t\tif (morphTarget.normalized === true) denormalize(morph, morphTarget);\n\t\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\t\t\t\t\t\t\tbuffer[offset + stride + 0] = morph.x;\n\t\t\t\t\t\t\tbuffer[offset + stride + 1] = morph.y;\n\t\t\t\t\t\t\tbuffer[offset + stride + 2] = morph.z;\n\t\t\t\t\t\t\tbuffer[offset + stride + 3] = 0;\n\n\t\t\t\t\t\t\tif (hasMorphNormals === true) {\n\t\t\t\t\t\t\t\tmorph.fromBufferAttribute(morphNormal, j);\n\t\t\t\t\t\t\t\tif (morphNormal.normalized === true) denormalize(morph, morphNormal);\n\t\t\t\t\t\t\t\tbuffer[offset + stride + 4] = morph.x;\n\t\t\t\t\t\t\t\tbuffer[offset + stride + 5] = morph.y;\n\t\t\t\t\t\t\t\tbuffer[offset + stride + 6] = morph.z;\n\t\t\t\t\t\t\t\tbuffer[offset + stride + 7] = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tentry = {\n\t\t\t\t\t\tcount: numberOfMorphTargets,\n\t\t\t\t\t\ttexture: texture,\n\t\t\t\t\t\tsize: new Vector2(width, height)\n\t\t\t\t\t};\n\t\t\t\t\tmorphTextures.set(geometry, entry);\n\n\t\t\t\t\tfunction disposeTexture() {\n\t\t\t\t\t\ttexture.dispose();\n\t\t\t\t\t\tmorphTextures.delete(geometry);\n\t\t\t\t\t\tgeometry.removeEventListener('dispose', disposeTexture);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addEventListener('dispose', disposeTexture);\n\t\t\t\t} //\n\n\n\t\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\t\tfor (let i = 0; i < objectInfluences.length; i++) {\n\t\t\t\t\tmorphInfluencesSum += objectInfluences[i];\n\t\t\t\t}\n\n\t\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetBaseInfluence', morphBaseInfluence);\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetInfluences', objectInfluences);\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetsTexture', entry.texture, textures);\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetsTextureSize', entry.size);\n\t\t\t} else {\n\t\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\t\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\t\t\t\tlet influences = influencesList[geometry.id];\n\n\t\t\t\tif (influences === undefined || influences.length !== length) {\n\t\t\t\t\t// initialise list\n\t\t\t\t\tinfluences = [];\n\n\t\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\t\tinfluences[i] = [i, 0];\n\t\t\t\t\t}\n\n\t\t\t\t\tinfluencesList[geometry.id] = influences;\n\t\t\t\t} // Collect influences\n\n\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tconst influence = influences[i];\n\t\t\t\t\tinfluence[0] = i;\n\t\t\t\t\tinfluence[1] = objectInfluences[i];\n\t\t\t\t}\n\n\t\t\t\tinfluences.sort(absNumericalSort);\n\n\t\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\t\tif (i < length && influences[i][1]) {\n\t\t\t\t\t\tworkInfluences[i][0] = influences[i][0];\n\t\t\t\t\t\tworkInfluences[i][1] = influences[i][1];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tworkInfluences[i][0] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\t\tworkInfluences[i][1] = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tworkInfluences.sort(numericalSort);\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\t\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\t\tconst influence = workInfluences[i];\n\t\t\t\t\tconst index = influence[0];\n\t\t\t\t\tconst value = influence[1];\n\n\t\t\t\t\tif (index !== Number.MAX_SAFE_INTEGER && value) {\n\t\t\t\t\t\tif (morphTargets && geometry.getAttribute('morphTarget' + i) !== morphTargets[index]) {\n\t\t\t\t\t\t\tgeometry.setAttribute('morphTarget' + i, morphTargets[index]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (morphNormals && geometry.getAttribute('morphNormal' + i) !== morphNormals[index]) {\n\t\t\t\t\t\t\tgeometry.setAttribute('morphNormal' + i, morphNormals[index]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmorphInfluences[i] = value;\n\t\t\t\t\t\tmorphInfluencesSum += value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (morphTargets && geometry.hasAttribute('morphTarget' + i) === true) {\n\t\t\t\t\t\t\tgeometry.deleteAttribute('morphTarget' + i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (morphNormals && geometry.hasAttribute('morphNormal' + i) === true) {\n\t\t\t\t\t\t\tgeometry.deleteAttribute('morphNormal' + i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmorphInfluences[i] = 0;\n\t\t\t\t\t}\n\t\t\t\t} // GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\n\n\t\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetBaseInfluence', morphBaseInfluence);\n\t\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetInfluences', morphInfluences);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tupdate: update\n\t\t};\n\t}\n\n\tfunction WebGLObjects(gl, geometries, attributes, info) {\n\t\tlet updateMap = new WeakMap();\n\n\t\tfunction update(object) {\n\t\t\tconst frame = info.render.frame;\n\t\t\tconst geometry = object.geometry;\n\t\t\tconst buffergeometry = geometries.get(object, geometry); // Update once per frame\n\n\t\t\tif (updateMap.get(buffergeometry) !== frame) {\n\t\t\t\tgeometries.update(buffergeometry);\n\t\t\t\tupdateMap.set(buffergeometry, frame);\n\t\t\t}\n\n\t\t\tif (object.isInstancedMesh) {\n\t\t\t\tif (object.hasEventListener('dispose', onInstancedMeshDispose) === false) {\n\t\t\t\t\tobject.addEventListener('dispose', onInstancedMeshDispose);\n\t\t\t\t}\n\n\t\t\t\tattributes.update(object.instanceMatrix, gl.ARRAY_BUFFER);\n\n\t\t\t\tif (object.instanceColor !== null) {\n\t\t\t\t\tattributes.update(object.instanceColor, gl.ARRAY_BUFFER);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn buffergeometry;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tupdateMap = new WeakMap();\n\t\t}\n\n\t\tfunction onInstancedMeshDispose(event) {\n\t\t\tconst instancedMesh = event.target;\n\t\t\tinstancedMesh.removeEventListener('dispose', onInstancedMeshDispose);\n\t\t\tattributes.remove(instancedMesh.instanceMatrix);\n\t\t\tif (instancedMesh.instanceColor !== null) attributes.remove(instancedMesh.instanceColor);\n\t\t}\n\n\t\treturn {\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tclass DataTexture3D extends Texture {\n\t\tconstructor(data = null, width = 1, height = 1, depth = 1) {\n\t\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t\t// Users can still set in DataTexture3D directly.\n\t\t\t//\n\t\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t\t// \ttexture.anisotropy = 16;\n\t\t\t//\n\t\t\t// See #14839\n\t\t\tsuper(null);\n\t\t\tthis.image = {\n\t\t\t\tdata,\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t\tdepth\n\t\t\t};\n\t\t\tthis.magFilter = NearestFilter;\n\t\t\tthis.minFilter = NearestFilter;\n\t\t\tthis.wrapR = ClampToEdgeWrapping;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.flipY = false;\n\t\t\tthis.unpackAlignment = 1;\n\t\t}\n\n\t}\n\n\tDataTexture3D.prototype.isDataTexture3D = true;\n\n\t/**\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [textures] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *\t\tthe 'textures' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (textures factorizations):\n\t *\n\t * .upload( gl, seq, values, textures )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t *\n\t * Methods of the top-level container (textures factorizations):\n\t *\n\t * .setValue( gl, name, value, textures )\n\t *\n\t * \t\tsets uniform with\tname 'name' to 'value'\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t */\n\tconst emptyTexture = new Texture();\n\tconst emptyTexture2dArray = new DataTexture2DArray();\n\tconst emptyTexture3d = new DataTexture3D();\n\tconst emptyCubeTexture = new CubeTexture(); // --- Utilities ---\n\t// Array Caches (provide typed arrays for temporary by size)\n\n\tconst arrayCacheF32 = [];\n\tconst arrayCacheI32 = []; // Float32Array caches used for uploading Matrix uniforms\n\n\tconst mat4array = new Float32Array(16);\n\tconst mat3array = new Float32Array(9);\n\tconst mat2array = new Float32Array(4); // Flattening for arrays of vectors and matrices\n\n\tfunction flatten(array, nBlocks, blockSize) {\n\t\tconst firstElem = array[0];\n\t\tif (firstElem <= 0 || firstElem > 0) return array; // unoptimized: ! isNaN( firstElem )\n\t\t// see http://jacksondunstan.com/articles/983\n\n\t\tconst n = nBlocks * blockSize;\n\t\tlet r = arrayCacheF32[n];\n\n\t\tif (r === undefined) {\n\t\t\tr = new Float32Array(n);\n\t\t\tarrayCacheF32[n] = r;\n\t\t}\n\n\t\tif (nBlocks !== 0) {\n\t\t\tfirstElem.toArray(r, 0);\n\n\t\t\tfor (let i = 1, offset = 0; i !== nBlocks; ++i) {\n\t\t\t\toffset += blockSize;\n\t\t\t\tarray[i].toArray(r, offset);\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tfunction arraysEqual(a, b) {\n\t\tif (a.length !== b.length) return false;\n\n\t\tfor (let i = 0, l = a.length; i < l; i++) {\n\t\t\tif (a[i] !== b[i]) return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction copyArray(a, b) {\n\t\tfor (let i = 0, l = b.length; i < l; i++) {\n\t\t\ta[i] = b[i];\n\t\t}\n\t} // Texture unit allocation\n\n\n\tfunction allocTexUnits(textures, n) {\n\t\tlet r = arrayCacheI32[n];\n\n\t\tif (r === undefined) {\n\t\t\tr = new Int32Array(n);\n\t\t\tarrayCacheI32[n] = r;\n\t\t}\n\n\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\tr[i] = textures.allocateTextureUnit();\n\t\t}\n\n\t\treturn r;\n\t} // --- Setters ---\n\t// Note: Defining these methods externally, because they come in a bunch\n\t// and this way their names minify.\n\t// Single scalar\n\n\n\tfunction setValueV1f(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (cache[0] === v) return;\n\t\tgl.uniform1f(this.addr, v);\n\t\tcache[0] = v;\n\t} // Single float vector (from flat array or THREE.VectorN)\n\n\n\tfunction setValueV2f(gl, v) {\n\t\tconst cache = this.cache;\n\n\t\tif (v.x !== undefined) {\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y) {\n\t\t\t\tgl.uniform2f(this.addr, v.x, v.y);\n\t\t\t\tcache[0] = v.x;\n\t\t\t\tcache[1] = v.y;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniform2fv(this.addr, v);\n\t\t\tcopyArray(cache, v);\n\t\t}\n\t}\n\n\tfunction setValueV3f(gl, v) {\n\t\tconst cache = this.cache;\n\n\t\tif (v.x !== undefined) {\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z) {\n\t\t\t\tgl.uniform3f(this.addr, v.x, v.y, v.z);\n\t\t\t\tcache[0] = v.x;\n\t\t\t\tcache[1] = v.y;\n\t\t\t\tcache[2] = v.z;\n\t\t\t}\n\t\t} else if (v.r !== undefined) {\n\t\t\tif (cache[0] !== v.r || cache[1] !== v.g || cache[2] !== v.b) {\n\t\t\t\tgl.uniform3f(this.addr, v.r, v.g, v.b);\n\t\t\t\tcache[0] = v.r;\n\t\t\t\tcache[1] = v.g;\n\t\t\t\tcache[2] = v.b;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniform3fv(this.addr, v);\n\t\t\tcopyArray(cache, v);\n\t\t}\n\t}\n\n\tfunction setValueV4f(gl, v) {\n\t\tconst cache = this.cache;\n\n\t\tif (v.x !== undefined) {\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z || cache[3] !== v.w) {\n\t\t\t\tgl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n\t\t\t\tcache[0] = v.x;\n\t\t\t\tcache[1] = v.y;\n\t\t\t\tcache[2] = v.z;\n\t\t\t\tcache[3] = v.w;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniform4fv(this.addr, v);\n\t\t\tcopyArray(cache, v);\n\t\t}\n\t} // Single matrix (from flat array or THREE.MatrixN)\n\n\n\tfunction setValueM2(gl, v) {\n\t\tconst cache = this.cache;\n\t\tconst elements = v.elements;\n\n\t\tif (elements === undefined) {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniformMatrix2fv(this.addr, false, v);\n\t\t\tcopyArray(cache, v);\n\t\t} else {\n\t\t\tif (arraysEqual(cache, elements)) return;\n\t\t\tmat2array.set(elements);\n\t\t\tgl.uniformMatrix2fv(this.addr, false, mat2array);\n\t\t\tcopyArray(cache, elements);\n\t\t}\n\t}\n\n\tfunction setValueM3(gl, v) {\n\t\tconst cache = this.cache;\n\t\tconst elements = v.elements;\n\n\t\tif (elements === undefined) {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniformMatrix3fv(this.addr, false, v);\n\t\t\tcopyArray(cache, v);\n\t\t} else {\n\t\t\tif (arraysEqual(cache, elements)) return;\n\t\t\tmat3array.set(elements);\n\t\t\tgl.uniformMatrix3fv(this.addr, false, mat3array);\n\t\t\tcopyArray(cache, elements);\n\t\t}\n\t}\n\n\tfunction setValueM4(gl, v) {\n\t\tconst cache = this.cache;\n\t\tconst elements = v.elements;\n\n\t\tif (elements === undefined) {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniformMatrix4fv(this.addr, false, v);\n\t\t\tcopyArray(cache, v);\n\t\t} else {\n\t\t\tif (arraysEqual(cache, elements)) return;\n\t\t\tmat4array.set(elements);\n\t\t\tgl.uniformMatrix4fv(this.addr, false, mat4array);\n\t\t\tcopyArray(cache, elements);\n\t\t}\n\t} // Single integer / boolean\n\n\n\tfunction setValueV1i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (cache[0] === v) return;\n\t\tgl.uniform1i(this.addr, v);\n\t\tcache[0] = v;\n\t} // Single integer / boolean vector (from flat array)\n\n\n\tfunction setValueV2i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform2iv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV3i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform3iv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV4i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform4iv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t} // Single unsigned integer\n\n\n\tfunction setValueV1ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (cache[0] === v) return;\n\t\tgl.uniform1ui(this.addr, v);\n\t\tcache[0] = v;\n\t} // Single unsigned integer vector (from flat array)\n\n\n\tfunction setValueV2ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform2uiv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV3ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform3uiv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV4ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform4uiv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t} // Single texture (2D / Cube)\n\n\n\tfunction setValueT1(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.safeSetTexture2D(v || emptyTexture, unit);\n\t}\n\n\tfunction setValueT3D1(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.setTexture3D(v || emptyTexture3d, unit);\n\t}\n\n\tfunction setValueT6(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.safeSetTextureCube(v || emptyCubeTexture, unit);\n\t}\n\n\tfunction setValueT2DArray1(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.setTexture2DArray(v || emptyTexture2dArray, unit);\n\t} // Helper to pick the right setter for the singular case\n\n\n\tfunction getSingularSetter(type) {\n\t\tswitch (type) {\n\t\t\tcase 0x1406:\n\t\t\t\treturn setValueV1f;\n\t\t\t// FLOAT\n\n\t\t\tcase 0x8b50:\n\t\t\t\treturn setValueV2f;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b51:\n\t\t\t\treturn setValueV3f;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b52:\n\t\t\t\treturn setValueV4f;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5a:\n\t\t\t\treturn setValueM2;\n\t\t\t// _MAT2\n\n\t\t\tcase 0x8b5b:\n\t\t\t\treturn setValueM3;\n\t\t\t// _MAT3\n\n\t\t\tcase 0x8b5c:\n\t\t\t\treturn setValueM4;\n\t\t\t// _MAT4\n\n\t\t\tcase 0x1404:\n\t\t\tcase 0x8b56:\n\t\t\t\treturn setValueV1i;\n\t\t\t// INT, BOOL\n\n\t\t\tcase 0x8b53:\n\t\t\tcase 0x8b57:\n\t\t\t\treturn setValueV2i;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b54:\n\t\t\tcase 0x8b58:\n\t\t\t\treturn setValueV3i;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b55:\n\t\t\tcase 0x8b59:\n\t\t\t\treturn setValueV4i;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x1405:\n\t\t\t\treturn setValueV1ui;\n\t\t\t// UINT\n\n\t\t\tcase 0x8dc6:\n\t\t\t\treturn setValueV2ui;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8dc7:\n\t\t\t\treturn setValueV3ui;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8dc8:\n\t\t\t\treturn setValueV4ui;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5e: // SAMPLER_2D\n\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\n\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\n\t\t\tcase 0x8b62:\n\t\t\t\t// SAMPLER_2D_SHADOW\n\t\t\t\treturn setValueT1;\n\n\t\t\tcase 0x8b5f: // SAMPLER_3D\n\n\t\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\n\t\t\tcase 0x8dd3:\n\t\t\t\t// UNSIGNED_INT_SAMPLER_3D\n\t\t\t\treturn setValueT3D1;\n\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\n\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dc5:\n\t\t\t\t// SAMPLER_CUBE_SHADOW\n\t\t\t\treturn setValueT6;\n\n\t\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dc4:\n\t\t\t\t// SAMPLER_2D_ARRAY_SHADOW\n\t\t\t\treturn setValueT2DArray1;\n\t\t}\n\t} // Array of scalars\n\n\n\tfunction setValueV1fArray(gl, v) {\n\t\tgl.uniform1fv(this.addr, v);\n\t} // Array of vectors (from flat array or array of THREE.VectorN)\n\n\n\tfunction setValueV2fArray(gl, v) {\n\t\tconst data = flatten(v, this.size, 2);\n\t\tgl.uniform2fv(this.addr, data);\n\t}\n\n\tfunction setValueV3fArray(gl, v) {\n\t\tconst data = flatten(v, this.size, 3);\n\t\tgl.uniform3fv(this.addr, data);\n\t}\n\n\tfunction setValueV4fArray(gl, v) {\n\t\tconst data = flatten(v, this.size, 4);\n\t\tgl.uniform4fv(this.addr, data);\n\t} // Array of matrices (from flat array or array of THREE.MatrixN)\n\n\n\tfunction setValueM2Array(gl, v) {\n\t\tconst data = flatten(v, this.size, 4);\n\t\tgl.uniformMatrix2fv(this.addr, false, data);\n\t}\n\n\tfunction setValueM3Array(gl, v) {\n\t\tconst data = flatten(v, this.size, 9);\n\t\tgl.uniformMatrix3fv(this.addr, false, data);\n\t}\n\n\tfunction setValueM4Array(gl, v) {\n\t\tconst data = flatten(v, this.size, 16);\n\t\tgl.uniformMatrix4fv(this.addr, false, data);\n\t} // Array of integer / boolean\n\n\n\tfunction setValueV1iArray(gl, v) {\n\t\tgl.uniform1iv(this.addr, v);\n\t} // Array of integer / boolean vectors (from flat array)\n\n\n\tfunction setValueV2iArray(gl, v) {\n\t\tgl.uniform2iv(this.addr, v);\n\t}\n\n\tfunction setValueV3iArray(gl, v) {\n\t\tgl.uniform3iv(this.addr, v);\n\t}\n\n\tfunction setValueV4iArray(gl, v) {\n\t\tgl.uniform4iv(this.addr, v);\n\t} // Array of unsigned integer\n\n\n\tfunction setValueV1uiArray(gl, v) {\n\t\tgl.uniform1uiv(this.addr, v);\n\t} // Array of unsigned integer vectors (from flat array)\n\n\n\tfunction setValueV2uiArray(gl, v) {\n\t\tgl.uniform2uiv(this.addr, v);\n\t}\n\n\tfunction setValueV3uiArray(gl, v) {\n\t\tgl.uniform3uiv(this.addr, v);\n\t}\n\n\tfunction setValueV4uiArray(gl, v) {\n\t\tgl.uniform4uiv(this.addr, v);\n\t} // Array of textures (2D / 3D / Cube / 2DArray)\n\n\n\tfunction setValueT1Array(gl, v, textures) {\n\t\tconst n = v.length;\n\t\tconst units = allocTexUnits(textures, n);\n\t\tgl.uniform1iv(this.addr, units);\n\n\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\ttextures.safeSetTexture2D(v[i] || emptyTexture, units[i]);\n\t\t}\n\t}\n\n\tfunction setValueT3DArray(gl, v, textures) {\n\t\tconst n = v.length;\n\t\tconst units = allocTexUnits(textures, n);\n\t\tgl.uniform1iv(this.addr, units);\n\n\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\ttextures.setTexture3D(v[i] || emptyTexture3d, units[i]);\n\t\t}\n\t}\n\n\tfunction setValueT6Array(gl, v, textures) {\n\t\tconst n = v.length;\n\t\tconst units = allocTexUnits(textures, n);\n\t\tgl.uniform1iv(this.addr, units);\n\n\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\ttextures.safeSetTextureCube(v[i] || emptyCubeTexture, units[i]);\n\t\t}\n\t}\n\n\tfunction setValueT2DArrayArray(gl, v, textures) {\n\t\tconst n = v.length;\n\t\tconst units = allocTexUnits(textures, n);\n\t\tgl.uniform1iv(this.addr, units);\n\n\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\ttextures.setTexture2DArray(v[i] || emptyTexture2dArray, units[i]);\n\t\t}\n\t} // Helper to pick the right setter for a pure (bottom-level) array\n\n\n\tfunction getPureArraySetter(type) {\n\t\tswitch (type) {\n\t\t\tcase 0x1406:\n\t\t\t\treturn setValueV1fArray;\n\t\t\t// FLOAT\n\n\t\t\tcase 0x8b50:\n\t\t\t\treturn setValueV2fArray;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b51:\n\t\t\t\treturn setValueV3fArray;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b52:\n\t\t\t\treturn setValueV4fArray;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5a:\n\t\t\t\treturn setValueM2Array;\n\t\t\t// _MAT2\n\n\t\t\tcase 0x8b5b:\n\t\t\t\treturn setValueM3Array;\n\t\t\t// _MAT3\n\n\t\t\tcase 0x8b5c:\n\t\t\t\treturn setValueM4Array;\n\t\t\t// _MAT4\n\n\t\t\tcase 0x1404:\n\t\t\tcase 0x8b56:\n\t\t\t\treturn setValueV1iArray;\n\t\t\t// INT, BOOL\n\n\t\t\tcase 0x8b53:\n\t\t\tcase 0x8b57:\n\t\t\t\treturn setValueV2iArray;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b54:\n\t\t\tcase 0x8b58:\n\t\t\t\treturn setValueV3iArray;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b55:\n\t\t\tcase 0x8b59:\n\t\t\t\treturn setValueV4iArray;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x1405:\n\t\t\t\treturn setValueV1uiArray;\n\t\t\t// UINT\n\n\t\t\tcase 0x8dc6:\n\t\t\t\treturn setValueV2uiArray;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8dc7:\n\t\t\t\treturn setValueV3uiArray;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8dc8:\n\t\t\t\treturn setValueV4uiArray;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5e: // SAMPLER_2D\n\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\n\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\n\t\t\tcase 0x8b62:\n\t\t\t\t// SAMPLER_2D_SHADOW\n\t\t\t\treturn setValueT1Array;\n\n\t\t\tcase 0x8b5f: // SAMPLER_3D\n\n\t\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\n\t\t\tcase 0x8dd3:\n\t\t\t\t// UNSIGNED_INT_SAMPLER_3D\n\t\t\t\treturn setValueT3DArray;\n\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\n\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dc5:\n\t\t\t\t// SAMPLER_CUBE_SHADOW\n\t\t\t\treturn setValueT6Array;\n\n\t\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dc4:\n\t\t\t\t// SAMPLER_2D_ARRAY_SHADOW\n\t\t\t\treturn setValueT2DArrayArray;\n\t\t}\n\t} // --- Uniform Classes ---\n\n\n\tfunction SingleUniform(id, activeInfo, addr) {\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n\t}\n\n\tfunction PureArrayUniform(id, activeInfo, addr) {\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n\t}\n\n\tPureArrayUniform.prototype.updateCache = function (data) {\n\t\tconst cache = this.cache;\n\n\t\tif (data instanceof Float32Array && cache.length !== data.length) {\n\t\t\tthis.cache = new Float32Array(data.length);\n\t\t}\n\n\t\tcopyArray(cache, data);\n\t};\n\n\tfunction StructuredUniform(id) {\n\t\tthis.id = id;\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\t}\n\n\tStructuredUniform.prototype.setValue = function (gl, value, textures) {\n\t\tconst seq = this.seq;\n\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\n\t\t\tconst u = seq[i];\n\t\t\tu.setValue(gl, value[u.id], textures);\n\t\t}\n\t}; // --- Top-level ---\n\t// Parser - builds up the property tree from the path strings\n\n\n\tconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g; // extracts\n\t// \t- the identifier (member name or array index)\n\t//\t- followed by an optional right bracket (found when array index)\n\t//\t- followed by an optional left bracket or dot (type of subscript)\n\t//\n\t// Note: These portions can be read in a non-overlapping fashion and\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t// in the uniform names.\n\n\tfunction addUniform(container, uniformObject) {\n\t\tcontainer.seq.push(uniformObject);\n\t\tcontainer.map[uniformObject.id] = uniformObject;\n\t}\n\n\tfunction parseUniform(activeInfo, addr, container) {\n\t\tconst path = activeInfo.name,\n\t\t\t\t\tpathLength = path.length; // reset RegExp object, because of the early exit of a previous run\n\n\t\tRePathPart.lastIndex = 0;\n\n\t\twhile (true) {\n\t\t\tconst match = RePathPart.exec(path),\n\t\t\t\t\t\tmatchEnd = RePathPart.lastIndex;\n\t\t\tlet id = match[1];\n\t\t\tconst idIsIndex = match[2] === ']',\n\t\t\t\t\t\tsubscript = match[3];\n\t\t\tif (idIsIndex) id = id | 0; // convert to integer\n\n\t\t\tif (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\t\t\t\taddUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\t// step into inner node / create it in case it doesn't exist\n\t\t\t\tconst map = container.map;\n\t\t\t\tlet next = map[id];\n\n\t\t\t\tif (next === undefined) {\n\t\t\t\t\tnext = new StructuredUniform(id);\n\t\t\t\t\taddUniform(container, next);\n\t\t\t\t}\n\n\t\t\t\tcontainer = next;\n\t\t\t}\n\t\t}\n\t} // Root Container\n\n\n\tfunction WebGLUniforms(gl, program) {\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\t\tconst n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n\t\tfor (let i = 0; i < n; ++i) {\n\t\t\tconst info = gl.getActiveUniform(program, i),\n\t\t\t\t\t\taddr = gl.getUniformLocation(program, info.name);\n\t\t\tparseUniform(info, addr, this);\n\t\t}\n\t}\n\n\tWebGLUniforms.prototype.setValue = function (gl, name, value, textures) {\n\t\tconst u = this.map[name];\n\t\tif (u !== undefined) u.setValue(gl, value, textures);\n\t};\n\n\tWebGLUniforms.prototype.setOptional = function (gl, object, name) {\n\t\tconst v = object[name];\n\t\tif (v !== undefined) this.setValue(gl, name, v);\n\t}; // Static interface\n\n\n\tWebGLUniforms.upload = function (gl, seq, values, textures) {\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\n\t\t\tconst u = seq[i],\n\t\t\t\t\t\tv = values[u.id];\n\n\t\t\tif (v.needsUpdate !== false) {\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue(gl, v.value, textures);\n\t\t\t}\n\t\t}\n\t};\n\n\tWebGLUniforms.seqWithValue = function (seq, values) {\n\t\tconst r = [];\n\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\n\t\t\tconst u = seq[i];\n\t\t\tif (u.id in values) r.push(u);\n\t\t}\n\n\t\treturn r;\n\t};\n\n\tfunction WebGLShader(gl, type, string) {\n\t\tconst shader = gl.createShader(type);\n\t\tgl.shaderSource(shader, string);\n\t\tgl.compileShader(shader);\n\t\treturn shader;\n\t}\n\n\tlet programIdCount = 0;\n\n\tfunction addLineNumbers(string) {\n\t\tconst lines = string.split('\\n');\n\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tlines[i] = i + 1 + ': ' + lines[i];\n\t\t}\n\n\t\treturn lines.join('\\n');\n\t}\n\n\tfunction getEncodingComponents(encoding) {\n\t\tswitch (encoding) {\n\t\t\tcase LinearEncoding:\n\t\t\t\treturn ['Linear', '( value )'];\n\n\t\t\tcase sRGBEncoding:\n\t\t\t\treturn ['sRGB', '( value )'];\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn('THREE.WebGLProgram: Unsupported encoding:', encoding);\n\t\t\t\treturn ['Linear', '( value )'];\n\t\t}\n\t}\n\n\tfunction getShaderErrors(gl, shader, type) {\n\t\tconst status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\t\tconst errors = gl.getShaderInfoLog(shader).trim();\n\t\tif (status && errors === '') return ''; // --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + addLineNumbers(gl.getShaderSource(shader));\n\t}\n\n\tfunction getTexelEncodingFunction(functionName, encoding) {\n\t\tconst components = getEncodingComponents(encoding);\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[0] + components[1] + '; }';\n\t}\n\n\tfunction getToneMappingFunction(functionName, toneMapping) {\n\t\tlet toneMappingName;\n\n\t\tswitch (toneMapping) {\n\t\t\tcase LinearToneMapping:\n\t\t\t\ttoneMappingName = 'Linear';\n\t\t\t\tbreak;\n\n\t\t\tcase ReinhardToneMapping:\n\t\t\t\ttoneMappingName = 'Reinhard';\n\t\t\t\tbreak;\n\n\t\t\tcase CineonToneMapping:\n\t\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\t\tbreak;\n\n\t\t\tcase ACESFilmicToneMapping:\n\t\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\t\tbreak;\n\n\t\t\tcase CustomToneMapping:\n\t\t\t\ttoneMappingName = 'Custom';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn('THREE.WebGLProgram: Unsupported toneMapping:', toneMapping);\n\t\t\t\ttoneMappingName = 'Linear';\n\t\t}\n\n\t\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\t}\n\n\tfunction generateExtensions(parameters) {\n\t\tconst chunks = [parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ? '#extension GL_OES_standard_derivatives : enable' : '', (parameters.extensionFragDepth || parameters.logarithmicDepthBuffer) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '', parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ? '#extension GL_EXT_draw_buffers : require' : '', (parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n\t\treturn chunks.filter(filterEmptyLine).join('\\n');\n\t}\n\n\tfunction generateDefines(defines) {\n\t\tconst chunks = [];\n\n\t\tfor (const name in defines) {\n\t\t\tconst value = defines[name];\n\t\t\tif (value === false) continue;\n\t\t\tchunks.push('#define ' + name + ' ' + value);\n\t\t}\n\n\t\treturn chunks.join('\\n');\n\t}\n\n\tfunction fetchAttributeLocations(gl, program) {\n\t\tconst attributes = {};\n\t\tconst n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n\t\tfor (let i = 0; i < n; i++) {\n\t\t\tconst info = gl.getActiveAttrib(program, i);\n\t\t\tconst name = info.name;\n\t\t\tlet locationSize = 1;\n\t\t\tif (info.type === gl.FLOAT_MAT2) locationSize = 2;\n\t\t\tif (info.type === gl.FLOAT_MAT3) locationSize = 3;\n\t\t\tif (info.type === gl.FLOAT_MAT4) locationSize = 4; // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\t\tattributes[name] = {\n\t\t\t\ttype: info.type,\n\t\t\t\tlocation: gl.getAttribLocation(program, name),\n\t\t\t\tlocationSize: locationSize\n\t\t\t};\n\t\t}\n\n\t\treturn attributes;\n\t}\n\n\tfunction filterEmptyLine(string) {\n\t\treturn string !== '';\n\t}\n\n\tfunction replaceLightNums(string, parameters) {\n\t\treturn string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows);\n\t}\n\n\tfunction replaceClippingPlaneNums(string, parameters) {\n\t\treturn string.replace(/NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, parameters.numClippingPlanes - parameters.numClipIntersection);\n\t} // Resolve Includes\n\n\n\tconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction resolveIncludes(string) {\n\t\treturn string.replace(includePattern, includeReplacer);\n\t}\n\n\tfunction includeReplacer(match, include) {\n\t\tconst string = ShaderChunk[include];\n\n\t\tif (string === undefined) {\n\t\t\tthrow new Error('Can not resolve #include <' + include + '>');\n\t\t}\n\n\t\treturn resolveIncludes(string);\n\t} // Unroll Loops\n\n\n\tconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\tconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\n\tfunction unrollLoops(string) {\n\t\treturn string.replace(unrollLoopPattern, loopReplacer).replace(deprecatedUnrollLoopPattern, deprecatedLoopReplacer);\n\t}\n\n\tfunction deprecatedLoopReplacer(match, start, end, snippet) {\n\t\tconsole.warn('WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.');\n\t\treturn loopReplacer(match, start, end, snippet);\n\t}\n\n\tfunction loopReplacer(match, start, end, snippet) {\n\t\tlet string = '';\n\n\t\tfor (let i = parseInt(start); i < parseInt(end); i++) {\n\t\t\tstring += snippet.replace(/\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]').replace(/UNROLLED_LOOP_INDEX/g, i);\n\t\t}\n\n\t\treturn string;\n\t} //\n\n\n\tfunction generatePrecision(parameters) {\n\t\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\t\tif (parameters.precision === 'highp') {\n\t\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\t\t} else if (parameters.precision === 'mediump') {\n\t\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\t\t} else if (parameters.precision === 'lowp') {\n\t\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\t\t}\n\n\t\treturn precisionstring;\n\t}\n\n\tfunction generateShadowMapTypeDefine(parameters) {\n\t\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\tif (parameters.shadowMapType === PCFShadowMap) {\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\t\t} else if (parameters.shadowMapType === PCFSoftShadowMap) {\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\t\t} else if (parameters.shadowMapType === VSMShadowMap) {\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\t\t}\n\n\t\treturn shadowMapTypeDefine;\n\t}\n\n\tfunction generateEnvMapTypeDefine(parameters) {\n\t\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\t\tif (parameters.envMap) {\n\t\t\tswitch (parameters.envMapMode) {\n\t\t\t\tcase CubeReflectionMapping:\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn envMapTypeDefine;\n\t}\n\n\tfunction generateEnvMapModeDefine(parameters) {\n\t\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\t\tif (parameters.envMap) {\n\t\t\tswitch (parameters.envMapMode) {\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn envMapModeDefine;\n\t}\n\n\tfunction generateEnvMapBlendingDefine(parameters) {\n\t\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\t\tif (parameters.envMap) {\n\t\t\tswitch (parameters.combine) {\n\t\t\t\tcase MultiplyOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MixOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AddOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn envMapBlendingDefine;\n\t}\n\n\tfunction WebGLProgram(renderer, cacheKey, parameters, bindingStates) {\n\t\t// TODO Send this event to Three.js DevTools\n\t\t// console.log( 'WebGLProgram', cacheKey );\n\t\tconst gl = renderer.getContext();\n\t\tconst defines = parameters.defines;\n\t\tlet vertexShader = parameters.vertexShader;\n\t\tlet fragmentShader = parameters.fragmentShader;\n\t\tconst shadowMapTypeDefine = generateShadowMapTypeDefine(parameters);\n\t\tconst envMapTypeDefine = generateEnvMapTypeDefine(parameters);\n\t\tconst envMapModeDefine = generateEnvMapModeDefine(parameters);\n\t\tconst envMapBlendingDefine = generateEnvMapBlendingDefine(parameters);\n\t\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions(parameters);\n\t\tconst customDefines = generateDefines(defines);\n\t\tconst program = gl.createProgram();\n\t\tlet prefixVertex, prefixFragment;\n\t\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\t\tif (parameters.isRawShaderMaterial) {\n\t\t\tprefixVertex = [customDefines].filter(filterEmptyLine).join('\\n');\n\n\t\t\tif (prefixVertex.length > 0) {\n\t\t\t\tprefixVertex += '\\n';\n\t\t\t}\n\n\t\t\tprefixFragment = [customExtensions, customDefines].filter(filterEmptyLine).join('\\n');\n\n\t\t\tif (prefixFragment.length > 0) {\n\t\t\t\tprefixFragment += '\\n';\n\t\t\t}\n\t\t} else {\n\t\t\tprefixVertex = [generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.instancing ? '#define USE_INSTANCING' : '', parameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '', parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define MAX_BONES ' + parameters.maxBones, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '', parameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '', parameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.morphTargets && parameters.isWebGL2 ? '#define MORPHTARGETS_TEXTURE' : '', parameters.morphTargets && parameters.isWebGL2 ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', '#ifdef USE_INSTANCING', '\tattribute mat4 instanceMatrix;', '#endif', '#ifdef USE_INSTANCING_COLOR', '\tattribute vec3 instanceColor;', '#endif', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_TANGENT', '\tattribute vec4 tangent;', '#endif', '#if defined( USE_COLOR_ALPHA )', '\tattribute vec4 color;', '#elif defined( USE_COLOR )', '\tattribute vec3 color;', '#endif', '#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n\t\t\tprefixFragment = [customExtensions, generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.matcap ? '#define USE_MATCAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoat ? '#define USE_CLEARCOAT' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '', parameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.alphaTest ? '#define USE_ALPHATEST' : '', parameters.sheen ? '#define USE_SHEEN' : '', parameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '', parameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.gradientMap ? '#define USE_GRADIENTMAP' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '', parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', (parameters.extensionShaderTextureLOD || parameters.envMap) && parameters.rendererExtensionShaderTextureLod ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', parameters.toneMapping !== NoToneMapping ? '#define TONE_MAPPING' : '', parameters.toneMapping !== NoToneMapping ? ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\tparameters.toneMapping !== NoToneMapping ? getToneMappingFunction('toneMapping', parameters.toneMapping) : '', parameters.dithering ? '#define DITHERING' : '', parameters.transparent ? '' : '#define OPAQUE', ShaderChunk['encodings_pars_fragment'], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction('linearToOutputTexel', parameters.outputEncoding), parameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\n\t\t}\n\n\t\tvertexShader = resolveIncludes(vertexShader);\n\t\tvertexShader = replaceLightNums(vertexShader, parameters);\n\t\tvertexShader = replaceClippingPlaneNums(vertexShader, parameters);\n\t\tfragmentShader = resolveIncludes(fragmentShader);\n\t\tfragmentShader = replaceLightNums(fragmentShader, parameters);\n\t\tfragmentShader = replaceClippingPlaneNums(fragmentShader, parameters);\n\t\tvertexShader = unrollLoops(vertexShader);\n\t\tfragmentShader = unrollLoops(fragmentShader);\n\n\t\tif (parameters.isWebGL2 && parameters.isRawShaderMaterial !== true) {\n\t\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\t\t\tversionString = '#version 300 es\\n';\n\t\t\tprefixVertex = ['precision mediump sampler2DArray;', '#define attribute in', '#define varying out', '#define texture2D texture'].join('\\n') + '\\n' + prefixVertex;\n\t\t\tprefixFragment = ['#define varying in', parameters.glslVersion === GLSL3 ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;', parameters.glslVersion === GLSL3 ? '' : '#define gl_FragColor pc_fragColor', '#define gl_FragDepthEXT gl_FragDepth', '#define texture2D texture', '#define textureCube texture', '#define texture2DProj textureProj', '#define texture2DLodEXT textureLod', '#define texture2DProjLodEXT textureProjLod', '#define textureCubeLodEXT textureLod', '#define texture2DGradEXT textureGrad', '#define texture2DProjGradEXT textureProjGrad', '#define textureCubeGradEXT textureGrad'].join('\\n') + '\\n' + prefixFragment;\n\t\t}\n\n\t\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\t\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\tconst glVertexShader = WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\n\t\tconst glFragmentShader = WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\n\t\tgl.attachShader(program, glVertexShader);\n\t\tgl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n\t\tif (parameters.index0AttributeName !== undefined) {\n\t\t\tgl.bindAttribLocation(program, 0, parameters.index0AttributeName);\n\t\t} else if (parameters.morphTargets === true) {\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\tgl.bindAttribLocation(program, 0, 'position');\n\t\t}\n\n\t\tgl.linkProgram(program); // check for link errors\n\n\t\tif (renderer.debug.checkShaderErrors) {\n\t\t\tconst programLog = gl.getProgramInfoLog(program).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog(glVertexShader).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog(glFragmentShader).trim();\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n\t\t\t\trunnable = false;\n\t\t\t\tconst vertexErrors = getShaderErrors(gl, glVertexShader, 'vertex');\n\t\t\t\tconst fragmentErrors = getShaderErrors(gl, glFragmentShader, 'fragment');\n\t\t\t\tconsole.error('THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' + 'VALIDATE_STATUS ' + gl.getProgramParameter(program, gl.VALIDATE_STATUS) + '\\n\\n' + 'Program Info Log: ' + programLog + '\\n' + vertexErrors + '\\n' + fragmentErrors);\n\t\t\t} else if (programLog !== '') {\n\t\t\t\tconsole.warn('THREE.WebGLProgram: Program Info Log:', programLog);\n\t\t\t} else if (vertexLog === '' || fragmentLog === '') {\n\t\t\t\thaveDiagnostics = false;\n\t\t\t}\n\n\t\t\tif (haveDiagnostics) {\n\t\t\t\tthis.diagnostics = {\n\t\t\t\t\trunnable: runnable,\n\t\t\t\t\tprogramLog: programLog,\n\t\t\t\t\tvertexShader: {\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\t\t\t\t\t},\n\t\t\t\t\tfragmentShader: {\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t} // Clean up\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\n\t\tgl.deleteShader(glVertexShader);\n\t\tgl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n\t\tlet cachedUniforms;\n\n\t\tthis.getUniforms = function () {\n\t\t\tif (cachedUniforms === undefined) {\n\t\t\t\tcachedUniforms = new WebGLUniforms(gl, program);\n\t\t\t}\n\n\t\t\treturn cachedUniforms;\n\t\t}; // set up caching for attribute locations\n\n\n\t\tlet cachedAttributes;\n\n\t\tthis.getAttributes = function () {\n\t\t\tif (cachedAttributes === undefined) {\n\t\t\t\tcachedAttributes = fetchAttributeLocations(gl, program);\n\t\t\t}\n\n\t\t\treturn cachedAttributes;\n\t\t}; // free resource\n\n\n\t\tthis.destroy = function () {\n\t\t\tbindingStates.releaseStatesOfProgram(this);\n\t\t\tgl.deleteProgram(program);\n\t\t\tthis.program = undefined;\n\t\t}; //\n\n\n\t\tthis.name = parameters.shaderName;\n\t\tthis.id = programIdCount++;\n\t\tthis.cacheKey = cacheKey;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\t\treturn this;\n\t}\n\n\tlet _id = 0;\n\n\tclass WebGLShaderCache {\n\t\tconstructor() {\n\t\t\tthis.shaderCache = new Map();\n\t\t\tthis.materialCache = new Map();\n\t\t}\n\n\t\tupdate(material) {\n\t\t\tconst vertexShader = material.vertexShader;\n\t\t\tconst fragmentShader = material.fragmentShader;\n\n\t\t\tconst vertexShaderStage = this._getShaderStage(vertexShader);\n\n\t\t\tconst fragmentShaderStage = this._getShaderStage(fragmentShader);\n\n\t\t\tconst materialShaders = this._getShaderCacheForMaterial(material);\n\n\t\t\tif (materialShaders.has(vertexShaderStage) === false) {\n\t\t\t\tmaterialShaders.add(vertexShaderStage);\n\t\t\t\tvertexShaderStage.usedTimes++;\n\t\t\t}\n\n\t\t\tif (materialShaders.has(fragmentShaderStage) === false) {\n\t\t\t\tmaterialShaders.add(fragmentShaderStage);\n\t\t\t\tfragmentShaderStage.usedTimes++;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tremove(material) {\n\t\t\tconst materialShaders = this.materialCache.get(material);\n\n\t\t\tfor (const shaderStage of materialShaders) {\n\t\t\t\tshaderStage.usedTimes--;\n\t\t\t\tif (shaderStage.usedTimes === 0) this.shaderCache.delete(shaderStage);\n\t\t\t}\n\n\t\t\tthis.materialCache.delete(material);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetVertexShaderID(material) {\n\t\t\treturn this._getShaderStage(material.vertexShader).id;\n\t\t}\n\n\t\tgetFragmentShaderID(material) {\n\t\t\treturn this._getShaderStage(material.fragmentShader).id;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.shaderCache.clear();\n\t\t\tthis.materialCache.clear();\n\t\t}\n\n\t\t_getShaderCacheForMaterial(material) {\n\t\t\tconst cache = this.materialCache;\n\n\t\t\tif (cache.has(material) === false) {\n\t\t\t\tcache.set(material, new Set());\n\t\t\t}\n\n\t\t\treturn cache.get(material);\n\t\t}\n\n\t\t_getShaderStage(code) {\n\t\t\tconst cache = this.shaderCache;\n\n\t\t\tif (cache.has(code) === false) {\n\t\t\t\tconst stage = new WebGLShaderStage();\n\t\t\t\tcache.set(code, stage);\n\t\t\t}\n\n\t\t\treturn cache.get(code);\n\t\t}\n\n\t}\n\n\tclass WebGLShaderStage {\n\t\tconstructor() {\n\t\t\tthis.id = _id++;\n\t\t\tthis.usedTimes = 0;\n\t\t}\n\n\t}\n\n\tfunction WebGLPrograms(renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping) {\n\t\tconst _programLayers = new Layers();\n\n\t\tconst _customShaders = new WebGLShaderCache();\n\n\t\tconst programs = [];\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\t\tconst floatVertexTextures = capabilities.floatVertexTextures;\n\t\tconst maxVertexUniforms = capabilities.maxVertexUniforms;\n\t\tconst vertexTextures = capabilities.vertexTextures;\n\t\tlet precision = capabilities.precision;\n\t\tconst shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshToonMaterial: 'toon',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tMeshMatcapMaterial: 'matcap',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points',\n\t\t\tShadowMaterial: 'shadow',\n\t\t\tSpriteMaterial: 'sprite'\n\t\t};\n\n\t\tfunction getMaxBones(object) {\n\t\t\tconst skeleton = object.skeleton;\n\t\t\tconst bones = skeleton.bones;\n\n\t\t\tif (floatVertexTextures) {\n\t\t\t\treturn 1024;\n\t\t\t} else {\n\t\t\t\t// default for when object is not specified\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t//\n\t\t\t\t//\t- leave some extra space for other uniforms\n\t\t\t\t//\t- limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t//\t\t(up to 54 should be safe)\n\t\t\t\tconst nVertexUniforms = maxVertexUniforms;\n\t\t\t\tconst nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n\t\t\t\tconst maxBones = Math.min(nVertexMatrices, bones.length);\n\n\t\t\t\tif (maxBones < bones.length) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.');\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn maxBones;\n\t\t\t}\n\t\t}\n\n\t\tfunction getParameters(material, lights, shadows, scene, object) {\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || environment);\n\t\t\tconst shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tconst maxBones = object.isSkinnedMesh ? getMaxBones(object) : 0;\n\n\t\t\tif (material.precision !== null) {\n\t\t\t\tprecision = capabilities.getMaxPrecision(material.precision);\n\n\t\t\t\tif (precision !== material.precision) {\n\t\t\t\t\tconsole.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet vertexShader, fragmentShader;\n\t\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\t\tif (shaderID) {\n\t\t\t\tconst shader = ShaderLib[shaderID];\n\t\t\t\tvertexShader = shader.vertexShader;\n\t\t\t\tfragmentShader = shader.fragmentShader;\n\t\t\t} else {\n\t\t\t\tvertexShader = material.vertexShader;\n\t\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t\t_customShaders.update(material);\n\n\t\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID(material);\n\t\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID(material);\n\t\t\t}\n\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\t\tconst useAlphaTest = material.alphaTest > 0;\n\t\t\tconst useClearcoat = material.clearcoat > 0;\n\t\t\tconst parameters = {\n\t\t\t\tisWebGL2: isWebGL2,\n\t\t\t\tshaderID: shaderID,\n\t\t\t\tshaderName: material.type,\n\t\t\t\tvertexShader: vertexShader,\n\t\t\t\tfragmentShader: fragmentShader,\n\t\t\t\tdefines: material.defines,\n\t\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\t\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\t\tglslVersion: material.glslVersion,\n\t\t\t\tprecision: precision,\n\t\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\t\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\t\toutputEncoding: currentRenderTarget === null ? renderer.outputEncoding : currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding,\n\t\t\t\tmap: !!material.map,\n\t\t\t\tmatcap: !!material.matcap,\n\t\t\t\tenvMap: !!envMap,\n\t\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\t\tenvMapCubeUV: !!envMap && (envMap.mapping === CubeUVReflectionMapping || envMap.mapping === CubeUVRefractionMapping),\n\t\t\t\tlightMap: !!material.lightMap,\n\t\t\t\taoMap: !!material.aoMap,\n\t\t\t\temissiveMap: !!material.emissiveMap,\n\t\t\t\tbumpMap: !!material.bumpMap,\n\t\t\t\tnormalMap: !!material.normalMap,\n\t\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\t\tdecodeVideoTexture: !!material.map && material.map.isVideoTexture === true && material.map.encoding === sRGBEncoding,\n\t\t\t\tclearcoat: useClearcoat,\n\t\t\t\tclearcoatMap: useClearcoat && !!material.clearcoatMap,\n\t\t\t\tclearcoatRoughnessMap: useClearcoat && !!material.clearcoatRoughnessMap,\n\t\t\t\tclearcoatNormalMap: useClearcoat && !!material.clearcoatNormalMap,\n\t\t\t\tdisplacementMap: !!material.displacementMap,\n\t\t\t\troughnessMap: !!material.roughnessMap,\n\t\t\t\tmetalnessMap: !!material.metalnessMap,\n\t\t\t\tspecularMap: !!material.specularMap,\n\t\t\t\tspecularIntensityMap: !!material.specularIntensityMap,\n\t\t\t\tspecularColorMap: !!material.specularColorMap,\n\t\t\t\ttransparent: material.transparent,\n\t\t\t\talphaMap: !!material.alphaMap,\n\t\t\t\talphaTest: useAlphaTest,\n\t\t\t\tgradientMap: !!material.gradientMap,\n\t\t\t\tsheen: material.sheen > 0,\n\t\t\t\tsheenColorMap: !!material.sheenColorMap,\n\t\t\t\tsheenRoughnessMap: !!material.sheenRoughnessMap,\n\t\t\t\ttransmission: material.transmission > 0,\n\t\t\t\ttransmissionMap: !!material.transmissionMap,\n\t\t\t\tthicknessMap: !!material.thicknessMap,\n\t\t\t\tcombine: material.combine,\n\t\t\t\tvertexTangents: !!material.normalMap && !!object.geometry && !!object.geometry.attributes.tangent,\n\t\t\t\tvertexColors: material.vertexColors,\n\t\t\t\tvertexAlphas: material.vertexColors === true && !!object.geometry && !!object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4,\n\t\t\t\tvertexUvs: !!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatMap || !!material.clearcoatRoughnessMap || !!material.clearcoatNormalMap || !!material.displacementMap || !!material.transmissionMap || !!material.thicknessMap || !!material.specularIntensityMap || !!material.specularColorMap || !!material.sheenColorMap || !!material.sheenRoughnessMap,\n\t\t\t\tuvsVertexOnly: !(!!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatNormalMap || material.transmission > 0 || !!material.transmissionMap || !!material.thicknessMap || !!material.specularIntensityMap || !!material.specularColorMap || material.sheen > 0 || !!material.sheenColorMap || !!material.sheenRoughnessMap) && !!material.displacementMap,\n\t\t\t\tfog: !!fog,\n\t\t\t\tuseFog: material.fog,\n\t\t\t\tfogExp2: fog && fog.isFogExp2,\n\t\t\t\tflatShading: !!material.flatShading,\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\t\t\tskinning: object.isSkinnedMesh === true && maxBones > 0,\n\t\t\t\tmaxBones: maxBones,\n\t\t\t\tuseVertexTexture: floatVertexTextures,\n\t\t\t\tmorphTargets: !!object.geometry && !!object.geometry.morphAttributes.position,\n\t\t\t\tmorphNormals: !!object.geometry && !!object.geometry.morphAttributes.normal,\n\t\t\t\tmorphTargetsCount: !!object.geometry && !!object.geometry.morphAttributes.position ? object.geometry.morphAttributes.position.length : 0,\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\t\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\t\tnumClipIntersection: clipping.numIntersection,\n\t\t\t\tdithering: material.dithering,\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\t\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\t\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\t\tflipSided: material.side === BackSide,\n\t\t\t\tdepthPacking: material.depthPacking !== undefined ? material.depthPacking : false,\n\t\t\t\tindex0AttributeName: material.index0AttributeName,\n\t\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\t\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has('EXT_frag_depth'),\n\t\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has('WEBGL_draw_buffers'),\n\t\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has('EXT_shader_texture_lod'),\n\t\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\t\t\t};\n\t\t\treturn parameters;\n\t\t}\n\n\t\tfunction getProgramCacheKey(parameters) {\n\t\t\tconst array = [];\n\n\t\t\tif (parameters.shaderID) {\n\t\t\t\tarray.push(parameters.shaderID);\n\t\t\t} else {\n\t\t\t\tarray.push(parameters.customVertexShaderID);\n\t\t\t\tarray.push(parameters.customFragmentShaderID);\n\t\t\t}\n\n\t\t\tif (parameters.defines !== undefined) {\n\t\t\t\tfor (const name in parameters.defines) {\n\t\t\t\t\tarray.push(name);\n\t\t\t\t\tarray.push(parameters.defines[name]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (parameters.isRawShaderMaterial === false) {\n\t\t\t\tgetProgramCacheKeyParameters(array, parameters);\n\t\t\t\tgetProgramCacheKeyBooleans(array, parameters);\n\t\t\t\tarray.push(renderer.outputEncoding);\n\t\t\t}\n\n\t\t\tarray.push(parameters.customProgramCacheKey);\n\t\t\treturn array.join();\n\t\t}\n\n\t\tfunction getProgramCacheKeyParameters(array, parameters) {\n\t\t\tarray.push(parameters.precision);\n\t\t\tarray.push(parameters.outputEncoding);\n\t\t\tarray.push(parameters.envMapMode);\n\t\t\tarray.push(parameters.combine);\n\t\t\tarray.push(parameters.vertexUvs);\n\t\t\tarray.push(parameters.fogExp2);\n\t\t\tarray.push(parameters.sizeAttenuation);\n\t\t\tarray.push(parameters.maxBones);\n\t\t\tarray.push(parameters.morphTargetsCount);\n\t\t\tarray.push(parameters.numDirLights);\n\t\t\tarray.push(parameters.numPointLights);\n\t\t\tarray.push(parameters.numSpotLights);\n\t\t\tarray.push(parameters.numHemiLights);\n\t\t\tarray.push(parameters.numRectAreaLights);\n\t\t\tarray.push(parameters.numDirLightShadows);\n\t\t\tarray.push(parameters.numPointLightShadows);\n\t\t\tarray.push(parameters.numSpotLightShadows);\n\t\t\tarray.push(parameters.shadowMapType);\n\t\t\tarray.push(parameters.toneMapping);\n\t\t\tarray.push(parameters.numClippingPlanes);\n\t\t\tarray.push(parameters.numClipIntersection);\n\t\t}\n\n\t\tfunction getProgramCacheKeyBooleans(array, parameters) {\n\t\t\t_programLayers.disableAll();\n\n\t\t\tif (parameters.isWebGL2) _programLayers.enable(0);\n\t\t\tif (parameters.supportsVertexTextures) _programLayers.enable(1);\n\t\t\tif (parameters.instancing) _programLayers.enable(2);\n\t\t\tif (parameters.instancingColor) _programLayers.enable(3);\n\t\t\tif (parameters.map) _programLayers.enable(4);\n\t\t\tif (parameters.matcap) _programLayers.enable(5);\n\t\t\tif (parameters.envMap) _programLayers.enable(6);\n\t\t\tif (parameters.envMapCubeUV) _programLayers.enable(7);\n\t\t\tif (parameters.lightMap) _programLayers.enable(8);\n\t\t\tif (parameters.aoMap) _programLayers.enable(9);\n\t\t\tif (parameters.emissiveMap) _programLayers.enable(10);\n\t\t\tif (parameters.bumpMap) _programLayers.enable(11);\n\t\t\tif (parameters.normalMap) _programLayers.enable(12);\n\t\t\tif (parameters.objectSpaceNormalMap) _programLayers.enable(13);\n\t\t\tif (parameters.tangentSpaceNormalMap) _programLayers.enable(14);\n\t\t\tif (parameters.clearcoat) _programLayers.enable(15);\n\t\t\tif (parameters.clearcoatMap) _programLayers.enable(16);\n\t\t\tif (parameters.clearcoatRoughnessMap) _programLayers.enable(17);\n\t\t\tif (parameters.clearcoatNormalMap) _programLayers.enable(18);\n\t\t\tif (parameters.displacementMap) _programLayers.enable(19);\n\t\t\tif (parameters.specularMap) _programLayers.enable(20);\n\t\t\tif (parameters.roughnessMap) _programLayers.enable(21);\n\t\t\tif (parameters.metalnessMap) _programLayers.enable(22);\n\t\t\tif (parameters.gradientMap) _programLayers.enable(23);\n\t\t\tif (parameters.alphaMap) _programLayers.enable(24);\n\t\t\tif (parameters.alphaTest) _programLayers.enable(25);\n\t\t\tif (parameters.vertexColors) _programLayers.enable(26);\n\t\t\tif (parameters.vertexAlphas) _programLayers.enable(27);\n\t\t\tif (parameters.vertexUvs) _programLayers.enable(28);\n\t\t\tif (parameters.vertexTangents) _programLayers.enable(29);\n\t\t\tif (parameters.uvsVertexOnly) _programLayers.enable(30);\n\t\t\tif (parameters.fog) _programLayers.enable(31);\n\t\t\tarray.push(_programLayers.mask);\n\n\t\t\t_programLayers.disableAll();\n\n\t\t\tif (parameters.useFog) _programLayers.enable(0);\n\t\t\tif (parameters.flatShading) _programLayers.enable(1);\n\t\t\tif (parameters.logarithmicDepthBuffer) _programLayers.enable(2);\n\t\t\tif (parameters.skinning) _programLayers.enable(3);\n\t\t\tif (parameters.useVertexTexture) _programLayers.enable(4);\n\t\t\tif (parameters.morphTargets) _programLayers.enable(5);\n\t\t\tif (parameters.morphNormals) _programLayers.enable(6);\n\t\t\tif (parameters.premultipliedAlpha) _programLayers.enable(7);\n\t\t\tif (parameters.shadowMapEnabled) _programLayers.enable(8);\n\t\t\tif (parameters.physicallyCorrectLights) _programLayers.enable(9);\n\t\t\tif (parameters.doubleSided) _programLayers.enable(10);\n\t\t\tif (parameters.flipSided) _programLayers.enable(11);\n\t\t\tif (parameters.depthPacking) _programLayers.enable(12);\n\t\t\tif (parameters.dithering) _programLayers.enable(13);\n\t\t\tif (parameters.specularIntensityMap) _programLayers.enable(14);\n\t\t\tif (parameters.specularColorMap) _programLayers.enable(15);\n\t\t\tif (parameters.transmission) _programLayers.enable(16);\n\t\t\tif (parameters.transmissionMap) _programLayers.enable(17);\n\t\t\tif (parameters.thicknessMap) _programLayers.enable(18);\n\t\t\tif (parameters.sheen) _programLayers.enable(19);\n\t\t\tif (parameters.sheenColorMap) _programLayers.enable(20);\n\t\t\tif (parameters.sheenRoughnessMap) _programLayers.enable(21);\n\t\t\tif (parameters.decodeVideoTexture) _programLayers.enable(22);\n\t\t\tif (parameters.transparent) _programLayers.enable(23);\n\t\t\tarray.push(_programLayers.mask);\n\t\t}\n\n\t\tfunction getUniforms(material) {\n\t\t\tconst shaderID = shaderIDs[material.type];\n\t\t\tlet uniforms;\n\n\t\t\tif (shaderID) {\n\t\t\t\tconst shader = ShaderLib[shaderID];\n\t\t\t\tuniforms = UniformsUtils.clone(shader.uniforms);\n\t\t\t} else {\n\t\t\t\tuniforms = material.uniforms;\n\t\t\t}\n\n\t\t\treturn uniforms;\n\t\t}\n\n\t\tfunction acquireProgram(parameters, cacheKey) {\n\t\t\tlet program; // Check if code has been already compiled\n\n\t\t\tfor (let p = 0, pl = programs.length; p < pl; p++) {\n\t\t\t\tconst preexistingProgram = programs[p];\n\n\t\t\t\tif (preexistingProgram.cacheKey === cacheKey) {\n\t\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t\t++program.usedTimes;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (program === undefined) {\n\t\t\t\tprogram = new WebGLProgram(renderer, cacheKey, parameters, bindingStates);\n\t\t\t\tprograms.push(program);\n\t\t\t}\n\n\t\t\treturn program;\n\t\t}\n\n\t\tfunction releaseProgram(program) {\n\t\t\tif (--program.usedTimes === 0) {\n\t\t\t\t// Remove from unordered set\n\t\t\t\tconst i = programs.indexOf(program);\n\t\t\t\tprograms[i] = programs[programs.length - 1];\n\t\t\t\tprograms.pop(); // Free WebGL resources\n\n\t\t\t\tprogram.destroy();\n\t\t\t}\n\t\t}\n\n\t\tfunction releaseShaderCache(material) {\n\t\t\t_customShaders.remove(material);\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\t_customShaders.dispose();\n\t\t}\n\n\t\treturn {\n\t\t\tgetParameters: getParameters,\n\t\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\t\tgetUniforms: getUniforms,\n\t\t\tacquireProgram: acquireProgram,\n\t\t\treleaseProgram: releaseProgram,\n\t\t\treleaseShaderCache: releaseShaderCache,\n\t\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\t\tprograms: programs,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction WebGLProperties() {\n\t\tlet properties = new WeakMap();\n\n\t\tfunction get(object) {\n\t\t\tlet map = properties.get(object);\n\n\t\t\tif (map === undefined) {\n\t\t\t\tmap = {};\n\t\t\t\tproperties.set(object, map);\n\t\t\t}\n\n\t\t\treturn map;\n\t\t}\n\n\t\tfunction remove(object) {\n\t\t\tproperties.delete(object);\n\t\t}\n\n\t\tfunction update(object, key, value) {\n\t\t\tproperties.get(object)[key] = value;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tproperties = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction painterSortStable(a, b) {\n\t\tif (a.groupOrder !== b.groupOrder) {\n\t\t\treturn a.groupOrder - b.groupOrder;\n\t\t} else if (a.renderOrder !== b.renderOrder) {\n\t\t\treturn a.renderOrder - b.renderOrder;\n\t\t} else if (a.material.id !== b.material.id) {\n\t\t\treturn a.material.id - b.material.id;\n\t\t} else if (a.z !== b.z) {\n\t\t\treturn a.z - b.z;\n\t\t} else {\n\t\t\treturn a.id - b.id;\n\t\t}\n\t}\n\n\tfunction reversePainterSortStable(a, b) {\n\t\tif (a.groupOrder !== b.groupOrder) {\n\t\t\treturn a.groupOrder - b.groupOrder;\n\t\t} else if (a.renderOrder !== b.renderOrder) {\n\t\t\treturn a.renderOrder - b.renderOrder;\n\t\t} else if (a.z !== b.z) {\n\t\t\treturn b.z - a.z;\n\t\t} else {\n\t\t\treturn a.id - b.id;\n\t\t}\n\t}\n\n\tfunction WebGLRenderList() {\n\t\tconst renderItems = [];\n\t\tlet renderItemsIndex = 0;\n\t\tconst opaque = [];\n\t\tconst transmissive = [];\n\t\tconst transparent = [];\n\n\t\tfunction init() {\n\t\t\trenderItemsIndex = 0;\n\t\t\topaque.length = 0;\n\t\t\ttransmissive.length = 0;\n\t\t\ttransparent.length = 0;\n\t\t}\n\n\t\tfunction getNextRenderItem(object, geometry, material, groupOrder, z, group) {\n\t\t\tlet renderItem = renderItems[renderItemsIndex];\n\n\t\t\tif (renderItem === undefined) {\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\t\tz: z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\t\t\t\trenderItems[renderItemsIndex] = renderItem;\n\t\t\t} else {\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\t\trenderItem.z = z;\n\t\t\t\trenderItem.group = group;\n\t\t\t}\n\n\t\t\trenderItemsIndex++;\n\t\t\treturn renderItem;\n\t\t}\n\n\t\tfunction push(object, geometry, material, groupOrder, z, group) {\n\t\t\tconst renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\n\n\t\t\tif (material.transmission > 0.0) {\n\t\t\t\ttransmissive.push(renderItem);\n\t\t\t} else if (material.transparent === true) {\n\t\t\t\ttransparent.push(renderItem);\n\t\t\t} else {\n\t\t\t\topaque.push(renderItem);\n\t\t\t}\n\t\t}\n\n\t\tfunction unshift(object, geometry, material, groupOrder, z, group) {\n\t\t\tconst renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\n\n\t\t\tif (material.transmission > 0.0) {\n\t\t\t\ttransmissive.unshift(renderItem);\n\t\t\t} else if (material.transparent === true) {\n\t\t\t\ttransparent.unshift(renderItem);\n\t\t\t} else {\n\t\t\t\topaque.unshift(renderItem);\n\t\t\t}\n\t\t}\n\n\t\tfunction sort(customOpaqueSort, customTransparentSort) {\n\t\t\tif (opaque.length > 1) opaque.sort(customOpaqueSort || painterSortStable);\n\t\t\tif (transmissive.length > 1) transmissive.sort(customTransparentSort || reversePainterSortStable);\n\t\t\tif (transparent.length > 1) transparent.sort(customTransparentSort || reversePainterSortStable);\n\t\t}\n\n\t\tfunction finish() {\n\t\t\t// Clear references from inactive renderItems in the list\n\t\t\tfor (let i = renderItemsIndex, il = renderItems.length; i < il; i++) {\n\t\t\t\tconst renderItem = renderItems[i];\n\t\t\t\tif (renderItem.id === null) break;\n\t\t\t\trenderItem.id = null;\n\t\t\t\trenderItem.object = null;\n\t\t\t\trenderItem.geometry = null;\n\t\t\t\trenderItem.material = null;\n\t\t\t\trenderItem.group = null;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\topaque: opaque,\n\t\t\ttransmissive: transmissive,\n\t\t\ttransparent: transparent,\n\t\t\tinit: init,\n\t\t\tpush: push,\n\t\t\tunshift: unshift,\n\t\t\tfinish: finish,\n\t\t\tsort: sort\n\t\t};\n\t}\n\n\tfunction WebGLRenderLists() {\n\t\tlet lists = new WeakMap();\n\n\t\tfunction get(scene, renderCallDepth) {\n\t\t\tlet list;\n\n\t\t\tif (lists.has(scene) === false) {\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlists.set(scene, [list]);\n\t\t\t} else {\n\t\t\t\tif (renderCallDepth >= lists.get(scene).length) {\n\t\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\t\tlists.get(scene).push(list);\n\t\t\t\t} else {\n\t\t\t\t\tlist = lists.get(scene)[renderCallDepth];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tlists = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction UniformsCache() {\n\t\tconst lights = {};\n\t\treturn {\n\t\t\tget: function (light) {\n\t\t\t\tif (lights[light.id] !== undefined) {\n\t\t\t\t\treturn lights[light.id];\n\t\t\t\t}\n\n\t\t\t\tlet uniforms;\n\n\t\t\t\tswitch (light.type) {\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlights[light.id] = uniforms;\n\t\t\t\treturn uniforms;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction ShadowUniformsCache() {\n\t\tconst lights = {};\n\t\treturn {\n\t\t\tget: function (light) {\n\t\t\t\tif (lights[light.id] !== undefined) {\n\t\t\t\t\treturn lights[light.id];\n\t\t\t\t}\n\n\t\t\t\tlet uniforms;\n\n\t\t\t\tswitch (light.type) {\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t}\n\n\t\t\t\tlights[light.id] = uniforms;\n\t\t\t\treturn uniforms;\n\t\t\t}\n\t\t};\n\t}\n\n\tlet nextVersion = 0;\n\n\tfunction shadowCastingLightsFirst(lightA, lightB) {\n\t\treturn (lightB.castShadow ? 1 : 0) - (lightA.castShadow ? 1 : 0);\n\t}\n\n\tfunction WebGLLights(extensions, capabilities) {\n\t\tconst cache = new UniformsCache();\n\t\tconst shadowCache = ShadowUniformsCache();\n\t\tconst state = {\n\t\t\tversion: 0,\n\t\t\thash: {\n\t\t\t\tdirectionalLength: -1,\n\t\t\t\tpointLength: -1,\n\t\t\t\tspotLength: -1,\n\t\t\t\trectAreaLength: -1,\n\t\t\t\themiLength: -1,\n\t\t\t\tnumDirectionalShadows: -1,\n\t\t\t\tnumPointShadows: -1,\n\t\t\t\tnumSpotShadows: -1\n\t\t\t},\n\t\t\tambient: [0, 0, 0],\n\t\t\tprobe: [],\n\t\t\tdirectional: [],\n\t\t\tdirectionalShadow: [],\n\t\t\tdirectionalShadowMap: [],\n\t\t\tdirectionalShadowMatrix: [],\n\t\t\tspot: [],\n\t\t\tspotShadow: [],\n\t\t\tspotShadowMap: [],\n\t\t\tspotShadowMatrix: [],\n\t\t\trectArea: [],\n\t\t\trectAreaLTC1: null,\n\t\t\trectAreaLTC2: null,\n\t\t\tpoint: [],\n\t\t\tpointShadow: [],\n\t\t\tpointShadowMap: [],\n\t\t\tpointShadowMatrix: [],\n\t\t\themi: []\n\t\t};\n\n\t\tfor (let i = 0; i < 9; i++) state.probe.push(new Vector3());\n\n\t\tconst vector3 = new Vector3();\n\t\tconst matrix4 = new Matrix4();\n\t\tconst matrix42 = new Matrix4();\n\n\t\tfunction setup(lights, physicallyCorrectLights) {\n\t\t\tlet r = 0,\n\t\t\t\t\tg = 0,\n\t\t\t\t\tb = 0;\n\n\t\t\tfor (let i = 0; i < 9; i++) state.probe[i].set(0, 0, 0);\n\n\t\t\tlet directionalLength = 0;\n\t\t\tlet pointLength = 0;\n\t\t\tlet spotLength = 0;\n\t\t\tlet rectAreaLength = 0;\n\t\t\tlet hemiLength = 0;\n\t\t\tlet numDirectionalShadows = 0;\n\t\t\tlet numPointShadows = 0;\n\t\t\tlet numSpotShadows = 0;\n\t\t\tlights.sort(shadowCastingLightsFirst); // artist-friendly light intensity scaling factor\n\n\t\t\tconst scaleFactor = physicallyCorrectLights !== true ? Math.PI : 1;\n\n\t\t\tfor (let i = 0, l = lights.length; i < l; i++) {\n\t\t\t\tconst light = lights[i];\n\t\t\t\tconst color = light.color;\n\t\t\t\tconst intensity = light.intensity;\n\t\t\t\tconst distance = light.distance;\n\t\t\t\tconst shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\n\n\t\t\t\tif (light.isAmbientLight) {\n\t\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\t\tb += color.b * intensity * scaleFactor;\n\t\t\t\t} else if (light.isLightProbe) {\n\t\t\t\t\tfor (let j = 0; j < 9; j++) {\n\t\t\t\t\t\tstate.probe[j].addScaledVector(light.sh.coefficients[j], intensity);\n\t\t\t\t\t}\n\t\t\t\t} else if (light.isDirectionalLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.color.copy(light.color).multiplyScalar(light.intensity * scaleFactor);\n\n\t\t\t\t\tif (light.castShadow) {\n\t\t\t\t\t\tconst shadow = light.shadow;\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tstate.directionalShadow[directionalLength] = shadowUniforms;\n\t\t\t\t\t\tstate.directionalShadowMap[directionalLength] = shadowMap;\n\t\t\t\t\t\tstate.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n\t\t\t\t\t\tnumDirectionalShadows++;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.directional[directionalLength] = uniforms;\n\t\t\t\t\tdirectionalLength++;\n\t\t\t\t} else if (light.isSpotLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.color.copy(color).multiplyScalar(intensity * scaleFactor);\n\t\t\t\t\tuniforms.distance = distance;\n\t\t\t\t\tuniforms.coneCos = Math.cos(light.angle);\n\t\t\t\t\tuniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n\t\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\t\tif (light.castShadow) {\n\t\t\t\t\t\tconst shadow = light.shadow;\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tstate.spotShadow[spotLength] = shadowUniforms;\n\t\t\t\t\t\tstate.spotShadowMap[spotLength] = shadowMap;\n\t\t\t\t\t\tstate.spotShadowMatrix[spotLength] = light.shadow.matrix;\n\t\t\t\t\t\tnumSpotShadows++;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.spot[spotLength] = uniforms;\n\t\t\t\t\tspotLength++;\n\t\t\t\t} else if (light.isRectAreaLight) {\n\t\t\t\t\tconst uniforms = cache.get(light); // (a) intensity is the total visible light emitted\n\t\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\t\t\t\t\t// (b) intensity is the brightness of the light\n\n\t\t\t\t\tuniforms.color.copy(color).multiplyScalar(intensity);\n\t\t\t\t\tuniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n\t\t\t\t\tuniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n\t\t\t\t\tstate.rectArea[rectAreaLength] = uniforms;\n\t\t\t\t\trectAreaLength++;\n\t\t\t\t} else if (light.isPointLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.color.copy(light.color).multiplyScalar(light.intensity * scaleFactor);\n\t\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\t\tif (light.castShadow) {\n\t\t\t\t\t\tconst shadow = light.shadow;\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\t\t\t\t\t\tstate.pointShadow[pointLength] = shadowUniforms;\n\t\t\t\t\t\tstate.pointShadowMap[pointLength] = shadowMap;\n\t\t\t\t\t\tstate.pointShadowMatrix[pointLength] = light.shadow.matrix;\n\t\t\t\t\t\tnumPointShadows++;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.point[pointLength] = uniforms;\n\t\t\t\t\tpointLength++;\n\t\t\t\t} else if (light.isHemisphereLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.skyColor.copy(light.color).multiplyScalar(intensity * scaleFactor);\n\t\t\t\t\tuniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity * scaleFactor);\n\t\t\t\t\tstate.hemi[hemiLength] = uniforms;\n\t\t\t\t\themiLength++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (rectAreaLength > 0) {\n\t\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t\t// WebGL 2\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\t\t\t\t} else {\n\t\t\t\t\t// WebGL 1\n\t\t\t\t\tif (extensions.has('OES_texture_float_linear') === true) {\n\t\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\t\t\t\t\t} else if (extensions.has('OES_texture_half_float_linear') === true) {\n\t\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.ambient[0] = r;\n\t\t\tstate.ambient[1] = g;\n\t\t\tstate.ambient[2] = b;\n\t\t\tconst hash = state.hash;\n\n\t\t\tif (hash.directionalLength !== directionalLength || hash.pointLength !== pointLength || hash.spotLength !== spotLength || hash.rectAreaLength !== rectAreaLength || hash.hemiLength !== hemiLength || hash.numDirectionalShadows !== numDirectionalShadows || hash.numPointShadows !== numPointShadows || hash.numSpotShadows !== numSpotShadows) {\n\t\t\t\tstate.directional.length = directionalLength;\n\t\t\t\tstate.spot.length = spotLength;\n\t\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\t\tstate.point.length = pointLength;\n\t\t\t\tstate.hemi.length = hemiLength;\n\t\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\t\t\t\thash.directionalLength = directionalLength;\n\t\t\t\thash.pointLength = pointLength;\n\t\t\t\thash.spotLength = spotLength;\n\t\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\t\thash.hemiLength = hemiLength;\n\t\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\t\thash.numPointShadows = numPointShadows;\n\t\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\t\tstate.version = nextVersion++;\n\t\t\t}\n\t\t}\n\n\t\tfunction setupView(lights, camera) {\n\t\t\tlet directionalLength = 0;\n\t\t\tlet pointLength = 0;\n\t\t\tlet spotLength = 0;\n\t\t\tlet rectAreaLength = 0;\n\t\t\tlet hemiLength = 0;\n\t\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\t\tfor (let i = 0, l = lights.length; i < l; i++) {\n\t\t\t\tconst light = lights[i];\n\n\t\t\t\tif (light.isDirectionalLight) {\n\t\t\t\t\tconst uniforms = state.directional[directionalLength];\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tvector3.setFromMatrixPosition(light.target.matrixWorld);\n\t\t\t\t\tuniforms.direction.sub(vector3);\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\n\t\t\t\t\tdirectionalLength++;\n\t\t\t\t} else if (light.isSpotLight) {\n\t\t\t\t\tconst uniforms = state.spot[spotLength];\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix);\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tvector3.setFromMatrixPosition(light.target.matrixWorld);\n\t\t\t\t\tuniforms.direction.sub(vector3);\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\n\t\t\t\t\tspotLength++;\n\t\t\t\t} else if (light.isRectAreaLight) {\n\t\t\t\t\tconst uniforms = state.rectArea[rectAreaLength];\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix); // extract local rotation of light to derive width/height half vectors\n\n\t\t\t\t\tmatrix42.identity();\n\t\t\t\t\tmatrix4.copy(light.matrixWorld);\n\t\t\t\t\tmatrix4.premultiply(viewMatrix);\n\t\t\t\t\tmatrix42.extractRotation(matrix4);\n\t\t\t\t\tuniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n\t\t\t\t\tuniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n\t\t\t\t\tuniforms.halfWidth.applyMatrix4(matrix42);\n\t\t\t\t\tuniforms.halfHeight.applyMatrix4(matrix42);\n\t\t\t\t\trectAreaLength++;\n\t\t\t\t} else if (light.isPointLight) {\n\t\t\t\t\tconst uniforms = state.point[pointLength];\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix);\n\t\t\t\t\tpointLength++;\n\t\t\t\t} else if (light.isHemisphereLight) {\n\t\t\t\t\tconst uniforms = state.hemi[hemiLength];\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\n\t\t\t\t\tuniforms.direction.normalize();\n\t\t\t\t\themiLength++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\tsetupView: setupView,\n\t\t\tstate: state\n\t\t};\n\t}\n\n\tfunction WebGLRenderState(extensions, capabilities) {\n\t\tconst lights = new WebGLLights(extensions, capabilities);\n\t\tconst lightsArray = [];\n\t\tconst shadowsArray = [];\n\n\t\tfunction init() {\n\t\t\tlightsArray.length = 0;\n\t\t\tshadowsArray.length = 0;\n\t\t}\n\n\t\tfunction pushLight(light) {\n\t\t\tlightsArray.push(light);\n\t\t}\n\n\t\tfunction pushShadow(shadowLight) {\n\t\t\tshadowsArray.push(shadowLight);\n\t\t}\n\n\t\tfunction setupLights(physicallyCorrectLights) {\n\t\t\tlights.setup(lightsArray, physicallyCorrectLights);\n\t\t}\n\n\t\tfunction setupLightsView(camera) {\n\t\t\tlights.setupView(lightsArray, camera);\n\t\t}\n\n\t\tconst state = {\n\t\t\tlightsArray: lightsArray,\n\t\t\tshadowsArray: shadowsArray,\n\t\t\tlights: lights\n\t\t};\n\t\treturn {\n\t\t\tinit: init,\n\t\t\tstate: state,\n\t\t\tsetupLights: setupLights,\n\t\t\tsetupLightsView: setupLightsView,\n\t\t\tpushLight: pushLight,\n\t\t\tpushShadow: pushShadow\n\t\t};\n\t}\n\n\tfunction WebGLRenderStates(extensions, capabilities) {\n\t\tlet renderStates = new WeakMap();\n\n\t\tfunction get(scene, renderCallDepth = 0) {\n\t\t\tlet renderState;\n\n\t\t\tif (renderStates.has(scene) === false) {\n\t\t\t\trenderState = new WebGLRenderState(extensions, capabilities);\n\t\t\t\trenderStates.set(scene, [renderState]);\n\t\t\t} else {\n\t\t\t\tif (renderCallDepth >= renderStates.get(scene).length) {\n\t\t\t\t\trenderState = new WebGLRenderState(extensions, capabilities);\n\t\t\t\t\trenderStates.get(scene).push(renderState);\n\t\t\t\t} else {\n\t\t\t\t\trenderState = renderStates.get(scene)[renderCallDepth];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn renderState;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\trenderStates = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\t/**\n\t * parameters = {\n\t *\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>\n\t * }\n\t */\n\n\tclass MeshDepthMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshDepthMaterial';\n\t\t\tthis.depthPacking = BasicDepthPacking;\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.fog = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.depthPacking = source.depthPacking;\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\n\t *\treferencePosition: <float>,\n\t *\tnearDistance: <float>,\n\t *\tfarDistance: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>\n\t *\n\t * }\n\t */\n\n\tclass MeshDistanceMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshDistanceMaterial';\n\t\t\tthis.referencePosition = new Vector3();\n\t\t\tthis.nearDistance = 1;\n\t\t\tthis.farDistance = 1000;\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.fog = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.referencePosition.copy(source.referencePosition);\n\t\t\tthis.nearDistance = source.nearDistance;\n\t\t\tthis.farDistance = source.farDistance;\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\n\tconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\tconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\n\tfunction WebGLShadowMap(_renderer, _objects, _capabilities) {\n\t\tlet _frustum = new Frustum();\n\n\t\tconst _shadowMapSize = new Vector2(),\n\t\t\t\t\t_viewportSize = new Vector2(),\n\t\t\t\t\t_viewport = new Vector4(),\n\t\t\t\t\t_depthMaterial = new MeshDepthMaterial({\n\t\t\tdepthPacking: RGBADepthPacking\n\t\t}),\n\t\t\t\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\t\t\t\t\t_materialCache = {},\n\t\t\t\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\t\tconst shadowSide = {\n\t\t\t0: BackSide,\n\t\t\t1: FrontSide,\n\t\t\t2: DoubleSide\n\t\t};\n\t\tconst shadowMaterialVertical = new ShaderMaterial({\n\t\t\tdefines: {\n\t\t\t\tVSM_SAMPLES: 8\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\tshadow_pass: {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\tresolution: {\n\t\t\t\t\tvalue: new Vector2()\n\t\t\t\t},\n\t\t\t\tradius: {\n\t\t\t\t\tvalue: 4.0\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: vertex,\n\t\t\tfragmentShader: fragment\n\t\t});\n\t\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\t\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\t\tconst fullScreenTri = new BufferGeometry();\n\t\tfullScreenTri.setAttribute('position', new BufferAttribute(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3));\n\t\tconst fullScreenMesh = new Mesh(fullScreenTri, shadowMaterialVertical);\n\t\tconst scope = this;\n\t\tthis.enabled = false;\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\t\tthis.type = PCFShadowMap;\n\n\t\tthis.render = function (lights, scene, camera) {\n\t\t\tif (scope.enabled === false) return;\n\t\t\tif (scope.autoUpdate === false && scope.needsUpdate === false) return;\n\t\t\tif (lights.length === 0) return;\n\n\t\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\n\t\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\n\t\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\t\tconst _state = _renderer.state; // Set GL state for depth map.\n\n\t\t\t_state.setBlending(NoBlending);\n\n\t\t\t_state.buffers.color.setClear(1, 1, 1, 1);\n\n\t\t\t_state.buffers.depth.setTest(true);\n\n\t\t\t_state.setScissorTest(false); // render depth map\n\n\n\t\t\tfor (let i = 0, il = lights.length; i < il; i++) {\n\t\t\t\tconst light = lights[i];\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif (shadow === undefined) {\n\t\t\t\t\tconsole.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (shadow.autoUpdate === false && shadow.needsUpdate === false) continue;\n\n\t\t\t\t_shadowMapSize.copy(shadow.mapSize);\n\n\t\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t\t_shadowMapSize.multiply(shadowFrameExtents);\n\n\t\t\t\t_viewportSize.copy(shadow.mapSize);\n\n\t\t\t\tif (_shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize) {\n\t\t\t\t\tif (_shadowMapSize.x > _maxTextureSize) {\n\t\t\t\t\t\t_viewportSize.x = Math.floor(_maxTextureSize / shadowFrameExtents.x);\n\t\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_shadowMapSize.y > _maxTextureSize) {\n\t\t\t\t\t\t_viewportSize.y = Math.floor(_maxTextureSize / shadowFrameExtents.y);\n\t\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (shadow.map === null && !shadow.isPointLightShadow && this.type === VSMShadowMap) {\n\t\t\t\t\tconst pars = {\n\t\t\t\t\t\tminFilter: LinearFilter,\n\t\t\t\t\t\tmagFilter: LinearFilter,\n\t\t\t\t\t\tformat: RGBAFormat\n\t\t\t\t\t};\n\t\t\t\t\tshadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n\t\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\t\t\t\t\tshadow.mapPass = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\t\t\t\t}\n\n\t\t\t\tif (shadow.map === null) {\n\t\t\t\t\tconst pars = {\n\t\t\t\t\t\tminFilter: NearestFilter,\n\t\t\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\t\t\tformat: RGBAFormat\n\t\t\t\t\t};\n\t\t\t\t\tshadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n\t\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\t\t\t\t}\n\n\t\t\t\t_renderer.setRenderTarget(shadow.map);\n\n\t\t\t\t_renderer.clear();\n\n\t\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\t\tfor (let vp = 0; vp < viewportCount; vp++) {\n\t\t\t\t\tconst viewport = shadow.getViewport(vp);\n\n\t\t\t\t\t_viewport.set(_viewportSize.x * viewport.x, _viewportSize.y * viewport.y, _viewportSize.x * viewport.z, _viewportSize.y * viewport.w);\n\n\t\t\t\t\t_state.viewport(_viewport);\n\n\t\t\t\t\tshadow.updateMatrices(light, vp);\n\t\t\t\t\t_frustum = shadow.getFrustum();\n\t\t\t\t\trenderObject(scene, camera, shadow.camera, light, this.type);\n\t\t\t\t} // do blur pass for VSM\n\n\n\t\t\t\tif (!shadow.isPointLightShadow && this.type === VSMShadowMap) {\n\t\t\t\t\tVSMPass(shadow, camera);\n\t\t\t\t}\n\n\t\t\t\tshadow.needsUpdate = false;\n\t\t\t}\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t\t_renderer.setRenderTarget(currentRenderTarget, activeCubeFace, activeMipmapLevel);\n\t\t};\n\n\t\tfunction VSMPass(shadow, camera) {\n\t\t\tconst geometry = _objects.update(fullScreenMesh);\n\n\t\t\tif (shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples) {\n\t\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\t\t\t} // vertical pass\n\n\n\t\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\n\t\t\t_renderer.setRenderTarget(shadow.mapPass);\n\n\t\t\t_renderer.clear();\n\n\t\t\t_renderer.renderBufferDirect(camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null); // horizontal pass\n\n\n\t\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\n\t\t\t_renderer.setRenderTarget(shadow.map);\n\n\t\t\t_renderer.clear();\n\n\t\t\t_renderer.renderBufferDirect(camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null);\n\t\t}\n\n\t\tfunction getDepthMaterial(object, geometry, material, light, shadowCameraNear, shadowCameraFar, type) {\n\t\t\tlet result = null;\n\t\t\tconst customMaterial = light.isPointLight === true ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\t\tif (customMaterial !== undefined) {\n\t\t\t\tresult = customMaterial;\n\t\t\t} else {\n\t\t\t\tresult = light.isPointLight === true ? _distanceMaterial : _depthMaterial;\n\t\t\t}\n\n\t\t\tif (_renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0 || material.displacementMap && material.displacementScale !== 0 || material.alphaMap && material.alphaTest > 0) {\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\t\t\t\tconst keyA = result.uuid,\n\t\t\t\t\t\t\tkeyB = material.uuid;\n\t\t\t\tlet materialsForVariant = _materialCache[keyA];\n\n\t\t\t\tif (materialsForVariant === undefined) {\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[keyA] = materialsForVariant;\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[keyB];\n\n\t\t\t\tif (cachedMaterial === undefined) {\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[keyB] = cachedMaterial;\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tif (type === VSMShadowMap) {\n\t\t\t\tresult.side = material.shadowSide !== null ? material.shadowSide : material.side;\n\t\t\t} else {\n\t\t\t\tresult.side = material.shadowSide !== null ? material.shadowSide : shadowSide[material.side];\n\t\t\t}\n\n\t\t\tresult.alphaMap = material.alphaMap;\n\t\t\tresult.alphaTest = material.alphaTest;\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\t\tresult.clipIntersection = material.clipIntersection;\n\t\t\tresult.displacementMap = material.displacementMap;\n\t\t\tresult.displacementScale = material.displacementScale;\n\t\t\tresult.displacementBias = material.displacementBias;\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif (light.isPointLight === true && result.isMeshDistanceMaterial === true) {\n\t\t\t\tresult.referencePosition.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\t\tresult.farDistance = shadowCameraFar;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction renderObject(object, camera, shadowCamera, light, type) {\n\t\t\tif (object.visible === false) return;\n\t\t\tconst visible = object.layers.test(camera.layers);\n\n\t\t\tif (visible && (object.isMesh || object.isLine || object.isPoints)) {\n\t\t\t\tif ((object.castShadow || object.receiveShadow && type === VSMShadowMap) && (!object.frustumCulled || _frustum.intersectsObject(object))) {\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n\t\t\t\t\tconst geometry = _objects.update(object);\n\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor (let k = 0, kl = groups.length; k < kl; k++) {\n\t\t\t\t\t\t\tconst group = groups[k];\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\n\t\t\t\t\t\t\tif (groupMaterial && groupMaterial.visible) {\n\t\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial(object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type);\n\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (material.visible) {\n\t\t\t\t\t\tconst depthMaterial = getDepthMaterial(object, geometry, material, light, shadowCamera.near, shadowCamera.far, type);\n\n\t\t\t\t\t\t_renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\trenderObject(children[i], camera, shadowCamera, light, type);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction WebGLState(gl, extensions, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction ColorBuffer() {\n\t\t\tlet locked = false;\n\t\t\tconst color = new Vector4();\n\t\t\tlet currentColorMask = null;\n\t\t\tconst currentColorClear = new Vector4(0, 0, 0, 0);\n\t\t\treturn {\n\t\t\t\tsetMask: function (colorMask) {\n\t\t\t\t\tif (currentColorMask !== colorMask && !locked) {\n\t\t\t\t\t\tgl.colorMask(colorMask, colorMask, colorMask, colorMask);\n\t\t\t\t\t\tcurrentColorMask = colorMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetLocked: function (lock) {\n\t\t\t\t\tlocked = lock;\n\t\t\t\t},\n\t\t\t\tsetClear: function (r, g, b, a, premultipliedAlpha) {\n\t\t\t\t\tif (premultipliedAlpha === true) {\n\t\t\t\t\t\tr *= a;\n\t\t\t\t\t\tg *= a;\n\t\t\t\t\t\tb *= a;\n\t\t\t\t\t}\n\n\t\t\t\t\tcolor.set(r, g, b, a);\n\n\t\t\t\t\tif (currentColorClear.equals(color) === false) {\n\t\t\t\t\t\tgl.clearColor(r, g, b, a);\n\t\t\t\t\t\tcurrentColorClear.copy(color);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treset: function () {\n\t\t\t\t\tlocked = false;\n\t\t\t\t\tcurrentColorMask = null;\n\t\t\t\t\tcurrentColorClear.set(-1, 0, 0, 0); // set to invalid state\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction DepthBuffer() {\n\t\t\tlet locked = false;\n\t\t\tlet currentDepthMask = null;\n\t\t\tlet currentDepthFunc = null;\n\t\t\tlet currentDepthClear = null;\n\t\t\treturn {\n\t\t\t\tsetTest: function (depthTest) {\n\t\t\t\t\tif (depthTest) {\n\t\t\t\t\t\tenable(gl.DEPTH_TEST);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdisable(gl.DEPTH_TEST);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetMask: function (depthMask) {\n\t\t\t\t\tif (currentDepthMask !== depthMask && !locked) {\n\t\t\t\t\t\tgl.depthMask(depthMask);\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetFunc: function (depthFunc) {\n\t\t\t\t\tif (currentDepthFunc !== depthFunc) {\n\t\t\t\t\t\tif (depthFunc) {\n\t\t\t\t\t\t\tswitch (depthFunc) {\n\t\t\t\t\t\t\t\tcase NeverDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.NEVER);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.ALWAYS);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LESS);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase EqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.EQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.GEQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.GREATER);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.NOTEQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetLocked: function (lock) {\n\t\t\t\t\tlocked = lock;\n\t\t\t\t},\n\t\t\t\tsetClear: function (depth) {\n\t\t\t\t\tif (currentDepthClear !== depth) {\n\t\t\t\t\t\tgl.clearDepth(depth);\n\t\t\t\t\t\tcurrentDepthClear = depth;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treset: function () {\n\t\t\t\t\tlocked = false;\n\t\t\t\t\tcurrentDepthMask = null;\n\t\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\t\tcurrentDepthClear = null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction StencilBuffer() {\n\t\t\tlet locked = false;\n\t\t\tlet currentStencilMask = null;\n\t\t\tlet currentStencilFunc = null;\n\t\t\tlet currentStencilRef = null;\n\t\t\tlet currentStencilFuncMask = null;\n\t\t\tlet currentStencilFail = null;\n\t\t\tlet currentStencilZFail = null;\n\t\t\tlet currentStencilZPass = null;\n\t\t\tlet currentStencilClear = null;\n\t\t\treturn {\n\t\t\t\tsetTest: function (stencilTest) {\n\t\t\t\t\tif (!locked) {\n\t\t\t\t\t\tif (stencilTest) {\n\t\t\t\t\t\t\tenable(gl.STENCIL_TEST);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdisable(gl.STENCIL_TEST);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetMask: function (stencilMask) {\n\t\t\t\t\tif (currentStencilMask !== stencilMask && !locked) {\n\t\t\t\t\t\tgl.stencilMask(stencilMask);\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetFunc: function (stencilFunc, stencilRef, stencilMask) {\n\t\t\t\t\tif (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\n\t\t\t\t\t\tgl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetOp: function (stencilFail, stencilZFail, stencilZPass) {\n\t\t\t\t\tif (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n\t\t\t\t\t\tgl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetLocked: function (lock) {\n\t\t\t\t\tlocked = lock;\n\t\t\t\t},\n\t\t\t\tsetClear: function (stencil) {\n\t\t\t\t\tif (currentStencilClear !== stencil) {\n\t\t\t\t\t\tgl.clearStencil(stencil);\n\t\t\t\t\t\tcurrentStencilClear = stencil;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treset: function () {\n\t\t\t\t\tlocked = false;\n\t\t\t\t\tcurrentStencilMask = null;\n\t\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\t\tcurrentStencilRef = null;\n\t\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\t\tcurrentStencilFail = null;\n\t\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\t\tcurrentStencilClear = null;\n\t\t\t\t}\n\t\t\t};\n\t\t} //\n\n\n\t\tconst colorBuffer = new ColorBuffer();\n\t\tconst depthBuffer = new DepthBuffer();\n\t\tconst stencilBuffer = new StencilBuffer();\n\t\tlet enabledCapabilities = {};\n\t\tlet currentBoundFramebuffers = {};\n\t\tlet currentDrawbuffers = new WeakMap();\n\t\tlet defaultDrawbuffers = [];\n\t\tlet currentProgram = null;\n\t\tlet currentBlendingEnabled = false;\n\t\tlet currentBlending = null;\n\t\tlet currentBlendEquation = null;\n\t\tlet currentBlendSrc = null;\n\t\tlet currentBlendDst = null;\n\t\tlet currentBlendEquationAlpha = null;\n\t\tlet currentBlendSrcAlpha = null;\n\t\tlet currentBlendDstAlpha = null;\n\t\tlet currentPremultipledAlpha = false;\n\t\tlet currentFlipSided = null;\n\t\tlet currentCullFace = null;\n\t\tlet currentLineWidth = null;\n\t\tlet currentPolygonOffsetFactor = null;\n\t\tlet currentPolygonOffsetUnits = null;\n\t\tconst maxTextures = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n\t\tlet lineWidthAvailable = false;\n\t\tlet version = 0;\n\t\tconst glVersion = gl.getParameter(gl.VERSION);\n\n\t\tif (glVersion.indexOf('WebGL') !== -1) {\n\t\t\tversion = parseFloat(/^WebGL (\\d)/.exec(glVersion)[1]);\n\t\t\tlineWidthAvailable = version >= 1.0;\n\t\t} else if (glVersion.indexOf('OpenGL ES') !== -1) {\n\t\t\tversion = parseFloat(/^OpenGL ES (\\d)/.exec(glVersion)[1]);\n\t\t\tlineWidthAvailable = version >= 2.0;\n\t\t}\n\n\t\tlet currentTextureSlot = null;\n\t\tlet currentBoundTextures = {};\n\t\tconst scissorParam = gl.getParameter(gl.SCISSOR_BOX);\n\t\tconst viewportParam = gl.getParameter(gl.VIEWPORT);\n\t\tconst currentScissor = new Vector4().fromArray(scissorParam);\n\t\tconst currentViewport = new Vector4().fromArray(viewportParam);\n\n\t\tfunction createTexture(type, target, count) {\n\t\t\tconst data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\n\n\t\t\tconst texture = gl.createTexture();\n\t\t\tgl.bindTexture(type, texture);\n\t\t\tgl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tgl.texImage2D(target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tconst emptyTextures = {};\n\t\temptyTextures[gl.TEXTURE_2D] = createTexture(gl.TEXTURE_2D, gl.TEXTURE_2D, 1);\n\t\temptyTextures[gl.TEXTURE_CUBE_MAP] = createTexture(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6); // init\n\n\t\tcolorBuffer.setClear(0, 0, 0, 1);\n\t\tdepthBuffer.setClear(1);\n\t\tstencilBuffer.setClear(0);\n\t\tenable(gl.DEPTH_TEST);\n\t\tdepthBuffer.setFunc(LessEqualDepth);\n\t\tsetFlipSided(false);\n\t\tsetCullFace(CullFaceBack);\n\t\tenable(gl.CULL_FACE);\n\t\tsetBlending(NoBlending); //\n\n\t\tfunction enable(id) {\n\t\t\tif (enabledCapabilities[id] !== true) {\n\t\t\t\tgl.enable(id);\n\t\t\t\tenabledCapabilities[id] = true;\n\t\t\t}\n\t\t}\n\n\t\tfunction disable(id) {\n\t\t\tif (enabledCapabilities[id] !== false) {\n\t\t\t\tgl.disable(id);\n\t\t\t\tenabledCapabilities[id] = false;\n\t\t\t}\n\t\t}\n\n\t\tfunction bindFramebuffer(target, framebuffer) {\n\t\t\tif (currentBoundFramebuffers[target] !== framebuffer) {\n\t\t\t\tgl.bindFramebuffer(target, framebuffer);\n\t\t\t\tcurrentBoundFramebuffers[target] = framebuffer;\n\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\t\t\t\t\tif (target === gl.DRAW_FRAMEBUFFER) {\n\t\t\t\t\t\tcurrentBoundFramebuffers[gl.FRAMEBUFFER] = framebuffer;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target === gl.FRAMEBUFFER) {\n\t\t\t\t\t\tcurrentBoundFramebuffers[gl.DRAW_FRAMEBUFFER] = framebuffer;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction drawBuffers(renderTarget, framebuffer) {\n\t\t\tlet drawBuffers = defaultDrawbuffers;\n\t\t\tlet needsUpdate = false;\n\n\t\t\tif (renderTarget) {\n\t\t\t\tdrawBuffers = currentDrawbuffers.get(framebuffer);\n\n\t\t\t\tif (drawBuffers === undefined) {\n\t\t\t\t\tdrawBuffers = [];\n\t\t\t\t\tcurrentDrawbuffers.set(framebuffer, drawBuffers);\n\t\t\t\t}\n\n\t\t\t\tif (renderTarget.isWebGLMultipleRenderTargets) {\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tif (drawBuffers.length !== textures.length || drawBuffers[0] !== gl.COLOR_ATTACHMENT0) {\n\t\t\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\t\t\t\tdrawBuffers[i] = gl.COLOR_ATTACHMENT0 + i;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdrawBuffers.length = textures.length;\n\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (drawBuffers[0] !== gl.COLOR_ATTACHMENT0) {\n\t\t\t\t\t\tdrawBuffers[0] = gl.COLOR_ATTACHMENT0;\n\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (drawBuffers[0] !== gl.BACK) {\n\t\t\t\t\tdrawBuffers[0] = gl.BACK;\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (needsUpdate) {\n\t\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t\tgl.drawBuffers(drawBuffers);\n\t\t\t\t} else {\n\t\t\t\t\textensions.get('WEBGL_draw_buffers').drawBuffersWEBGL(drawBuffers);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction useProgram(program) {\n\t\t\tif (currentProgram !== program) {\n\t\t\t\tgl.useProgram(program);\n\t\t\t\tcurrentProgram = program;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tconst equationToGL = {\n\t\t\t[AddEquation]: gl.FUNC_ADD,\n\t\t\t[SubtractEquation]: gl.FUNC_SUBTRACT,\n\t\t\t[ReverseSubtractEquation]: gl.FUNC_REVERSE_SUBTRACT\n\t\t};\n\n\t\tif (isWebGL2) {\n\t\t\tequationToGL[MinEquation] = gl.MIN;\n\t\t\tequationToGL[MaxEquation] = gl.MAX;\n\t\t} else {\n\t\t\tconst extension = extensions.get('EXT_blend_minmax');\n\n\t\t\tif (extension !== null) {\n\t\t\t\tequationToGL[MinEquation] = extension.MIN_EXT;\n\t\t\t\tequationToGL[MaxEquation] = extension.MAX_EXT;\n\t\t\t}\n\t\t}\n\n\t\tconst factorToGL = {\n\t\t\t[ZeroFactor]: gl.ZERO,\n\t\t\t[OneFactor]: gl.ONE,\n\t\t\t[SrcColorFactor]: gl.SRC_COLOR,\n\t\t\t[SrcAlphaFactor]: gl.SRC_ALPHA,\n\t\t\t[SrcAlphaSaturateFactor]: gl.SRC_ALPHA_SATURATE,\n\t\t\t[DstColorFactor]: gl.DST_COLOR,\n\t\t\t[DstAlphaFactor]: gl.DST_ALPHA,\n\t\t\t[OneMinusSrcColorFactor]: gl.ONE_MINUS_SRC_COLOR,\n\t\t\t[OneMinusSrcAlphaFactor]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t\t[OneMinusDstColorFactor]: gl.ONE_MINUS_DST_COLOR,\n\t\t\t[OneMinusDstAlphaFactor]: gl.ONE_MINUS_DST_ALPHA\n\t\t};\n\n\t\tfunction setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n\t\t\tif (blending === NoBlending) {\n\t\t\t\tif (currentBlendingEnabled === true) {\n\t\t\t\t\tdisable(gl.BLEND);\n\t\t\t\t\tcurrentBlendingEnabled = false;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (currentBlendingEnabled === false) {\n\t\t\t\tenable(gl.BLEND);\n\t\t\t\tcurrentBlendingEnabled = true;\n\t\t\t}\n\n\t\t\tif (blending !== CustomBlending) {\n\t\t\t\tif (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n\t\t\t\t\tif (currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation) {\n\t\t\t\t\t\tgl.blendEquation(gl.FUNC_ADD);\n\t\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (premultipliedAlpha) {\n\t\t\t\t\t\tswitch (blending) {\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ONE, gl.ONE);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error('THREE.WebGLState: Invalid blending: ', blending);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tswitch (blending) {\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error('THREE.WebGLState: Invalid blending: ', blending);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\t\tcurrentBlendDst = null;\n\t\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\t\tcurrentBlending = blending;\n\t\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t} // custom blending\n\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n\t\t\t\tgl.blendEquationSeparate(equationToGL[blendEquation], equationToGL[blendEquationAlpha]);\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\t\t\t}\n\n\t\t\tif (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n\t\t\t\tgl.blendFuncSeparate(factorToGL[blendSrc], factorToGL[blendDst], factorToGL[blendSrcAlpha], factorToGL[blendDstAlpha]);\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\t\t\t}\n\n\t\t\tcurrentBlending = blending;\n\t\t\tcurrentPremultipledAlpha = null;\n\t\t}\n\n\t\tfunction setMaterial(material, frontFaceCW) {\n\t\t\tmaterial.side === DoubleSide ? disable(gl.CULL_FACE) : enable(gl.CULL_FACE);\n\t\t\tlet flipSided = material.side === BackSide;\n\t\t\tif (frontFaceCW) flipSided = !flipSided;\n\t\t\tsetFlipSided(flipSided);\n\t\t\tmaterial.blending === NormalBlending && material.transparent === false ? setBlending(NoBlending) : setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n\t\t\tdepthBuffer.setFunc(material.depthFunc);\n\t\t\tdepthBuffer.setTest(material.depthTest);\n\t\t\tdepthBuffer.setMask(material.depthWrite);\n\t\t\tcolorBuffer.setMask(material.colorWrite);\n\t\t\tconst stencilWrite = material.stencilWrite;\n\t\t\tstencilBuffer.setTest(stencilWrite);\n\n\t\t\tif (stencilWrite) {\n\t\t\t\tstencilBuffer.setMask(material.stencilWriteMask);\n\t\t\t\tstencilBuffer.setFunc(material.stencilFunc, material.stencilRef, material.stencilFuncMask);\n\t\t\t\tstencilBuffer.setOp(material.stencilFail, material.stencilZFail, material.stencilZPass);\n\t\t\t}\n\n\t\t\tsetPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n\t\t\tmaterial.alphaToCoverage === true ? enable(gl.SAMPLE_ALPHA_TO_COVERAGE) : disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n\t\t} //\n\n\n\t\tfunction setFlipSided(flipSided) {\n\t\t\tif (currentFlipSided !== flipSided) {\n\t\t\t\tif (flipSided) {\n\t\t\t\t\tgl.frontFace(gl.CW);\n\t\t\t\t} else {\n\t\t\t\t\tgl.frontFace(gl.CCW);\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\t\t\t}\n\t\t}\n\n\t\tfunction setCullFace(cullFace) {\n\t\t\tif (cullFace !== CullFaceNone) {\n\t\t\t\tenable(gl.CULL_FACE);\n\n\t\t\t\tif (cullFace !== currentCullFace) {\n\t\t\t\t\tif (cullFace === CullFaceBack) {\n\t\t\t\t\t\tgl.cullFace(gl.BACK);\n\t\t\t\t\t} else if (cullFace === CullFaceFront) {\n\t\t\t\t\t\tgl.cullFace(gl.FRONT);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgl.cullFace(gl.FRONT_AND_BACK);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdisable(gl.CULL_FACE);\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\t\t}\n\n\t\tfunction setLineWidth(width) {\n\t\t\tif (width !== currentLineWidth) {\n\t\t\t\tif (lineWidthAvailable) gl.lineWidth(width);\n\t\t\t\tcurrentLineWidth = width;\n\t\t\t}\n\t\t}\n\n\t\tfunction setPolygonOffset(polygonOffset, factor, units) {\n\t\t\tif (polygonOffset) {\n\t\t\t\tenable(gl.POLYGON_OFFSET_FILL);\n\n\t\t\t\tif (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\n\t\t\t\t\tgl.polygonOffset(factor, units);\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdisable(gl.POLYGON_OFFSET_FILL);\n\t\t\t}\n\t\t}\n\n\t\tfunction setScissorTest(scissorTest) {\n\t\t\tif (scissorTest) {\n\t\t\t\tenable(gl.SCISSOR_TEST);\n\t\t\t} else {\n\t\t\t\tdisable(gl.SCISSOR_TEST);\n\t\t\t}\n\t\t} // texture\n\n\n\t\tfunction activeTexture(webglSlot) {\n\t\t\tif (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\tif (currentTextureSlot !== webglSlot) {\n\t\t\t\tgl.activeTexture(webglSlot);\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\t\t\t}\n\t\t}\n\n\t\tfunction bindTexture(webglType, webglTexture) {\n\t\t\tif (currentTextureSlot === null) {\n\t\t\t\tactiveTexture();\n\t\t\t}\n\n\t\t\tlet boundTexture = currentBoundTextures[currentTextureSlot];\n\n\t\t\tif (boundTexture === undefined) {\n\t\t\t\tboundTexture = {\n\t\t\t\t\ttype: undefined,\n\t\t\t\t\ttexture: undefined\n\t\t\t\t};\n\t\t\t\tcurrentBoundTextures[currentTextureSlot] = boundTexture;\n\t\t\t}\n\n\t\t\tif (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n\t\t\t\tgl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\t\t\t}\n\t\t}\n\n\t\tfunction unbindTexture() {\n\t\t\tconst boundTexture = currentBoundTextures[currentTextureSlot];\n\n\t\t\tif (boundTexture !== undefined && boundTexture.type !== undefined) {\n\t\t\t\tgl.bindTexture(boundTexture.type, null);\n\t\t\t\tboundTexture.type = undefined;\n\t\t\t\tboundTexture.texture = undefined;\n\t\t\t}\n\t\t}\n\n\t\tfunction compressedTexImage2D() {\n\t\t\ttry {\n\t\t\t\tgl.compressedTexImage2D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t}\n\n\t\tfunction texSubImage2D() {\n\t\t\ttry {\n\t\t\t\tgl.texSubImage2D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t}\n\n\t\tfunction texSubImage3D() {\n\t\t\ttry {\n\t\t\t\tgl.texSubImage3D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t}\n\n\t\tfunction compressedTexSubImage2D() {\n\t\t\ttry {\n\t\t\t\tgl.compressedTexSubImage2D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t}\n\n\t\tfunction texStorage2D() {\n\t\t\ttry {\n\t\t\t\tgl.texStorage2D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t}\n\n\t\tfunction texStorage3D() {\n\t\t\ttry {\n\t\t\t\tgl.texStorage3D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t}\n\n\t\tfunction texImage2D() {\n\t\t\ttry {\n\t\t\t\tgl.texImage2D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t}\n\n\t\tfunction texImage3D() {\n\t\t\ttry {\n\t\t\t\tgl.texImage3D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t} //\n\n\n\t\tfunction scissor(scissor) {\n\t\t\tif (currentScissor.equals(scissor) === false) {\n\t\t\t\tgl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n\t\t\t\tcurrentScissor.copy(scissor);\n\t\t\t}\n\t\t}\n\n\t\tfunction viewport(viewport) {\n\t\t\tif (currentViewport.equals(viewport) === false) {\n\t\t\t\tgl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n\t\t\t\tcurrentViewport.copy(viewport);\n\t\t\t}\n\t\t} //\n\n\n\t\tfunction reset() {\n\t\t\t// reset state\n\t\t\tgl.disable(gl.BLEND);\n\t\t\tgl.disable(gl.CULL_FACE);\n\t\t\tgl.disable(gl.DEPTH_TEST);\n\t\t\tgl.disable(gl.POLYGON_OFFSET_FILL);\n\t\t\tgl.disable(gl.SCISSOR_TEST);\n\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t\tgl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n\t\t\tgl.blendEquation(gl.FUNC_ADD);\n\t\t\tgl.blendFunc(gl.ONE, gl.ZERO);\n\t\t\tgl.blendFuncSeparate(gl.ONE, gl.ZERO, gl.ONE, gl.ZERO);\n\t\t\tgl.colorMask(true, true, true, true);\n\t\t\tgl.clearColor(0, 0, 0, 0);\n\t\t\tgl.depthMask(true);\n\t\t\tgl.depthFunc(gl.LESS);\n\t\t\tgl.clearDepth(1);\n\t\t\tgl.stencilMask(0xffffffff);\n\t\t\tgl.stencilFunc(gl.ALWAYS, 0, 0xffffffff);\n\t\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\t\t\tgl.clearStencil(0);\n\t\t\tgl.cullFace(gl.BACK);\n\t\t\tgl.frontFace(gl.CCW);\n\t\t\tgl.polygonOffset(0, 0);\n\t\t\tgl.activeTexture(gl.TEXTURE0);\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n\t\t\tif (isWebGL2 === true) {\n\t\t\t\tgl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n\t\t\t\tgl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n\t\t\t}\n\n\t\t\tgl.useProgram(null);\n\t\t\tgl.lineWidth(1);\n\t\t\tgl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n\t\t\tgl.viewport(0, 0, gl.canvas.width, gl.canvas.height); // reset internals\n\n\t\t\tenabledCapabilities = {};\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\t\t\tcurrentBoundFramebuffers = {};\n\t\t\tcurrentDrawbuffers = new WeakMap();\n\t\t\tdefaultDrawbuffers = [];\n\t\t\tcurrentProgram = null;\n\t\t\tcurrentBlendingEnabled = false;\n\t\t\tcurrentBlending = null;\n\t\t\tcurrentBlendEquation = null;\n\t\t\tcurrentBlendSrc = null;\n\t\t\tcurrentBlendDst = null;\n\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\tcurrentBlendDstAlpha = null;\n\t\t\tcurrentPremultipledAlpha = false;\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\t\t\tcurrentLineWidth = null;\n\t\t\tcurrentPolygonOffsetFactor = null;\n\t\t\tcurrentPolygonOffsetUnits = null;\n\t\t\tcurrentScissor.set(0, 0, gl.canvas.width, gl.canvas.height);\n\t\t\tcurrentViewport.set(0, 0, gl.canvas.width, gl.canvas.height);\n\t\t\tcolorBuffer.reset();\n\t\t\tdepthBuffer.reset();\n\t\t\tstencilBuffer.reset();\n\t\t}\n\n\t\treturn {\n\t\t\tbuffers: {\n\t\t\t\tcolor: colorBuffer,\n\t\t\t\tdepth: depthBuffer,\n\t\t\t\tstencil: stencilBuffer\n\t\t\t},\n\t\t\tenable: enable,\n\t\t\tdisable: disable,\n\t\t\tbindFramebuffer: bindFramebuffer,\n\t\t\tdrawBuffers: drawBuffers,\n\t\t\tuseProgram: useProgram,\n\t\t\tsetBlending: setBlending,\n\t\t\tsetMaterial: setMaterial,\n\t\t\tsetFlipSided: setFlipSided,\n\t\t\tsetCullFace: setCullFace,\n\t\t\tsetLineWidth: setLineWidth,\n\t\t\tsetPolygonOffset: setPolygonOffset,\n\t\t\tsetScissorTest: setScissorTest,\n\t\t\tactiveTexture: activeTexture,\n\t\t\tbindTexture: bindTexture,\n\t\t\tunbindTexture: unbindTexture,\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\t\ttexImage2D: texImage2D,\n\t\t\ttexImage3D: texImage3D,\n\t\t\ttexStorage2D: texStorage2D,\n\t\t\ttexStorage3D: texStorage3D,\n\t\t\ttexSubImage2D: texSubImage2D,\n\t\t\ttexSubImage3D: texSubImage3D,\n\t\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\t\tscissor: scissor,\n\t\t\tviewport: viewport,\n\t\t\treset: reset\n\t\t};\n\t}\n\n\tfunction WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tconst maxTextures = capabilities.maxTextures;\n\t\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\t\tconst maxTextureSize = capabilities.maxTextureSize;\n\t\tconst maxSamples = capabilities.maxSamples;\n\t\tconst hasMultisampledRenderToTexture = extensions.has('WEBGL_multisampled_render_to_texture');\n\t\tconst MultisampledRenderToTextureExtension = hasMultisampledRenderToTexture ? extensions.get('WEBGL_multisampled_render_to_texture') : undefined;\n\n\t\tconst _videoTextures = new WeakMap();\n\n\t\tlet _canvas; // cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\n\t\tlet useOffscreenCanvas = false;\n\n\t\ttry {\n\t\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined' && new OffscreenCanvas(1, 1).getContext('2d') !== null;\n\t\t} catch (err) {// Ignore any errors\n\t\t}\n\n\t\tfunction createCanvas(width, height) {\n\t\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\t\t\treturn useOffscreenCanvas ? new OffscreenCanvas(width, height) : createElementNS('canvas');\n\t\t}\n\n\t\tfunction resizeImage(image, needsPowerOfTwo, needsNewCanvas, maxSize) {\n\t\t\tlet scale = 1; // handle case if texture exceeds max size\n\n\t\t\tif (image.width > maxSize || image.height > maxSize) {\n\t\t\t\tscale = maxSize / Math.max(image.width, image.height);\n\t\t\t} // only perform resize if necessary\n\n\n\t\t\tif (scale < 1 || needsPowerOfTwo === true) {\n\t\t\t\t// only perform resize for certain image types\n\t\t\t\tif (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n\t\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\t\t\t\t\tconst width = floor(scale * image.width);\n\t\t\t\t\tconst height = floor(scale * image.height);\n\t\t\t\t\tif (_canvas === undefined) _canvas = createCanvas(width, height); // cube textures can't reuse the same canvas\n\n\t\t\t\t\tconst canvas = needsNewCanvas ? createCanvas(width, height) : _canvas;\n\t\t\t\t\tcanvas.width = width;\n\t\t\t\t\tcanvas.height = height;\n\t\t\t\t\tconst context = canvas.getContext('2d');\n\t\t\t\t\tcontext.drawImage(image, 0, 0, width, height);\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').');\n\t\t\t\t\treturn canvas;\n\t\t\t\t} else {\n\t\t\t\t\tif ('data' in image) {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn image;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn image;\n\t\t}\n\n\t\tfunction isPowerOfTwo$1(image) {\n\t\t\treturn isPowerOfTwo(image.width) && isPowerOfTwo(image.height);\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo(texture) {\n\t\t\tif (isWebGL2) return false;\n\t\t\treturn texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping || texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\t\t}\n\n\t\tfunction textureNeedsGenerateMipmaps(texture, supportsMips) {\n\t\t\treturn texture.generateMipmaps && supportsMips && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\t\t}\n\n\t\tfunction generateMipmap(target) {\n\t\t\t_gl.generateMipmap(target);\n\t\t}\n\n\t\tfunction getInternalFormat(internalFormatName, glFormat, glType, encoding, isVideoTexture = false) {\n\t\t\tif (isWebGL2 === false) return glFormat;\n\n\t\t\tif (internalFormatName !== null) {\n\t\t\t\tif (_gl[internalFormatName] !== undefined) return _gl[internalFormatName];\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'');\n\t\t\t}\n\n\t\t\tlet internalFormat = glFormat;\n\n\t\t\tif (glFormat === _gl.RED) {\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.R32F;\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.R16F;\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.R8;\n\t\t\t}\n\n\t\t\tif (glFormat === _gl.RG) {\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.RG32F;\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.RG16F;\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.RG8;\n\t\t\t}\n\n\t\t\tif (glFormat === _gl.RGBA) {\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.RGBA32F;\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.RGBA16F;\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = encoding === sRGBEncoding && isVideoTexture === false ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\t\tif (glType === _gl.UNSIGNED_SHORT_4_4_4_4) internalFormat = _gl.RGBA4;\n\t\t\t\tif (glType === _gl.UNSIGNED_SHORT_5_5_5_1) internalFormat = _gl.RGB5_A1;\n\t\t\t}\n\n\t\t\tif (internalFormat === _gl.R16F || internalFormat === _gl.R32F || internalFormat === _gl.RG16F || internalFormat === _gl.RG32F || internalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F) {\n\t\t\t\textensions.get('EXT_color_buffer_float');\n\t\t\t}\n\n\t\t\treturn internalFormat;\n\t\t}\n\n\t\tfunction getMipLevels(texture, image, supportsMips) {\n\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips) === true || texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {\n\t\t\t\treturn Math.log2(Math.max(image.width, image.height)) + 1;\n\t\t\t} else if (texture.mipmaps !== undefined && texture.mipmaps.length > 0) {\n\t\t\t\t// user-defined mipmaps\n\t\t\t\treturn texture.mipmaps.length;\n\t\t\t} else if (texture.isCompressedTexture && Array.isArray(texture.image)) {\n\t\t\t\treturn image.mipmaps.length;\n\t\t\t} else {\n\t\t\t\t// texture without mipmaps (only base level)\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t} // Fallback filters for non-power-of-2 textures\n\n\n\t\tfunction filterFallback(f) {\n\t\t\tif (f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter) {\n\t\t\t\treturn _gl.NEAREST;\n\t\t\t}\n\n\t\t\treturn _gl.LINEAR;\n\t\t} //\n\n\n\t\tfunction onTextureDispose(event) {\n\t\t\tconst texture = event.target;\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\n\t\t\tdeallocateTexture(texture);\n\n\t\t\tif (texture.isVideoTexture) {\n\t\t\t\t_videoTextures.delete(texture);\n\t\t\t}\n\n\t\t\tinfo.memory.textures--;\n\t\t}\n\n\t\tfunction onRenderTargetDispose(event) {\n\t\t\tconst renderTarget = event.target;\n\t\t\trenderTarget.removeEventListener('dispose', onRenderTargetDispose);\n\t\t\tdeallocateRenderTarget(renderTarget);\n\t\t} //\n\n\n\t\tfunction deallocateTexture(texture) {\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\tif (textureProperties.__webglInit === undefined) return;\n\n\t\t\t_gl.deleteTexture(textureProperties.__webglTexture);\n\n\t\t\tproperties.remove(texture);\n\t\t}\n\n\t\tfunction deallocateRenderTarget(renderTarget) {\n\t\t\tconst texture = renderTarget.texture;\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\tif (!renderTarget) return;\n\n\t\t\tif (textureProperties.__webglTexture !== undefined) {\n\t\t\t\t_gl.deleteTexture(textureProperties.__webglTexture);\n\n\t\t\t\tinfo.memory.textures--;\n\t\t\t}\n\n\t\t\tif (renderTarget.depthTexture) {\n\t\t\t\trenderTarget.depthTexture.dispose();\n\t\t\t}\n\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget) {\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\t_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n\n\t\t\t\t\tif (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n\n\t\t\t\tif (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n\t\t\t\tif (renderTargetProperties.__webglMultisampledFramebuffer) _gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer);\n\t\t\t\tif (renderTargetProperties.__webglColorRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer);\n\t\t\t\tif (renderTargetProperties.__webglDepthRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer);\n\t\t\t}\n\n\t\t\tif (renderTarget.isWebGLMultipleRenderTargets) {\n\t\t\t\tfor (let i = 0, il = texture.length; i < il; i++) {\n\t\t\t\t\tconst attachmentProperties = properties.get(texture[i]);\n\n\t\t\t\t\tif (attachmentProperties.__webglTexture) {\n\t\t\t\t\t\t_gl.deleteTexture(attachmentProperties.__webglTexture);\n\n\t\t\t\t\t\tinfo.memory.textures--;\n\t\t\t\t\t}\n\n\t\t\t\t\tproperties.remove(texture[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.remove(texture);\n\t\t\tproperties.remove(renderTarget);\n\t\t} //\n\n\n\t\tlet textureUnits = 0;\n\n\t\tfunction resetTextureUnits() {\n\t\t\ttextureUnits = 0;\n\t\t}\n\n\t\tfunction allocateTextureUnit() {\n\t\t\tconst textureUnit = textureUnits;\n\n\t\t\tif (textureUnit >= maxTextures) {\n\t\t\t\tconsole.warn('THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures);\n\t\t\t}\n\n\t\t\ttextureUnits += 1;\n\t\t\treturn textureUnit;\n\t\t} //\n\n\n\t\tfunction setTexture2D(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\tif (texture.isVideoTexture) updateVideoTexture(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tconst image = texture.image;\n\n\t\t\t\tif (image === undefined) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');\n\t\t\t\t} else if (image.complete === false) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');\n\t\t\t\t} else {\n\t\t\t\t\tuploadTexture(textureProperties, texture, slot);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n\t\t}\n\n\t\tfunction setTexture2DArray(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tuploadTexture(textureProperties, texture, slot);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture);\n\t\t}\n\n\t\tfunction setTexture3D(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tuploadTexture(textureProperties, texture, slot);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_3D, textureProperties.__webglTexture);\n\t\t}\n\n\t\tfunction setTextureCube(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tuploadCubeTexture(textureProperties, texture, slot);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n\t\t}\n\n\t\tconst wrappingToGL = {\n\t\t\t[RepeatWrapping]: _gl.REPEAT,\n\t\t\t[ClampToEdgeWrapping]: _gl.CLAMP_TO_EDGE,\n\t\t\t[MirroredRepeatWrapping]: _gl.MIRRORED_REPEAT\n\t\t};\n\t\tconst filterToGL = {\n\t\t\t[NearestFilter]: _gl.NEAREST,\n\t\t\t[NearestMipmapNearestFilter]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t\t[NearestMipmapLinearFilter]: _gl.NEAREST_MIPMAP_LINEAR,\n\t\t\t[LinearFilter]: _gl.LINEAR,\n\t\t\t[LinearMipmapNearestFilter]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t\t[LinearMipmapLinearFilter]: _gl.LINEAR_MIPMAP_LINEAR\n\t\t};\n\n\t\tfunction setTextureParameters(textureType, texture, supportsMips) {\n\t\t\tif (supportsMips) {\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[texture.wrapS]);\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[texture.wrapT]);\n\n\t\t\t\tif (textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY) {\n\t\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[texture.wrapR]);\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[texture.magFilter]);\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[texture.minFilter]);\n\t\t\t} else {\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE);\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE);\n\n\t\t\t\tif (textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY) {\n\t\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE);\n\t\t\t\t}\n\n\t\t\t\tif (texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.');\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterFallback(texture.magFilter));\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterFallback(texture.minFilter));\n\n\t\t\t\tif (texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (extensions.has('EXT_texture_filter_anisotropic') === true) {\n\t\t\t\tconst extension = extensions.get('EXT_texture_filter_anisotropic');\n\t\t\t\tif (texture.type === FloatType && extensions.has('OES_texture_float_linear') === false) return; // verify extension for WebGL 1 and WebGL 2\n\n\t\t\t\tif (isWebGL2 === false && texture.type === HalfFloatType && extensions.has('OES_texture_half_float_linear') === false) return; // verify extension for WebGL 1 only\n\n\t\t\t\tif (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\n\t\t\t\t\t_gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, capabilities.getMaxAnisotropy()));\n\n\t\t\t\t\tproperties.get(texture).__currentAnisotropy = texture.anisotropy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction initTexture(textureProperties, texture) {\n\t\t\tif (textureProperties.__webglInit === undefined) {\n\t\t\t\ttextureProperties.__webglInit = true;\n\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\t\t\t\tinfo.memory.textures++;\n\t\t\t}\n\t\t}\n\n\t\tfunction uploadTexture(textureProperties, texture, slot) {\n\t\t\tlet textureType = _gl.TEXTURE_2D;\n\t\t\tif (texture.isDataTexture2DArray) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\t\tif (texture.isDataTexture3D) textureType = _gl.TEXTURE_3D;\n\t\t\tinitTexture(textureProperties, texture);\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(textureType, textureProperties.__webglTexture);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE);\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo(texture) && isPowerOfTwo$1(texture.image) === false;\n\t\t\tlet image = resizeImage(texture.image, needsPowerOfTwo, false, maxTextureSize);\n\t\t\timage = verifyColorSpace(texture, image);\n\t\t\tconst supportsMips = isPowerOfTwo$1(image) || isWebGL2,\n\t\t\t\t\t\tglFormat = utils.convert(texture.format, texture.encoding);\n\t\t\tlet glType = utils.convert(texture.type),\n\t\t\t\t\tglInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture);\n\t\t\tsetTextureParameters(textureType, texture, supportsMips);\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\t\t\tconst useTexStorage = isWebGL2 && texture.isVideoTexture !== true;\n\t\t\tconst allocateMemory = textureProperties.__version === undefined;\n\t\t\tconst levels = getMipLevels(texture, image, supportsMips);\n\n\t\t\tif (texture.isDepthTexture) {\n\t\t\t\t// populate depth texture with dummy data\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\tif (texture.type === FloatType) {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\t\t\t\t\t} else if (texture.type === UnsignedIntType) {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\t\t\t\t\t} else if (texture.type === UnsignedInt248Type) {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (texture.type === FloatType) {\n\t\t\t\t\t\tconsole.error('WebGLRenderer: Floating point depth texture requires WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t} // validation checks for WebGL 1\n\n\n\t\t\t\tif (texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT) {\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif (texture.type !== UnsignedShortType && texture.type !== UnsignedIntType) {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\t\tglType = utils.convert(texture.type);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT) {\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL; // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\n\t\t\t\t\tif (texture.type !== UnsignedInt248Type) {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert(texture.type);\n\t\t\t\t\t}\n\t\t\t\t} //\n\n\n\t\t\t\tif (useTexStorage && allocateMemory) {\n\t\t\t\t\tstate.texStorage2D(_gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height);\n\t\t\t\t} else {\n\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null);\n\t\t\t\t}\n\t\t\t} else if (texture.isDataTexture) {\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\t\t\t\tif (mipmaps.length > 0 && supportsMips) {\n\t\t\t\t\tif (useTexStorage && allocateMemory) {\n\t\t\t\t\t\tstate.texStorage2D(_gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[0].width, mipmaps[0].height);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\n\t\t\t\t\t\tmipmap = mipmaps[i];\n\n\t\t\t\t\t\tif (useTexStorage) {\n\t\t\t\t\t\t\tstate.texSubImage2D(_gl.TEXTURE_2D, 0, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t} else {\n\t\t\t\t\tif (useTexStorage) {\n\t\t\t\t\t\tif (allocateMemory) {\n\t\t\t\t\t\t\tstate.texStorage2D(_gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D(_gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (texture.isCompressedTexture) {\n\t\t\t\tif (useTexStorage && allocateMemory) {\n\t\t\t\t\tstate.texStorage2D(_gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[0].width, mipmaps[0].height);\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\n\t\t\t\t\tmipmap = mipmaps[i];\n\n\t\t\t\t\tif (texture.format !== RGBAFormat) {\n\t\t\t\t\t\tif (glFormat !== null) {\n\t\t\t\t\t\t\tif (useTexStorage) {\n\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D(_gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (useTexStorage) {\n\t\t\t\t\t\t\tstate.texSubImage2D(_gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (texture.isDataTexture2DArray) {\n\t\t\t\tif (useTexStorage) {\n\t\t\t\t\tif (allocateMemory) {\n\t\t\t\t\t\tstate.texStorage3D(_gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth);\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D(_gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data);\n\t\t\t\t} else {\n\t\t\t\t\tstate.texImage3D(_gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n\t\t\t\t}\n\t\t\t} else if (texture.isDataTexture3D) {\n\t\t\t\tif (useTexStorage) {\n\t\t\t\t\tif (allocateMemory) {\n\t\t\t\t\t\tstate.texStorage3D(_gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth);\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D(_gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data);\n\t\t\t\t} else {\n\t\t\t\t\tstate.texImage3D(_gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n\t\t\t\t}\n\t\t\t} else if (texture.isFramebufferTexture) {\n\t\t\t\tif (useTexStorage && allocateMemory) {\n\t\t\t\t\tstate.texStorage2D(_gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height);\n\t\t\t\t} else {\n\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// regular Texture (image, video, canvas)\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\t\t\t\tif (mipmaps.length > 0 && supportsMips) {\n\t\t\t\t\tif (useTexStorage && allocateMemory) {\n\t\t\t\t\t\tstate.texStorage2D(_gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[0].width, mipmaps[0].height);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\n\t\t\t\t\t\tmipmap = mipmaps[i];\n\n\t\t\t\t\t\tif (useTexStorage) {\n\t\t\t\t\t\t\tstate.texSubImage2D(_gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t} else {\n\t\t\t\t\tif (useTexStorage) {\n\t\t\t\t\t\tif (allocateMemory) {\n\t\t\t\t\t\t\tstate.texStorage2D(_gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D(_gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\tgenerateMipmap(textureType);\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tif (texture.onUpdate) texture.onUpdate(texture);\n\t\t}\n\n\t\tfunction uploadCubeTexture(textureProperties, texture, slot) {\n\t\t\tif (texture.image.length !== 6) return;\n\t\t\tinitTexture(textureProperties, texture);\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE);\n\n\t\t\tconst isCompressed = texture && (texture.isCompressedTexture || texture.image[0].isCompressedTexture);\n\t\t\tconst isDataTexture = texture.image[0] && texture.image[0].isDataTexture;\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tif (!isCompressed && !isDataTexture) {\n\t\t\t\t\tcubeImage[i] = resizeImage(texture.image[i], false, true, maxCubemapSize);\n\t\t\t\t} else {\n\t\t\t\t\tcubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n\t\t\t\t}\n\n\t\t\t\tcubeImage[i] = verifyColorSpace(texture, cubeImage[i]);\n\t\t\t}\n\n\t\t\tconst image = cubeImage[0],\n\t\t\t\t\t\tsupportsMips = isPowerOfTwo$1(image) || isWebGL2,\n\t\t\t\t\t\tglFormat = utils.convert(texture.format, texture.encoding),\n\t\t\t\t\t\tglType = utils.convert(texture.type),\n\t\t\t\t\t\tglInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\n\t\t\tconst useTexStorage = isWebGL2 && texture.isVideoTexture !== true;\n\t\t\tconst allocateMemory = textureProperties.__version === undefined;\n\t\t\tlet levels = getMipLevels(texture, image, supportsMips);\n\t\t\tsetTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, supportsMips);\n\t\t\tlet mipmaps;\n\n\t\t\tif (isCompressed) {\n\t\t\t\tif (useTexStorage && allocateMemory) {\n\t\t\t\t\tstate.texStorage2D(_gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height);\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\tmipmaps = cubeImage[i].mipmaps;\n\n\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\n\t\t\t\t\t\tconst mipmap = mipmaps[j];\n\n\t\t\t\t\t\tif (texture.format !== RGBAFormat) {\n\t\t\t\t\t\t\tif (glFormat !== null) {\n\t\t\t\t\t\t\t\tif (useTexStorage) {\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (useTexStorage) {\n\t\t\t\t\t\t\t\tstate.texSubImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif (useTexStorage && allocateMemory) {\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\t\t\t\t\tif (mipmaps.length > 0) levels++;\n\t\t\t\t\tstate.texStorage2D(_gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, cubeImage[0].width, cubeImage[0].height);\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\tif (isDataTexture) {\n\t\t\t\t\t\tif (useTexStorage) {\n\t\t\t\t\t\t\tstate.texSubImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[i].width, cubeImage[i].height, glFormat, glType, cubeImage[i].data);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\n\t\t\t\t\t\t\tconst mipmap = mipmaps[j];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[i].image;\n\n\t\t\t\t\t\t\tif (useTexStorage) {\n\t\t\t\t\t\t\t\tstate.texSubImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (useTexStorage) {\n\t\t\t\t\t\t\tstate.texSubImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[i]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[i]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\n\t\t\t\t\t\t\tconst mipmap = mipmaps[j];\n\n\t\t\t\t\t\t\tif (useTexStorage) {\n\t\t\t\t\t\t\t\tstate.texSubImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[i]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap(_gl.TEXTURE_CUBE_MAP);\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tif (texture.onUpdate) texture.onUpdate(texture);\n\t\t} // Render targets\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\n\n\t\tfunction setupFrameBufferTexture(framebuffer, renderTarget, texture, attachment, textureTarget) {\n\t\t\tconst glFormat = utils.convert(texture.format, texture.encoding);\n\t\t\tconst glType = utils.convert(texture.type);\n\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\n\t\t\tif (!renderTargetProperties.__hasExternalTextures) {\n\t\t\t\tif (textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY) {\n\t\t\t\t\tstate.texImage3D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null);\n\t\t\t\t} else {\n\t\t\t\t\tstate.texImage2D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\tif (renderTarget.useRenderToTexture) {\n\t\t\t\tMultisampledRenderToTextureExtension.framebufferTexture2DMultisampleEXT(_gl.FRAMEBUFFER, attachment, textureTarget, properties.get(texture).__webglTexture, 0, getRenderTargetSamples(renderTarget));\n\t\t\t} else {\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, attachment, textureTarget, properties.get(texture).__webglTexture, 0);\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\n\t\t} // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\n\n\t\tfunction setupRenderBufferStorage(renderbuffer, renderTarget, isMultisample) {\n\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, renderbuffer);\n\n\t\t\tif (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n\t\t\t\tlet glInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t\tif (isMultisample || renderTarget.useRenderToTexture) {\n\t\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\t\tif (depthTexture && depthTexture.isDepthTexture) {\n\t\t\t\t\t\tif (depthTexture.type === FloatType) {\n\t\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\t\t\t\t\t\t} else if (depthTexture.type === UnsignedIntType) {\n\t\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\tif (renderTarget.useRenderToTexture) {\n\t\t\t\t\t\tMultisampledRenderToTextureExtension.renderbufferStorageMultisampleEXT(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n\t\t\t} else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\tif (isMultisample && renderTarget.useRenderbuffer) {\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height);\n\t\t\t\t} else if (renderTarget.useRenderToTexture) {\n\t\t\t\t\tMultisampledRenderToTextureExtension.renderbufferStorageMultisampleEXT(_gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n\t\t\t} else {\n\t\t\t\t// Use the first texture for MRT so far\n\t\t\t\tconst texture = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture[0] : renderTarget.texture;\n\t\t\t\tconst glFormat = utils.convert(texture.format, texture.encoding);\n\t\t\t\tconst glType = utils.convert(texture.type);\n\t\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\n\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\tif (isMultisample && renderTarget.useRenderbuffer) {\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t} else if (renderTarget.useRenderToTexture) {\n\t\t\t\t\tMultisampledRenderToTextureExtension.renderbufferStorageMultisampleEXT(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n\t\t} // Setup resources for a Depth Texture for a FBO (needs an extension)\n\n\n\t\tfunction setupDepthTexture(framebuffer, renderTarget) {\n\t\t\tconst isCube = renderTarget && renderTarget.isWebGLCubeRenderTarget;\n\t\t\tif (isCube) throw new Error('Depth Texture with cube render targets is not supported');\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\tif (!(renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture)) {\n\t\t\t\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n\t\t\t} // upload an empty depth texture with framebuffer size\n\n\n\t\t\tif (!properties.get(renderTarget.depthTexture).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height) {\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\t\t\t}\n\n\t\t\tsetTexture2D(renderTarget.depthTexture, 0);\n\n\t\t\tconst webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;\n\n\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\tif (renderTarget.depthTexture.format === DepthFormat) {\n\t\t\t\tif (renderTarget.useRenderToTexture) {\n\t\t\t\t\tMultisampledRenderToTextureExtension.framebufferTexture2DMultisampleEXT(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n\t\t\t\t}\n\t\t\t} else if (renderTarget.depthTexture.format === DepthStencilFormat) {\n\t\t\t\tif (renderTarget.useRenderToTexture) {\n\t\t\t\t\tMultisampledRenderToTextureExtension.framebufferTexture2DMultisampleEXT(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unknown depthTexture format');\n\t\t\t}\n\t\t} // Setup GL resources for a non-texture depth buffer\n\n\n\t\tfunction setupDepthRenderbuffer(renderTarget) {\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\tconst isCube = renderTarget.isWebGLCubeRenderTarget === true;\n\n\t\t\tif (renderTarget.depthTexture && !renderTargetProperties.__autoAllocateDepthBuffer) {\n\t\t\t\tif (isCube) throw new Error('target.depthTexture not supported in Cube render targets');\n\t\t\t\tsetupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\n\t\t\t} else {\n\t\t\t\tif (isCube) {\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[i]);\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget, false);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget, false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\n\t\t} // rebind framebuffer with external textures\n\n\n\t\tfunction rebindTextures(renderTarget, colorTexture, depthTexture) {\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\n\t\t\tif (colorTexture !== undefined) {\n\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D);\n\t\t\t}\n\n\t\t\tif (depthTexture !== undefined) {\n\t\t\t\tsetupDepthRenderbuffer(renderTarget);\n\t\t\t}\n\t\t} // Set up GL resources for the render target\n\n\n\t\tfunction setupRenderTarget(renderTarget) {\n\t\t\tconst texture = renderTarget.texture;\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\trenderTarget.addEventListener('dispose', onRenderTargetDispose);\n\n\t\t\tif (renderTarget.isWebGLMultipleRenderTargets !== true) {\n\t\t\t\tif (textureProperties.__webglTexture === undefined) {\n\t\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\t\t\t\tinfo.memory.textures++;\n\t\t\t}\n\n\t\t\tconst isCube = renderTarget.isWebGLCubeRenderTarget === true;\n\t\t\tconst isMultipleRenderTargets = renderTarget.isWebGLMultipleRenderTargets === true;\n\t\t\tconst isRenderTarget3D = texture.isDataTexture3D || texture.isDataTexture2DArray;\n\t\t\tconst supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2; // Setup framebuffer\n\n\t\t\tif (isCube) {\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t\tif (isMultipleRenderTargets) {\n\t\t\t\t\tif (capabilities.drawBuffers) {\n\t\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\t\t\t\tconst attachmentProperties = properties.get(textures[i]);\n\n\t\t\t\t\t\t\tif (attachmentProperties.__webglTexture === undefined) {\n\t\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\t\t\t\t\t\t\t\tinfo.memory.textures++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.');\n\t\t\t\t\t}\n\t\t\t\t} else if (renderTarget.useRenderbuffer) {\n\t\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer);\n\n\t\t\t\t\t\tconst glFormat = utils.convert(texture.format, texture.encoding);\n\t\t\t\t\t\tconst glType = utils.convert(texture.type);\n\t\t\t\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType, texture.encoding);\n\t\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\n\n\t\t\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer);\n\n\t\t\t\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n\n\t\t\t\t\t\tif (renderTarget.depthBuffer) {\n\t\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // Setup color buffer\n\n\n\t\t\tif (isCube) {\n\t\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n\t\t\t\tsetTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, supportsMips);\n\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i);\n\t\t\t\t}\n\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t\tgenerateMipmap(_gl.TEXTURE_CUBE_MAP);\n\t\t\t\t}\n\n\t\t\t\tstate.unbindTexture();\n\t\t\t} else if (isMultipleRenderTargets) {\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\t\tconst attachment = textures[i];\n\t\t\t\t\tconst attachmentProperties = properties.get(attachment);\n\t\t\t\t\tstate.bindTexture(_gl.TEXTURE_2D, attachmentProperties.__webglTexture);\n\t\t\t\t\tsetTextureParameters(_gl.TEXTURE_2D, attachment, supportsMips);\n\t\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D);\n\n\t\t\t\t\tif (textureNeedsGenerateMipmaps(attachment, supportsMips)) {\n\t\t\t\t\t\tgenerateMipmap(_gl.TEXTURE_2D);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstate.unbindTexture();\n\t\t\t} else {\n\t\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\t\tif (isRenderTarget3D) {\n\t\t\t\t\t// Render targets containing layers, i.e: Texture 3D and 2d arrays\n\t\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t\tconst isTexture3D = texture.isDataTexture3D;\n\t\t\t\t\t\tglTextureType = isTexture3D ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture(glTextureType, textureProperties.__webglTexture);\n\t\t\t\tsetTextureParameters(glTextureType, texture, supportsMips);\n\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType);\n\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t\tgenerateMipmap(glTextureType);\n\t\t\t\t}\n\n\t\t\t\tstate.unbindTexture();\n\t\t\t} // Setup depth and stencil buffers\n\n\n\t\t\tif (renderTarget.depthBuffer) {\n\t\t\t\tsetupDepthRenderbuffer(renderTarget);\n\t\t\t}\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap(renderTarget) {\n\t\t\tconst supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2;\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [renderTarget.texture];\n\n\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\tconst texture = textures[i];\n\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\n\t\t\t\t\tconst webglTexture = properties.get(texture).__webglTexture;\n\n\t\t\t\t\tstate.bindTexture(target, webglTexture);\n\t\t\t\t\tgenerateMipmap(target);\n\t\t\t\t\tstate.unbindTexture();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction updateMultisampleRenderTarget(renderTarget) {\n\t\t\tif (renderTarget.useRenderbuffer) {\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\tconst width = renderTarget.width;\n\t\t\t\t\tconst height = renderTarget.height;\n\t\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\t\t\tconst invalidationArray = [_gl.COLOR_ATTACHMENT0];\n\t\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\t\t\tif (renderTarget.depthBuffer) {\n\t\t\t\t\t\tinvalidationArray.push(depthStyle);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!renderTarget.ignoreDepthForMultisampleCopy) {\n\t\t\t\t\t\tif (renderTarget.depthBuffer) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\t\tif (renderTarget.stencilBuffer) mask |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\t\t\tstate.bindFramebuffer(_gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\n\t\t\t\t\tstate.bindFramebuffer(_gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n\n\t\t\t\t\tif (renderTarget.ignoreDepthForMultisampleCopy) {\n\t\t\t\t\t\t_gl.invalidateFramebuffer(_gl.READ_FRAMEBUFFER, [depthStyle]);\n\n\t\t\t\t\t\t_gl.invalidateFramebuffer(_gl.DRAW_FRAMEBUFFER, [depthStyle]);\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.blitFramebuffer(0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST);\n\n\t\t\t\t\t_gl.invalidateFramebuffer(_gl.READ_FRAMEBUFFER, invalidationArray);\n\n\t\t\t\t\tstate.bindFramebuffer(_gl.READ_FRAMEBUFFER, null);\n\t\t\t\t\tstate.bindFramebuffer(_gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction getRenderTargetSamples(renderTarget) {\n\t\t\treturn isWebGL2 && (renderTarget.useRenderbuffer || renderTarget.useRenderToTexture) ? Math.min(maxSamples, renderTarget.samples) : 0;\n\t\t}\n\n\t\tfunction updateVideoTexture(texture) {\n\t\t\tconst frame = info.render.frame; // Check the last frame we updated the VideoTexture\n\n\t\t\tif (_videoTextures.get(texture) !== frame) {\n\t\t\t\t_videoTextures.set(texture, frame);\n\n\t\t\t\ttexture.update();\n\t\t\t}\n\t\t}\n\n\t\tfunction verifyColorSpace(texture, image) {\n\t\t\tconst encoding = texture.encoding;\n\t\t\tconst format = texture.format;\n\t\t\tconst type = texture.type;\n\t\t\tif (texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat) return image;\n\n\t\t\tif (encoding !== LinearEncoding) {\n\t\t\t\t// sRGB\n\t\t\t\tif (encoding === sRGBEncoding) {\n\t\t\t\t\tif (isWebGL2 === false) {\n\t\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\t\t\t\t\t\tif (extensions.has('EXT_sRGB') === true && format === RGBAFormat) {\n\t\t\t\t\t\t\ttexture.format = _SRGBAFormat; // it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// slow fallback (CPU decode)\n\t\t\t\t\t\t\timage = ImageUtils.sRGBToLinear(image);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\t\t\t\t\t\tif (format !== RGBAFormat || type !== UnsignedByteType) {\n\t\t\t\t\t\t\tconsole.warn('THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('THREE.WebGLTextures: Unsupported texture encoding:', encoding);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn image;\n\t\t} // backwards compatibility\n\n\n\t\tlet warnedTexture2D = false;\n\t\tlet warnedTextureCube = false;\n\n\t\tfunction safeSetTexture2D(texture, slot) {\n\t\t\tif (texture && texture.isWebGLRenderTarget) {\n\t\t\t\tif (warnedTexture2D === false) {\n\t\t\t\t\tconsole.warn('THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.');\n\t\t\t\t\twarnedTexture2D = true;\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\t\t\t}\n\n\t\t\tsetTexture2D(texture, slot);\n\t\t}\n\n\t\tfunction safeSetTextureCube(texture, slot) {\n\t\t\tif (texture && texture.isWebGLCubeRenderTarget) {\n\t\t\t\tif (warnedTextureCube === false) {\n\t\t\t\t\tconsole.warn('THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.');\n\t\t\t\t\twarnedTextureCube = true;\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\t\t\t}\n\n\t\t\tsetTextureCube(texture, slot);\n\t\t} //\n\n\n\t\tthis.allocateTextureUnit = allocateTextureUnit;\n\t\tthis.resetTextureUnits = resetTextureUnits;\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTexture2DArray = setTexture2DArray;\n\t\tthis.setTexture3D = setTexture3D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.rebindTextures = rebindTextures;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\t\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\t\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\t\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\t\tthis.safeSetTexture2D = safeSetTexture2D;\n\t\tthis.safeSetTextureCube = safeSetTextureCube;\n\t}\n\n\tfunction WebGLUtils(gl, extensions, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction convert(p, encoding = null) {\n\t\t\tlet extension;\n\t\t\tif (p === UnsignedByteType) return gl.UNSIGNED_BYTE;\n\t\t\tif (p === UnsignedShort4444Type) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\t\tif (p === UnsignedShort5551Type) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\t\tif (p === ByteType) return gl.BYTE;\n\t\t\tif (p === ShortType) return gl.SHORT;\n\t\t\tif (p === UnsignedShortType) return gl.UNSIGNED_SHORT;\n\t\t\tif (p === IntType) return gl.INT;\n\t\t\tif (p === UnsignedIntType) return gl.UNSIGNED_INT;\n\t\t\tif (p === FloatType) return gl.FLOAT;\n\n\t\t\tif (p === HalfFloatType) {\n\t\t\t\tif (isWebGL2) return gl.HALF_FLOAT;\n\t\t\t\textension = extensions.get('OES_texture_half_float');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\treturn extension.HALF_FLOAT_OES;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === AlphaFormat) return gl.ALPHA;\n\t\t\tif (p === RGBAFormat) return gl.RGBA;\n\t\t\tif (p === LuminanceFormat) return gl.LUMINANCE;\n\t\t\tif (p === LuminanceAlphaFormat) return gl.LUMINANCE_ALPHA;\n\t\t\tif (p === DepthFormat) return gl.DEPTH_COMPONENT;\n\t\t\tif (p === DepthStencilFormat) return gl.DEPTH_STENCIL;\n\t\t\tif (p === RedFormat) return gl.RED;\n\n\t\t\tif (p === RGBFormat) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228');\n\t\t\t\treturn gl.RGBA;\n\t\t\t} // WebGL 1 sRGB fallback\n\n\n\t\t\tif (p === _SRGBAFormat) {\n\t\t\t\textension = extensions.get('EXT_sRGB');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} // WebGL2 formats.\n\n\n\t\t\tif (p === RedIntegerFormat) return gl.RED_INTEGER;\n\t\t\tif (p === RGFormat) return gl.RG;\n\t\t\tif (p === RGIntegerFormat) return gl.RG_INTEGER;\n\t\t\tif (p === RGBAIntegerFormat) return gl.RGBA_INTEGER; // S3TC\n\n\t\t\tif (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\n\t\t\t\tif (encoding === sRGBEncoding) {\n\t\t\t\t\textension = extensions.get('WEBGL_compressed_texture_s3tc_srgb');\n\n\t\t\t\t\tif (extension !== null) {\n\t\t\t\t\t\tif (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\t\tif (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\t\tif (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\t\tif (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\textension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n\t\t\t\t\tif (extension !== null) {\n\t\t\t\t\t\tif (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\t\tif (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\t\tif (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\t\tif (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // PVRTC\n\n\n\t\t\tif (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\tif (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\t\tif (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} // ETC1\n\n\n\t\t\tif (p === RGB_ETC1_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_etc1');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} // ETC2\n\n\n\t\t\tif (p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_etc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\tif (p === RGB_ETC2_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\t\tif (p === RGBA_ETC2_EAC_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} // ASTC\n\n\n\t\t\tif (p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format || p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format || p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format || p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format || p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_astc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\tif (p === RGBA_ASTC_4x4_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\t\tif (p === RGBA_ASTC_5x4_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\t\tif (p === RGBA_ASTC_5x5_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\t\tif (p === RGBA_ASTC_6x5_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\t\tif (p === RGBA_ASTC_6x6_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\t\tif (p === RGBA_ASTC_8x5_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\t\tif (p === RGBA_ASTC_8x6_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\t\tif (p === RGBA_ASTC_8x8_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\t\tif (p === RGBA_ASTC_10x5_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\t\tif (p === RGBA_ASTC_10x6_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\t\tif (p === RGBA_ASTC_10x8_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\t\tif (p === RGBA_ASTC_10x10_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\t\tif (p === RGBA_ASTC_12x10_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\t\tif (p === RGBA_ASTC_12x12_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} // BPTC\n\n\n\t\t\tif (p === RGBA_BPTC_Format) {\n\t\t\t\textension = extensions.get('EXT_texture_compression_bptc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\tif (p === RGBA_BPTC_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tif (p === UnsignedInt248Type) {\n\t\t\t\tif (isWebGL2) return gl.UNSIGNED_INT_24_8;\n\t\t\t\textension = extensions.get('WEBGL_depth_texture');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tconvert: convert\n\t\t};\n\t}\n\n\tclass ArrayCamera extends PerspectiveCamera {\n\t\tconstructor(array = []) {\n\t\t\tsuper();\n\t\t\tthis.cameras = array;\n\t\t}\n\n\t}\n\n\tArrayCamera.prototype.isArrayCamera = true;\n\n\tclass Group extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Group';\n\t\t}\n\n\t}\n\n\tGroup.prototype.isGroup = true;\n\n\tconst _moveEvent = {\n\t\ttype: 'move'\n\t};\n\n\tclass WebXRController {\n\t\tconstructor() {\n\t\t\tthis._targetRay = null;\n\t\t\tthis._grip = null;\n\t\t\tthis._hand = null;\n\t\t}\n\n\t\tgetHandSpace() {\n\t\t\tif (this._hand === null) {\n\t\t\t\tthis._hand = new Group();\n\t\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\t\tthis._hand.visible = false;\n\t\t\t\tthis._hand.joints = {};\n\t\t\t\tthis._hand.inputState = {\n\t\t\t\t\tpinching: false\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn this._hand;\n\t\t}\n\n\t\tgetTargetRaySpace() {\n\t\t\tif (this._targetRay === null) {\n\t\t\t\tthis._targetRay = new Group();\n\t\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\t\tthis._targetRay.visible = false;\n\t\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\t\t\t}\n\n\t\t\treturn this._targetRay;\n\t\t}\n\n\t\tgetGripSpace() {\n\t\t\tif (this._grip === null) {\n\t\t\t\tthis._grip = new Group();\n\t\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\t\tthis._grip.visible = false;\n\t\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\t\tthis._grip.angularVelocity = new Vector3();\n\t\t\t}\n\n\t\t\treturn this._grip;\n\t\t}\n\n\t\tdispatchEvent(event) {\n\t\t\tif (this._targetRay !== null) {\n\t\t\t\tthis._targetRay.dispatchEvent(event);\n\t\t\t}\n\n\t\t\tif (this._grip !== null) {\n\t\t\t\tthis._grip.dispatchEvent(event);\n\t\t\t}\n\n\t\t\tif (this._hand !== null) {\n\t\t\t\tthis._hand.dispatchEvent(event);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tdisconnect(inputSource) {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'disconnected',\n\t\t\t\tdata: inputSource\n\t\t\t});\n\n\t\t\tif (this._targetRay !== null) {\n\t\t\t\tthis._targetRay.visible = false;\n\t\t\t}\n\n\t\t\tif (this._grip !== null) {\n\t\t\t\tthis._grip.visible = false;\n\t\t\t}\n\n\t\t\tif (this._hand !== null) {\n\t\t\t\tthis._hand.visible = false;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tupdate(inputSource, frame, referenceSpace) {\n\t\t\tlet inputPose = null;\n\t\t\tlet gripPose = null;\n\t\t\tlet handPose = null;\n\t\t\tconst targetRay = this._targetRay;\n\t\t\tconst grip = this._grip;\n\t\t\tconst hand = this._hand;\n\n\t\t\tif (inputSource && frame.session.visibilityState !== 'visible-blurred') {\n\t\t\t\tif (targetRay !== null) {\n\t\t\t\t\tinputPose = frame.getPose(inputSource.targetRaySpace, referenceSpace);\n\n\t\t\t\t\tif (inputPose !== null) {\n\t\t\t\t\t\ttargetRay.matrix.fromArray(inputPose.transform.matrix);\n\t\t\t\t\t\ttargetRay.matrix.decompose(targetRay.position, targetRay.rotation, targetRay.scale);\n\n\t\t\t\t\t\tif (inputPose.linearVelocity) {\n\t\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\t\ttargetRay.linearVelocity.copy(inputPose.linearVelocity);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (inputPose.angularVelocity) {\n\t\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\t\ttargetRay.angularVelocity.copy(inputPose.angularVelocity);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.dispatchEvent(_moveEvent);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (hand && inputSource.hand) {\n\t\t\t\t\thandPose = true;\n\n\t\t\t\t\tfor (const inputjoint of inputSource.hand.values()) {\n\t\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\t\tconst jointPose = frame.getJointPose(inputjoint, referenceSpace);\n\n\t\t\t\t\t\tif (hand.joints[inputjoint.jointName] === undefined) {\n\t\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\t\thand.joints[inputjoint.jointName] = joint; // ??\n\n\t\t\t\t\t\t\thand.add(joint);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst joint = hand.joints[inputjoint.jointName];\n\n\t\t\t\t\t\tif (jointPose !== null) {\n\t\t\t\t\t\t\tjoint.matrix.fromArray(jointPose.transform.matrix);\n\t\t\t\t\t\t\tjoint.matrix.decompose(joint.position, joint.rotation, joint.scale);\n\t\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tjoint.visible = jointPose !== null;\n\t\t\t\t\t} // Custom events\n\t\t\t\t\t// Check pinchz\n\n\n\t\t\t\t\tconst indexTip = hand.joints['index-finger-tip'];\n\t\t\t\t\tconst thumbTip = hand.joints['thumb-tip'];\n\t\t\t\t\tconst distance = indexTip.position.distanceTo(thumbTip.position);\n\t\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\t\tif (hand.inputState.pinching && distance > distanceToPinch + threshold) {\n\t\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\t\tthis.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\t\ttarget: this\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (!hand.inputState.pinching && distance <= distanceToPinch - threshold) {\n\t\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\t\tthis.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\t\ttarget: this\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (grip !== null && inputSource.gripSpace) {\n\t\t\t\t\t\tgripPose = frame.getPose(inputSource.gripSpace, referenceSpace);\n\n\t\t\t\t\t\tif (gripPose !== null) {\n\t\t\t\t\t\t\tgrip.matrix.fromArray(gripPose.transform.matrix);\n\t\t\t\t\t\t\tgrip.matrix.decompose(grip.position, grip.rotation, grip.scale);\n\n\t\t\t\t\t\t\tif (gripPose.linearVelocity) {\n\t\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\t\tgrip.linearVelocity.copy(gripPose.linearVelocity);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (gripPose.angularVelocity) {\n\t\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\t\tgrip.angularVelocity.copy(gripPose.angularVelocity);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (targetRay !== null) {\n\t\t\t\ttargetRay.visible = inputPose !== null;\n\t\t\t}\n\n\t\t\tif (grip !== null) {\n\t\t\t\tgrip.visible = gripPose !== null;\n\t\t\t}\n\n\t\t\tif (hand !== null) {\n\t\t\t\thand.visible = handPose !== null;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass DepthTexture extends Texture {\n\t\tconstructor(width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format) {\n\t\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\t\tif (format !== DepthFormat && format !== DepthStencilFormat) {\n\t\t\t\tthrow new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');\n\t\t\t}\n\n\t\t\tif (type === undefined && format === DepthFormat) type = UnsignedShortType;\n\t\t\tif (type === undefined && format === DepthStencilFormat) type = UnsignedInt248Type;\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n\t\t\tthis.image = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\t\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\t\t\tthis.flipY = false;\n\t\t\tthis.generateMipmaps = false;\n\t\t}\n\n\t}\n\n\tDepthTexture.prototype.isDepthTexture = true;\n\n\tclass WebXRManager extends EventDispatcher {\n\t\tconstructor(renderer, gl) {\n\t\t\tsuper();\n\t\t\tconst scope = this;\n\t\t\tlet session = null;\n\t\t\tlet framebufferScaleFactor = 1.0;\n\t\t\tlet referenceSpace = null;\n\t\t\tlet referenceSpaceType = 'local-floor';\n\t\t\tconst hasMultisampledRenderToTexture = renderer.extensions.has('WEBGL_multisampled_render_to_texture');\n\t\t\tlet pose = null;\n\t\t\tlet glBinding = null;\n\t\t\tlet glProjLayer = null;\n\t\t\tlet glBaseLayer = null;\n\t\t\tlet isMultisample = false;\n\t\t\tlet xrFrame = null;\n\t\t\tconst attributes = gl.getContextAttributes();\n\t\t\tlet initialRenderTarget = null;\n\t\t\tlet newRenderTarget = null;\n\t\t\tconst controllers = [];\n\t\t\tconst inputSourcesMap = new Map(); //\n\n\t\t\tconst cameraL = new PerspectiveCamera();\n\t\t\tcameraL.layers.enable(1);\n\t\t\tcameraL.viewport = new Vector4();\n\t\t\tconst cameraR = new PerspectiveCamera();\n\t\t\tcameraR.layers.enable(2);\n\t\t\tcameraR.viewport = new Vector4();\n\t\t\tconst cameras = [cameraL, cameraR];\n\t\t\tconst cameraVR = new ArrayCamera();\n\t\t\tcameraVR.layers.enable(1);\n\t\t\tcameraVR.layers.enable(2);\n\t\t\tlet _currentDepthNear = null;\n\t\t\tlet _currentDepthFar = null; //\n\n\t\t\tthis.cameraAutoUpdate = true;\n\t\t\tthis.enabled = false;\n\t\t\tthis.isPresenting = false;\n\n\t\t\tthis.getController = function (index) {\n\t\t\t\tlet controller = controllers[index];\n\n\t\t\t\tif (controller === undefined) {\n\t\t\t\t\tcontroller = new WebXRController();\n\t\t\t\t\tcontrollers[index] = controller;\n\t\t\t\t}\n\n\t\t\t\treturn controller.getTargetRaySpace();\n\t\t\t};\n\n\t\t\tthis.getControllerGrip = function (index) {\n\t\t\t\tlet controller = controllers[index];\n\n\t\t\t\tif (controller === undefined) {\n\t\t\t\t\tcontroller = new WebXRController();\n\t\t\t\t\tcontrollers[index] = controller;\n\t\t\t\t}\n\n\t\t\t\treturn controller.getGripSpace();\n\t\t\t};\n\n\t\t\tthis.getHand = function (index) {\n\t\t\t\tlet controller = controllers[index];\n\n\t\t\t\tif (controller === undefined) {\n\t\t\t\t\tcontroller = new WebXRController();\n\t\t\t\t\tcontrollers[index] = controller;\n\t\t\t\t}\n\n\t\t\t\treturn controller.getHandSpace();\n\t\t\t}; //\n\n\n\t\t\tfunction onSessionEvent(event) {\n\t\t\t\tconst controller = inputSourcesMap.get(event.inputSource);\n\n\t\t\t\tif (controller) {\n\t\t\t\t\tcontroller.dispatchEvent({\n\t\t\t\t\t\ttype: event.type,\n\t\t\t\t\t\tdata: event.inputSource\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction onSessionEnd() {\n\t\t\t\tinputSourcesMap.forEach(function (controller, inputSource) {\n\t\t\t\t\tcontroller.disconnect(inputSource);\n\t\t\t\t});\n\t\t\t\tinputSourcesMap.clear();\n\t\t\t\t_currentDepthNear = null;\n\t\t\t\t_currentDepthFar = null; // restore framebuffer/rendering state\n\n\t\t\t\trenderer.setRenderTarget(initialRenderTarget);\n\t\t\t\tglBaseLayer = null;\n\t\t\t\tglProjLayer = null;\n\t\t\t\tglBinding = null;\n\t\t\t\tsession = null;\n\t\t\t\tnewRenderTarget = null; //\n\n\t\t\t\tanimation.stop();\n\t\t\t\tscope.isPresenting = false;\n\t\t\t\tscope.dispatchEvent({\n\t\t\t\t\ttype: 'sessionend'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.setFramebufferScaleFactor = function (value) {\n\t\t\t\tframebufferScaleFactor = value;\n\n\t\t\t\tif (scope.isPresenting === true) {\n\t\t\t\t\tconsole.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.setReferenceSpaceType = function (value) {\n\t\t\t\treferenceSpaceType = value;\n\n\t\t\t\tif (scope.isPresenting === true) {\n\t\t\t\t\tconsole.warn('THREE.WebXRManager: Cannot change reference space type while presenting.');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.getReferenceSpace = function () {\n\t\t\t\treturn referenceSpace;\n\t\t\t};\n\n\t\t\tthis.getBaseLayer = function () {\n\t\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\t\t\t};\n\n\t\t\tthis.getBinding = function () {\n\t\t\t\treturn glBinding;\n\t\t\t};\n\n\t\t\tthis.getFrame = function () {\n\t\t\t\treturn xrFrame;\n\t\t\t};\n\n\t\t\tthis.getSession = function () {\n\t\t\t\treturn session;\n\t\t\t};\n\n\t\t\tthis.setSession = async function (value) {\n\t\t\t\tsession = value;\n\n\t\t\t\tif (session !== null) {\n\t\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\t\t\t\t\tsession.addEventListener('select', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('selectstart', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('selectend', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('squeeze', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('squeezestart', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('squeezeend', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('end', onSessionEnd);\n\t\t\t\t\tsession.addEventListener('inputsourceschange', onInputSourcesChange);\n\n\t\t\t\t\tif (attributes.xrCompatible !== true) {\n\t\t\t\t\t\tawait gl.makeXRCompatible();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (session.renderState.layers === undefined || renderer.capabilities.isWebGL2 === false) {\n\t\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\t\tantialias: session.renderState.layers === undefined ? attributes.antialias : true,\n\t\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t\t};\n\t\t\t\t\t\tglBaseLayer = new XRWebGLLayer(session, gl, layerInit);\n\t\t\t\t\t\tsession.updateRenderState({\n\t\t\t\t\t\t\tbaseLayer: glBaseLayer\n\t\t\t\t\t\t});\n\t\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, {\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisMultisample = attributes.antialias;\n\t\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\t\tlet depthType = null;\n\t\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\t\tif (attributes.depth) {\n\t\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedShortType;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\t\tcolorFormat: renderer.outputEncoding === sRGBEncoding ? gl.SRGB8_ALPHA8 : gl.RGBA8,\n\t\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t\t};\n\t\t\t\t\t\tglBinding = new XRWebGLBinding(session, gl);\n\t\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer(projectionlayerInit);\n\t\t\t\t\t\tsession.updateRenderState({\n\t\t\t\t\t\t\tlayers: [glProjLayer]\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (isMultisample) {\n\t\t\t\t\t\t\tnewRenderTarget = new WebGLMultisampleRenderTarget(glProjLayer.textureWidth, glProjLayer.textureHeight, {\n\t\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\t\tdepthTexture: new DepthTexture(glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat),\n\t\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\t\tignoreDepth: glProjLayer.ignoreDepthValues,\n\t\t\t\t\t\t\t\tuseRenderToTexture: hasMultisampledRenderToTexture,\n\t\t\t\t\t\t\t\tencoding: renderer.outputEncoding\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(glProjLayer.textureWidth, glProjLayer.textureHeight, {\n\t\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\t\tdepthTexture: new DepthTexture(glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat),\n\t\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\t\tignoreDepth: glProjLayer.ignoreDepthValues,\n\t\t\t\t\t\t\t\tencoding: renderer.outputEncoding\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\t\t\t\t\t// Set foveation to maximum.\n\n\t\t\t\t\tthis.setFoveation(1.0);\n\t\t\t\t\treferenceSpace = await session.requestReferenceSpace(referenceSpaceType);\n\t\t\t\t\tanimation.setContext(session);\n\t\t\t\t\tanimation.start();\n\t\t\t\t\tscope.isPresenting = true;\n\t\t\t\t\tscope.dispatchEvent({\n\t\t\t\t\t\ttype: 'sessionstart'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfunction onInputSourcesChange(event) {\n\t\t\t\tconst inputSources = session.inputSources; // Assign inputSources to available controllers\n\n\t\t\t\tfor (let i = 0; i < controllers.length; i++) {\n\t\t\t\t\tinputSourcesMap.set(inputSources[i], controllers[i]);\n\t\t\t\t} // Notify disconnected\n\n\n\t\t\t\tfor (let i = 0; i < event.removed.length; i++) {\n\t\t\t\t\tconst inputSource = event.removed[i];\n\t\t\t\t\tconst controller = inputSourcesMap.get(inputSource);\n\n\t\t\t\t\tif (controller) {\n\t\t\t\t\t\tcontroller.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'disconnected',\n\t\t\t\t\t\t\tdata: inputSource\n\t\t\t\t\t\t});\n\t\t\t\t\t\tinputSourcesMap.delete(inputSource);\n\t\t\t\t\t}\n\t\t\t\t} // Notify connected\n\n\n\t\t\t\tfor (let i = 0; i < event.added.length; i++) {\n\t\t\t\t\tconst inputSource = event.added[i];\n\t\t\t\t\tconst controller = inputSourcesMap.get(inputSource);\n\n\t\t\t\t\tif (controller) {\n\t\t\t\t\t\tcontroller.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'connected',\n\t\t\t\t\t\t\tdata: inputSource\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tconst cameraLPos = new Vector3();\n\t\t\tconst cameraRPos = new Vector3();\n\t\t\t/**\n\t\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t\t * the cameras' projection and world matrices have already been set.\n\t\t\t * And that near and far planes are identical for both cameras.\n\t\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t\t */\n\n\t\t\tfunction setProjectionFromUnion(camera, cameraL, cameraR) {\n\t\t\t\tcameraLPos.setFromMatrixPosition(cameraL.matrixWorld);\n\t\t\t\tcameraRPos.setFromMatrixPosition(cameraR.matrixWorld);\n\t\t\t\tconst ipd = cameraLPos.distanceTo(cameraRPos);\n\t\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\t\tconst projR = cameraR.projectionMatrix.elements; // VR systems will have identical far and near planes, and\n\t\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t\t// Use the left camera for these values.\n\n\t\t\t\tconst near = projL[14] / (projL[10] - 1);\n\t\t\t\tconst far = projL[14] / (projL[10] + 1);\n\t\t\t\tconst topFov = (projL[9] + 1) / projL[5];\n\t\t\t\tconst bottomFov = (projL[9] - 1) / projL[5];\n\t\t\t\tconst leftFov = (projL[8] - 1) / projL[0];\n\t\t\t\tconst rightFov = (projR[8] + 1) / projR[0];\n\t\t\t\tconst left = near * leftFov;\n\t\t\t\tconst right = near * rightFov; // Calculate the new camera's position offset from the\n\t\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\n\t\t\t\tconst zOffset = ipd / (-leftFov + rightFov);\n\t\t\t\tconst xOffset = zOffset * -leftFov; // TODO: Better way to apply this offset?\n\n\t\t\t\tcameraL.matrixWorld.decompose(camera.position, camera.quaternion, camera.scale);\n\t\t\t\tcamera.translateX(xOffset);\n\t\t\t\tcamera.translateZ(zOffset);\n\t\t\t\tcamera.matrixWorld.compose(camera.position, camera.quaternion, camera.scale);\n\t\t\t\tcamera.matrixWorldInverse.copy(camera.matrixWorld).invert(); // Find the union of the frustum values of the cameras and scale\n\t\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t\t// although must now be relative to the new union camera.\n\n\t\t\t\tconst near2 = near + zOffset;\n\t\t\t\tconst far2 = far + zOffset;\n\t\t\t\tconst left2 = left - xOffset;\n\t\t\t\tconst right2 = right + (ipd - xOffset);\n\t\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\t\t\t\tcamera.projectionMatrix.makePerspective(left2, right2, top2, bottom2, near2, far2);\n\t\t\t}\n\n\t\t\tfunction updateCamera(camera, parent) {\n\t\t\t\tif (parent === null) {\n\t\t\t\t\tcamera.matrixWorld.copy(camera.matrix);\n\t\t\t\t} else {\n\t\t\t\t\tcamera.matrixWorld.multiplyMatrices(parent.matrixWorld, camera.matrix);\n\t\t\t\t}\n\n\t\t\t\tcamera.matrixWorldInverse.copy(camera.matrixWorld).invert();\n\t\t\t}\n\n\t\t\tthis.updateCamera = function (camera) {\n\t\t\t\tif (session === null) return;\n\t\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\t\tif (_currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far) {\n\t\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\t\t\t\t\tsession.updateRenderState({\n\t\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t\t});\n\t\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t\t_currentDepthFar = cameraVR.far;\n\t\t\t\t}\n\n\t\t\t\tconst parent = camera.parent;\n\t\t\t\tconst cameras = cameraVR.cameras;\n\t\t\t\tupdateCamera(cameraVR, parent);\n\n\t\t\t\tfor (let i = 0; i < cameras.length; i++) {\n\t\t\t\t\tupdateCamera(cameras[i], parent);\n\t\t\t\t}\n\n\t\t\t\tcameraVR.matrixWorld.decompose(cameraVR.position, cameraVR.quaternion, cameraVR.scale); // update user camera and its children\n\n\t\t\t\tcamera.position.copy(cameraVR.position);\n\t\t\t\tcamera.quaternion.copy(cameraVR.quaternion);\n\t\t\t\tcamera.scale.copy(cameraVR.scale);\n\t\t\t\tcamera.matrix.copy(cameraVR.matrix);\n\t\t\t\tcamera.matrixWorld.copy(cameraVR.matrixWorld);\n\t\t\t\tconst children = camera.children;\n\n\t\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tchildren[i].updateMatrixWorld(true);\n\t\t\t\t} // update projection matrix for proper view frustum culling\n\n\n\t\t\t\tif (cameras.length === 2) {\n\t\t\t\t\tsetProjectionFromUnion(cameraVR, cameraL, cameraR);\n\t\t\t\t} else {\n\t\t\t\t\t// assume single camera setup (AR)\n\t\t\t\t\tcameraVR.projectionMatrix.copy(cameraL.projectionMatrix);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.getCamera = function () {\n\t\t\t\treturn cameraVR;\n\t\t\t};\n\n\t\t\tthis.getFoveation = function () {\n\t\t\t\tif (glProjLayer !== null) {\n\t\t\t\t\treturn glProjLayer.fixedFoveation;\n\t\t\t\t}\n\n\t\t\t\tif (glBaseLayer !== null) {\n\t\t\t\t\treturn glBaseLayer.fixedFoveation;\n\t\t\t\t}\n\n\t\t\t\treturn undefined;\n\t\t\t};\n\n\t\t\tthis.setFoveation = function (foveation) {\n\t\t\t\t// 0 = no foveation = full resolution\n\t\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\t\t\t\tif (glProjLayer !== null) {\n\t\t\t\t\tglProjLayer.fixedFoveation = foveation;\n\t\t\t\t}\n\n\t\t\t\tif (glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined) {\n\t\t\t\t\tglBaseLayer.fixedFoveation = foveation;\n\t\t\t\t}\n\t\t\t}; // Animation Loop\n\n\n\t\t\tlet onAnimationFrameCallback = null;\n\n\t\t\tfunction onAnimationFrame(time, frame) {\n\t\t\t\tpose = frame.getViewerPose(referenceSpace);\n\t\t\t\txrFrame = frame;\n\n\t\t\t\tif (pose !== null) {\n\t\t\t\t\tconst views = pose.views;\n\n\t\t\t\t\tif (glBaseLayer !== null) {\n\t\t\t\t\t\trenderer.setRenderTargetFramebuffer(newRenderTarget, glBaseLayer.framebuffer);\n\t\t\t\t\t\trenderer.setRenderTarget(newRenderTarget);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet cameraVRNeedsUpdate = false; // check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\t\tif (views.length !== cameraVR.cameras.length) {\n\t\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\t\tcameraVRNeedsUpdate = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < views.length; i++) {\n\t\t\t\t\t\tconst view = views[i];\n\t\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\t\tif (glBaseLayer !== null) {\n\t\t\t\t\t\t\tviewport = glBaseLayer.getViewport(view);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage(glProjLayer, view);\n\t\t\t\t\t\t\tviewport = glSubImage.viewport; // For side-by-side projection, we only produce a single texture for both eyes.\n\n\t\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\t\trenderer.setRenderTargetTextures(newRenderTarget, glSubImage.colorTexture, glProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture);\n\t\t\t\t\t\t\t\trenderer.setRenderTarget(newRenderTarget);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst camera = cameras[i];\n\t\t\t\t\t\tcamera.matrix.fromArray(view.transform.matrix);\n\t\t\t\t\t\tcamera.projectionMatrix.fromArray(view.projectionMatrix);\n\t\t\t\t\t\tcamera.viewport.set(viewport.x, viewport.y, viewport.width, viewport.height);\n\n\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\tcameraVR.matrix.copy(camera.matrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (cameraVRNeedsUpdate === true) {\n\t\t\t\t\t\t\tcameraVR.cameras.push(camera);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} //\n\n\n\t\t\t\tconst inputSources = session.inputSources;\n\n\t\t\t\tfor (let i = 0; i < controllers.length; i++) {\n\t\t\t\t\tconst controller = controllers[i];\n\t\t\t\t\tconst inputSource = inputSources[i];\n\t\t\t\t\tcontroller.update(inputSource, frame, referenceSpace);\n\t\t\t\t}\n\n\t\t\t\tif (onAnimationFrameCallback) onAnimationFrameCallback(time, frame);\n\t\t\t\txrFrame = null;\n\t\t\t}\n\n\t\t\tconst animation = new WebGLAnimation();\n\t\t\tanimation.setAnimationLoop(onAnimationFrame);\n\n\t\t\tthis.setAnimationLoop = function (callback) {\n\t\t\t\tonAnimationFrameCallback = callback;\n\t\t\t};\n\n\t\t\tthis.dispose = function () {};\n\t\t}\n\n\t}\n\n\tfunction WebGLMaterials(properties) {\n\t\tfunction refreshFogUniforms(uniforms, fog) {\n\t\t\tuniforms.fogColor.value.copy(fog.color);\n\n\t\t\tif (fog.isFog) {\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\t\t\t} else if (fog.isFogExp2) {\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshMaterialUniforms(uniforms, material, pixelRatio, height, transmissionRenderTarget) {\n\t\t\tif (material.isMeshBasicMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t} else if (material.isMeshLambertMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsLambert(uniforms, material);\n\t\t\t} else if (material.isMeshToonMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsToon(uniforms, material);\n\t\t\t} else if (material.isMeshPhongMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsPhong(uniforms, material);\n\t\t\t} else if (material.isMeshStandardMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\n\t\t\t\tif (material.isMeshPhysicalMaterial) {\n\t\t\t\t\trefreshUniformsPhysical(uniforms, material, transmissionRenderTarget);\n\t\t\t\t} else {\n\t\t\t\t\trefreshUniformsStandard(uniforms, material);\n\t\t\t\t}\n\t\t\t} else if (material.isMeshMatcapMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsMatcap(uniforms, material);\n\t\t\t} else if (material.isMeshDepthMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsDepth(uniforms, material);\n\t\t\t} else if (material.isMeshDistanceMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsDistance(uniforms, material);\n\t\t\t} else if (material.isMeshNormalMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsNormal(uniforms, material);\n\t\t\t} else if (material.isLineBasicMaterial) {\n\t\t\t\trefreshUniformsLine(uniforms, material);\n\n\t\t\t\tif (material.isLineDashedMaterial) {\n\t\t\t\t\trefreshUniformsDash(uniforms, material);\n\t\t\t\t}\n\t\t\t} else if (material.isPointsMaterial) {\n\t\t\t\trefreshUniformsPoints(uniforms, material, pixelRatio, height);\n\t\t\t} else if (material.isSpriteMaterial) {\n\t\t\t\trefreshUniformsSprites(uniforms, material);\n\t\t\t} else if (material.isShadowMaterial) {\n\t\t\t\tuniforms.color.value.copy(material.color);\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\t} else if (material.isShaderMaterial) {\n\t\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsCommon(uniforms, material) {\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tif (material.color) {\n\t\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\t}\n\n\t\t\tif (material.emissive) {\n\t\t\t\tuniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n\t\t\t}\n\n\t\t\tif (material.map) {\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t}\n\n\t\t\tif (material.alphaMap) {\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (material.specularMap) {\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\t}\n\n\t\t\tif (material.alphaTest > 0) {\n\t\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\t\t\t}\n\n\t\t\tconst envMap = properties.get(material).envMap;\n\n\t\t\tif (envMap) {\n\t\t\t\tuniforms.envMap.value = envMap;\n\t\t\t\tuniforms.flipEnvMap.value = envMap.isCubeTexture && envMap.isRenderTargetTexture === false ? -1 : 1;\n\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\tuniforms.ior.value = material.ior;\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\t\t\t}\n\n\t\t\tif (material.lightMap) {\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\t\t\t}\n\n\t\t\tif (material.aoMap) {\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\t\t\t} // uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. specular map\n\t\t\t// 3. displacementMap map\n\t\t\t// 4. normal map\n\t\t\t// 5. bump map\n\t\t\t// 6. roughnessMap map\n\t\t\t// 7. metalnessMap map\n\t\t\t// 8. alphaMap map\n\t\t\t// 9. emissiveMap map\n\t\t\t// 10. clearcoat map\n\t\t\t// 11. clearcoat normal map\n\t\t\t// 12. clearcoat roughnessMap map\n\t\t\t// 13. specular intensity map\n\t\t\t// 14. specular tint map\n\t\t\t// 15. transmission map\n\t\t\t// 16. thickness map\n\n\n\t\t\tlet uvScaleMap;\n\n\t\t\tif (material.map) {\n\t\t\t\tuvScaleMap = material.map;\n\t\t\t} else if (material.specularMap) {\n\t\t\t\tuvScaleMap = material.specularMap;\n\t\t\t} else if (material.displacementMap) {\n\t\t\t\tuvScaleMap = material.displacementMap;\n\t\t\t} else if (material.normalMap) {\n\t\t\t\tuvScaleMap = material.normalMap;\n\t\t\t} else if (material.bumpMap) {\n\t\t\t\tuvScaleMap = material.bumpMap;\n\t\t\t} else if (material.roughnessMap) {\n\t\t\t\tuvScaleMap = material.roughnessMap;\n\t\t\t} else if (material.metalnessMap) {\n\t\t\t\tuvScaleMap = material.metalnessMap;\n\t\t\t} else if (material.alphaMap) {\n\t\t\t\tuvScaleMap = material.alphaMap;\n\t\t\t} else if (material.emissiveMap) {\n\t\t\t\tuvScaleMap = material.emissiveMap;\n\t\t\t} else if (material.clearcoatMap) {\n\t\t\t\tuvScaleMap = material.clearcoatMap;\n\t\t\t} else if (material.clearcoatNormalMap) {\n\t\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\t\t\t} else if (material.clearcoatRoughnessMap) {\n\t\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\t\t\t} else if (material.specularIntensityMap) {\n\t\t\t\tuvScaleMap = material.specularIntensityMap;\n\t\t\t} else if (material.specularColorMap) {\n\t\t\t\tuvScaleMap = material.specularColorMap;\n\t\t\t} else if (material.transmissionMap) {\n\t\t\t\tuvScaleMap = material.transmissionMap;\n\t\t\t} else if (material.thicknessMap) {\n\t\t\t\tuvScaleMap = material.thicknessMap;\n\t\t\t} else if (material.sheenColorMap) {\n\t\t\t\tuvScaleMap = material.sheenColorMap;\n\t\t\t} else if (material.sheenRoughnessMap) {\n\t\t\t\tuvScaleMap = material.sheenRoughnessMap;\n\t\t\t}\n\n\t\t\tif (uvScaleMap !== undefined) {\n\t\t\t\t// backwards compatibility\n\t\t\t\tif (uvScaleMap.isWebGLRenderTarget) {\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\t\t\t\t}\n\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\n\t\t\t} // uv repeat and offset setting priorities for uv2\n\t\t\t// 1. ao map\n\t\t\t// 2. light map\n\n\n\t\t\tlet uv2ScaleMap;\n\n\t\t\tif (material.aoMap) {\n\t\t\t\tuv2ScaleMap = material.aoMap;\n\t\t\t} else if (material.lightMap) {\n\t\t\t\tuv2ScaleMap = material.lightMap;\n\t\t\t}\n\n\t\t\tif (uv2ScaleMap !== undefined) {\n\t\t\t\t// backwards compatibility\n\t\t\t\tif (uv2ScaleMap.isWebGLRenderTarget) {\n\t\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\t\t\t\t}\n\n\t\t\t\tif (uv2ScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuv2ScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uv2Transform.value.copy(uv2ScaleMap.matrix);\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsLine(uniforms, material) {\n\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t}\n\n\t\tfunction refreshUniformsDash(uniforms, material) {\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\t\t}\n\n\t\tfunction refreshUniformsPoints(uniforms, material, pixelRatio, height) {\n\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * pixelRatio;\n\t\t\tuniforms.scale.value = height * 0.5;\n\n\t\t\tif (material.map) {\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t}\n\n\t\t\tif (material.alphaMap) {\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (material.alphaTest > 0) {\n\t\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\t\t\t} // uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. alpha map\n\n\n\t\t\tlet uvScaleMap;\n\n\t\t\tif (material.map) {\n\t\t\t\tuvScaleMap = material.map;\n\t\t\t} else if (material.alphaMap) {\n\t\t\t\tuvScaleMap = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (uvScaleMap !== undefined) {\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsSprites(uniforms, material) {\n\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.rotation.value = material.rotation;\n\n\t\t\tif (material.map) {\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t}\n\n\t\t\tif (material.alphaMap) {\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (material.alphaTest > 0) {\n\t\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\t\t\t} // uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. alpha map\n\n\n\t\t\tlet uvScaleMap;\n\n\t\t\tif (material.map) {\n\t\t\t\tuvScaleMap = material.map;\n\t\t\t} else if (material.alphaMap) {\n\t\t\t\tuvScaleMap = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (uvScaleMap !== undefined) {\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsLambert(uniforms, material) {\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsPhong(uniforms, material) {\n\t\t\tuniforms.specular.value.copy(material.specular);\n\t\t\tuniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\n\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsToon(uniforms, material) {\n\t\t\tif (material.gradientMap) {\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\t\t\t}\n\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsStandard(uniforms, material) {\n\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif (material.roughnessMap) {\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\t\t\t}\n\n\t\t\tif (material.metalnessMap) {\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\t\t\t}\n\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\n\t\t\tconst envMap = properties.get(material).envMap;\n\n\t\t\tif (envMap) {\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsPhysical(uniforms, material, transmissionRenderTarget) {\n\t\t\trefreshUniformsStandard(uniforms, material);\n\t\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\t\tif (material.sheen > 0) {\n\t\t\t\tuniforms.sheenColor.value.copy(material.sheenColor).multiplyScalar(material.sheen);\n\t\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\t\tif (material.sheenColorMap) {\n\t\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\t\t\t\t}\n\n\t\t\t\tif (material.sheenRoughnessMap) {\n\t\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (material.clearcoat > 0) {\n\t\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\t\tif (material.clearcoatMap) {\n\t\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\t\t\t\t}\n\n\t\t\t\tif (material.clearcoatRoughnessMap) {\n\t\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\t\t\t\t}\n\n\t\t\t\tif (material.clearcoatNormalMap) {\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale);\n\t\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\t\tif (material.side === BackSide) {\n\t\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (material.transmission > 0) {\n\t\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\t\tuniforms.transmissionSamplerSize.value.set(transmissionRenderTarget.width, transmissionRenderTarget.height);\n\n\t\t\t\tif (material.transmissionMap) {\n\t\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\t\t\t\t}\n\n\t\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\t\tif (material.thicknessMap) {\n\t\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\t\t\t\t}\n\n\t\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\t\tuniforms.attenuationColor.value.copy(material.attenuationColor);\n\t\t\t}\n\n\t\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\t\tuniforms.specularColor.value.copy(material.specularColor);\n\n\t\t\tif (material.specularIntensityMap) {\n\t\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\t\t\t}\n\n\t\t\tif (material.specularColorMap) {\n\t\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsMatcap(uniforms, material) {\n\t\t\tif (material.matcap) {\n\t\t\t\tuniforms.matcap.value = material.matcap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsDepth(uniforms, material) {\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsDistance(uniforms, material) {\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\n\t\t\tuniforms.referencePosition.value.copy(material.referencePosition);\n\t\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\t\tuniforms.farDistance.value = material.farDistance;\n\t\t}\n\n\t\tfunction refreshUniformsNormal(uniforms, material) {\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\trefreshFogUniforms: refreshFogUniforms,\n\t\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t\t};\n\t}\n\n\tfunction createCanvasElement() {\n\t\tconst canvas = createElementNS('canvas');\n\t\tcanvas.style.display = 'block';\n\t\treturn canvas;\n\t}\n\n\tfunction WebGLRenderer(parameters = {}) {\n\t\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\t\t\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t\t\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t\t\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null; // render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = []; // public properties\n\n\t\tthis.domElement = _canvas; // Debug configuration container\n\n\t\tthis.debug = {\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true\n\t\t}; // clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true; // scene graph\n\n\t\tthis.sortObjects = true; // user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false; // physically based shading\n\n\t\tthis.outputEncoding = LinearEncoding; // physical lights\n\n\t\tthis.physicallyCorrectLights = false; // tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0; // internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false; // internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\n\t\tlet _currentMaterialId = -1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\n\t\tconst _currentScissor = new Vector4();\n\n\t\tlet _currentScissorTest = null; //\n\n\t\tlet _width = _canvas.width;\n\t\tlet _height = _canvas.height;\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4(0, 0, _width, _height);\n\n\t\tconst _scissor = new Vector4(0, 0, _width, _height);\n\n\t\tlet _scissorTest = false; // frustum\n\n\t\tconst _frustum = new Frustum(); // clipping\n\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false; // transmission\n\n\t\tlet _transmissionRenderTarget = null; // camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = {\n\t\t\tbackground: null,\n\t\t\tfog: null,\n\t\t\tenvironment: null,\n\t\t\toverrideMaterial: null,\n\t\t\tisScene: true\n\t\t};\n\n\t\tfunction getTargetPixelRatio() {\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\t\t} // initialize\n\n\n\t\tlet _gl = _context;\n\n\t\tfunction getContext(contextNames, contextAttributes) {\n\t\t\tfor (let i = 0; i < contextNames.length; i++) {\n\t\t\t\tconst contextName = contextNames[i];\n\n\t\t\t\tconst context = _canvas.getContext(contextName, contextAttributes);\n\n\t\t\t\tif (context !== null) return context;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\ttry {\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth: _depth,\n\t\t\t\tstencil: _stencil,\n\t\t\t\tantialias: _antialias,\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\t\tpowerPreference: _powerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t\t}; // OffscreenCanvas does not have setAttribute, see #22811\n\n\t\t\tif ('setAttribute' in _canvas) _canvas.setAttribute('data-engine', `three.js r${REVISION}`); // event listeners must be registered before WebGL context is created, see #12753\n\n\t\t\t_canvas.addEventListener('webglcontextlost', onContextLost, false);\n\n\t\t\t_canvas.addEventListener('webglcontextrestored', onContextRestore, false);\n\n\t\t\tif (_gl === null) {\n\t\t\t\tconst contextNames = ['webgl2', 'webgl', 'experimental-webgl'];\n\n\t\t\t\tif (_this.isWebGL1Renderer === true) {\n\t\t\t\t\tcontextNames.shift();\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext(contextNames, contextAttributes);\n\n\t\t\t\tif (_gl === null) {\n\t\t\t\t\tif (getContext(contextNames)) {\n\t\t\t\t\t\tthrow new Error('Error creating WebGL context with your selected attributes.');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Error creating WebGL context.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n\t\t\tif (_gl.getShaderPrecisionFormat === undefined) {\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t'rangeMin': 1,\n\t\t\t\t\t\t'rangeMax': 1,\n\t\t\t\t\t\t'precision': 1\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('THREE.WebGLRenderer: ' + error.message);\n\t\t\tthrow error;\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\t\tlet utils, bindingStates;\n\n\t\tfunction initGLContext() {\n\t\t\textensions = new WebGLExtensions(_gl);\n\t\t\tcapabilities = new WebGLCapabilities(_gl, extensions, parameters);\n\t\t\textensions.init(capabilities);\n\t\t\tutils = new WebGLUtils(_gl, extensions, capabilities);\n\t\t\tstate = new WebGLState(_gl, extensions, capabilities);\n\t\t\tinfo = new WebGLInfo(_gl);\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info);\n\t\t\tcubemaps = new WebGLCubeMaps(_this);\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps(_this);\n\t\t\tattributes = new WebGLAttributes(_gl, capabilities);\n\t\t\tbindingStates = new WebGLBindingStates(_gl, extensions, attributes, capabilities);\n\t\t\tgeometries = new WebGLGeometries(_gl, attributes, info, bindingStates);\n\t\t\tobjects = new WebGLObjects(_gl, geometries, attributes, info);\n\t\t\tmorphtargets = new WebGLMorphtargets(_gl, capabilities, textures);\n\t\t\tclipping = new WebGLClipping(properties);\n\t\t\tprogramCache = new WebGLPrograms(_this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping);\n\t\t\tmaterials = new WebGLMaterials(properties);\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates(extensions, capabilities);\n\t\t\tbackground = new WebGLBackground(_this, cubemaps, state, objects, _alpha, _premultipliedAlpha);\n\t\t\tshadowMap = new WebGLShadowMap(_this, objects, capabilities);\n\t\t\tbufferRenderer = new WebGLBufferRenderer(_gl, extensions, info, capabilities);\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer(_gl, extensions, info, capabilities);\n\t\t\tinfo.programs = programCache.programs;\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\t\t}\n\n\t\tinitGLContext(); // xr\n\n\t\tconst xr = new WebXRManager(_this, _gl);\n\t\tthis.xr = xr; // API\n\n\t\tthis.getContext = function () {\n\t\t\treturn _gl;\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\t\t\treturn _gl.getContextAttributes();\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\t\t\tconst extension = extensions.get('WEBGL_lose_context');\n\t\t\tif (extension) extension.loseContext();\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\t\t\tconst extension = extensions.get('WEBGL_lose_context');\n\t\t\tif (extension) extension.restoreContext();\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\t\t\treturn _pixelRatio;\n\t\t};\n\n\t\tthis.setPixelRatio = function (value) {\n\t\t\tif (value === undefined) return;\n\t\t\t_pixelRatio = value;\n\t\t\tthis.setSize(_width, _height, false);\n\t\t};\n\n\t\tthis.getSize = function (target) {\n\t\t\treturn target.set(_width, _height);\n\t\t};\n\n\t\tthis.setSize = function (width, height, updateStyle) {\n\t\t\tif (xr.isPresenting) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\t\t\t_canvas.width = Math.floor(width * _pixelRatio);\n\t\t\t_canvas.height = Math.floor(height * _pixelRatio);\n\n\t\t\tif (updateStyle !== false) {\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\t\t\t}\n\n\t\t\tthis.setViewport(0, 0, width, height);\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function (target) {\n\t\t\treturn target.set(_width * _pixelRatio, _height * _pixelRatio).floor();\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function (width, height, pixelRatio) {\n\t\t\t_width = width;\n\t\t\t_height = height;\n\t\t\t_pixelRatio = pixelRatio;\n\t\t\t_canvas.width = Math.floor(width * pixelRatio);\n\t\t\t_canvas.height = Math.floor(height * pixelRatio);\n\t\t\tthis.setViewport(0, 0, width, height);\n\t\t};\n\n\t\tthis.getCurrentViewport = function (target) {\n\t\t\treturn target.copy(_currentViewport);\n\t\t};\n\n\t\tthis.getViewport = function (target) {\n\t\t\treturn target.copy(_viewport);\n\t\t};\n\n\t\tthis.setViewport = function (x, y, width, height) {\n\t\t\tif (x.isVector4) {\n\t\t\t\t_viewport.set(x.x, x.y, x.z, x.w);\n\t\t\t} else {\n\t\t\t\t_viewport.set(x, y, width, height);\n\t\t\t}\n\n\t\t\tstate.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());\n\t\t};\n\n\t\tthis.getScissor = function (target) {\n\t\t\treturn target.copy(_scissor);\n\t\t};\n\n\t\tthis.setScissor = function (x, y, width, height) {\n\t\t\tif (x.isVector4) {\n\t\t\t\t_scissor.set(x.x, x.y, x.z, x.w);\n\t\t\t} else {\n\t\t\t\t_scissor.set(x, y, width, height);\n\t\t\t}\n\n\t\t\tstate.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\t\t\treturn _scissorTest;\n\t\t};\n\n\t\tthis.setScissorTest = function (boolean) {\n\t\t\tstate.setScissorTest(_scissorTest = boolean);\n\t\t};\n\n\t\tthis.setOpaqueSort = function (method) {\n\t\t\t_opaqueSort = method;\n\t\t};\n\n\t\tthis.setTransparentSort = function (method) {\n\t\t\t_transparentSort = method;\n\t\t}; // Clearing\n\n\n\t\tthis.getClearColor = function (target) {\n\t\t\treturn target.copy(background.getClearColor());\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\t\t\tbackground.setClearColor.apply(background, arguments);\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\t\t\treturn background.getClearAlpha();\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\t\t\tbackground.setClearAlpha.apply(background, arguments);\n\t\t};\n\n\t\tthis.clear = function (color, depth, stencil) {\n\t\t\tlet bits = 0;\n\t\t\tif (color === undefined || color) bits |= _gl.COLOR_BUFFER_BIT;\n\t\t\tif (depth === undefined || depth) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif (stencil === undefined || stencil) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear(bits);\n\t\t};\n\n\t\tthis.clearColor = function () {\n\t\t\tthis.clear(true, false, false);\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\t\t\tthis.clear(false, true, false);\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\t\t\tthis.clear(false, false, true);\n\t\t}; //\n\n\n\t\tthis.dispose = function () {\n\t\t\t_canvas.removeEventListener('webglcontextlost', onContextLost, false);\n\n\t\t\t_canvas.removeEventListener('webglcontextrestored', onContextRestore, false);\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tprogramCache.dispose();\n\t\t\txr.dispose();\n\t\t\txr.removeEventListener('sessionstart', onXRSessionStart);\n\t\t\txr.removeEventListener('sessionend', onXRSessionEnd);\n\n\t\t\tif (_transmissionRenderTarget) {\n\t\t\t\t_transmissionRenderTarget.dispose();\n\n\t\t\t\t_transmissionRenderTarget = null;\n\t\t\t}\n\n\t\t\tanimation.stop();\n\t\t}; // Events\n\n\n\t\tfunction onContextLost(event) {\n\t\t\tevent.preventDefault();\n\t\t\tconsole.log('THREE.WebGLRenderer: Context Lost.');\n\t\t\t_isContextLost = true;\n\t\t}\n\n\t\tfunction\n\t\t\t/* event */\n\t\tonContextRestore() {\n\t\t\tconsole.log('THREE.WebGLRenderer: Context Restored.');\n\t\t\t_isContextLost = false;\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\t\t\tinitGLContext();\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\t\t}\n\n\t\tfunction onMaterialDispose(event) {\n\t\t\tconst material = event.target;\n\t\t\tmaterial.removeEventListener('dispose', onMaterialDispose);\n\t\t\tdeallocateMaterial(material);\n\t\t} // Buffer deallocation\n\n\n\t\tfunction deallocateMaterial(material) {\n\t\t\treleaseMaterialProgramReferences(material);\n\t\t\tproperties.remove(material);\n\t\t}\n\n\t\tfunction releaseMaterialProgramReferences(material) {\n\t\t\tconst programs = properties.get(material).programs;\n\n\t\t\tif (programs !== undefined) {\n\t\t\t\tprograms.forEach(function (program) {\n\t\t\t\t\tprogramCache.releaseProgram(program);\n\t\t\t\t});\n\n\t\t\t\tif (material.isShaderMaterial) {\n\t\t\t\t\tprogramCache.releaseShaderCache(material);\n\t\t\t\t}\n\t\t\t}\n\t\t} // Buffer rendering\n\n\n\t\tthis.renderBufferDirect = function (camera, scene, geometry, material, object, group) {\n\t\t\tif (scene === null) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = object.isMesh && object.matrixWorld.determinant() < 0;\n\t\t\tconst program = setProgram(camera, scene, geometry, material, object);\n\t\t\tstate.setMaterial(material, frontFaceCW); //\n\n\t\t\tlet index = geometry.index;\n\t\t\tconst position = geometry.attributes.position; //\n\n\t\t\tif (index === null) {\n\t\t\t\tif (position === undefined || position.count === 0) return;\n\t\t\t} else if (index.count === 0) {\n\t\t\t\treturn;\n\t\t\t} //\n\n\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif (material.wireframe === true) {\n\t\t\t\tindex = geometries.getWireframeAttribute(geometry);\n\t\t\t\trangeFactor = 2;\n\t\t\t}\n\n\t\t\tbindingStates.setup(object, material, program, geometry, index);\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif (index !== null) {\n\t\t\t\tattribute = attributes.get(index);\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex(attribute);\n\t\t\t} //\n\n\n\t\t\tconst dataCount = index !== null ? index.count : position.count;\n\t\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\t\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\t\t\tconst drawStart = Math.max(rangeStart, groupStart);\n\t\t\tconst drawEnd = Math.min(dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n\t\t\tconst drawCount = Math.max(0, drawEnd - drawStart + 1);\n\t\t\tif (drawCount === 0) return; //\n\n\t\t\tif (object.isMesh) {\n\t\t\t\tif (material.wireframe === true) {\n\t\t\t\t\tstate.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n\t\t\t\t\trenderer.setMode(_gl.LINES);\n\t\t\t\t} else {\n\t\t\t\t\trenderer.setMode(_gl.TRIANGLES);\n\t\t\t\t}\n\t\t\t} else if (object.isLine) {\n\t\t\t\tlet lineWidth = material.linewidth;\n\t\t\t\tif (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth(lineWidth * getTargetPixelRatio());\n\n\t\t\t\tif (object.isLineSegments) {\n\t\t\t\t\trenderer.setMode(_gl.LINES);\n\t\t\t\t} else if (object.isLineLoop) {\n\t\t\t\t\trenderer.setMode(_gl.LINE_LOOP);\n\t\t\t\t} else {\n\t\t\t\t\trenderer.setMode(_gl.LINE_STRIP);\n\t\t\t\t}\n\t\t\t} else if (object.isPoints) {\n\t\t\t\trenderer.setMode(_gl.POINTS);\n\t\t\t} else if (object.isSprite) {\n\t\t\t\trenderer.setMode(_gl.TRIANGLES);\n\t\t\t}\n\n\t\t\tif (object.isInstancedMesh) {\n\t\t\t\trenderer.renderInstances(drawStart, drawCount, object.count);\n\t\t\t} else if (geometry.isInstancedBufferGeometry) {\n\t\t\t\tconst instanceCount = Math.min(geometry.instanceCount, geometry._maxInstanceCount);\n\t\t\t\trenderer.renderInstances(drawStart, drawCount, instanceCount);\n\t\t\t} else {\n\t\t\t\trenderer.render(drawStart, drawCount);\n\t\t\t}\n\t\t}; // Compile\n\n\n\t\tthis.compile = function (scene, camera) {\n\t\t\tcurrentRenderState = renderStates.get(scene);\n\t\t\tcurrentRenderState.init();\n\t\t\trenderStateStack.push(currentRenderState);\n\t\t\tscene.traverseVisible(function (object) {\n\t\t\t\tif (object.isLight && object.layers.test(camera.layers)) {\n\t\t\t\t\tcurrentRenderState.pushLight(object);\n\n\t\t\t\t\tif (object.castShadow) {\n\t\t\t\t\t\tcurrentRenderState.pushShadow(object);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tcurrentRenderState.setupLights(_this.physicallyCorrectLights);\n\t\t\tscene.traverse(function (object) {\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif (material) {\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tfor (let i = 0; i < material.length; i++) {\n\t\t\t\t\t\t\tconst material2 = material[i];\n\t\t\t\t\t\t\tgetProgram(material2, scene, object);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgetProgram(material, scene, object);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\t\t}; // Animation Loop\n\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame(time) {\n\t\t\tif (onAnimationFrameCallback) onAnimationFrameCallback(time);\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\t\t\tanimation.stop();\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\t\t\tanimation.start();\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop(onAnimationFrame);\n\t\tif (typeof window !== 'undefined') animation.setContext(window);\n\n\t\tthis.setAnimationLoop = function (callback) {\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop(callback);\n\t\t\tcallback === null ? animation.stop() : animation.start();\n\t\t};\n\n\t\txr.addEventListener('sessionstart', onXRSessionStart);\n\t\txr.addEventListener('sessionend', onXRSessionEnd); // Rendering\n\n\t\tthis.render = function (scene, camera) {\n\t\t\tif (camera !== undefined && camera.isCamera !== true) {\n\t\t\t\tconsole.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_isContextLost === true) return; // update scene graph\n\n\t\t\tif (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n\t\t\tif (camera.parent === null) camera.updateMatrixWorld();\n\n\t\t\tif (xr.enabled === true && xr.isPresenting === true) {\n\t\t\t\tif (xr.cameraAutoUpdate === true) xr.updateCamera(camera);\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\t\t\t} //\n\n\n\t\t\tif (scene.isScene === true) scene.onBeforeRender(_this, scene, camera, _currentRenderTarget);\n\t\t\tcurrentRenderState = renderStates.get(scene, renderStateStack.length);\n\t\t\tcurrentRenderState.init();\n\t\t\trenderStateStack.push(currentRenderState);\n\n\t\t\t_projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n\t\t\t_frustum.setFromProjectionMatrix(_projScreenMatrix);\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\n\t\t\tcurrentRenderList = renderLists.get(scene, renderListStack.length);\n\t\t\tcurrentRenderList.init();\n\t\t\trenderListStack.push(currentRenderList);\n\t\t\tprojectObject(scene, camera, 0, _this.sortObjects);\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif (_this.sortObjects === true) {\n\t\t\t\tcurrentRenderList.sort(_opaqueSort, _transparentSort);\n\t\t\t} //\n\n\n\t\t\tif (_clippingEnabled === true) clipping.beginShadows();\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\t\t\tshadowMap.render(shadowsArray, scene, camera);\n\t\t\tif (_clippingEnabled === true) clipping.endShadows(); //\n\n\t\t\tif (this.info.autoReset === true) this.info.reset(); //\n\n\t\t\tbackground.render(currentRenderList, scene); // render scene\n\n\t\t\tcurrentRenderState.setupLights(_this.physicallyCorrectLights);\n\n\t\t\tif (camera.isArrayCamera) {\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor (let i = 0, l = cameras.length; i < l; i++) {\n\t\t\t\t\tconst camera2 = cameras[i];\n\t\t\t\t\trenderScene(currentRenderList, scene, camera2, camera2.viewport);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trenderScene(currentRenderList, scene, camera);\n\t\t\t} //\n\n\n\t\t\tif (_currentRenderTarget !== null) {\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\t\t\t\ttextures.updateMultisampleRenderTarget(_currentRenderTarget); // Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap(_currentRenderTarget);\n\t\t\t} //\n\n\n\t\t\tif (scene.isScene === true) scene.onAfterRender(_this, scene, camera); // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest(true);\n\t\t\tstate.buffers.depth.setMask(true);\n\t\t\tstate.buffers.color.setMask(true);\n\t\t\tstate.setPolygonOffset(false); // _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = -1;\n\t\t\t_currentCamera = null;\n\t\t\trenderStateStack.pop();\n\n\t\t\tif (renderStateStack.length > 0) {\n\t\t\t\tcurrentRenderState = renderStateStack[renderStateStack.length - 1];\n\t\t\t} else {\n\t\t\t\tcurrentRenderState = null;\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif (renderListStack.length > 0) {\n\t\t\t\tcurrentRenderList = renderListStack[renderListStack.length - 1];\n\t\t\t} else {\n\t\t\t\tcurrentRenderList = null;\n\t\t\t}\n\t\t};\n\n\t\tfunction projectObject(object, camera, groupOrder, sortObjects) {\n\t\t\tif (object.visible === false) return;\n\t\t\tconst visible = object.layers.test(camera.layers);\n\n\t\t\tif (visible) {\n\t\t\t\tif (object.isGroup) {\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\t\t\t\t} else if (object.isLOD) {\n\t\t\t\t\tif (object.autoUpdate === true) object.update(camera);\n\t\t\t\t} else if (object.isLight) {\n\t\t\t\t\tcurrentRenderState.pushLight(object);\n\n\t\t\t\t\tif (object.castShadow) {\n\t\t\t\t\t\tcurrentRenderState.pushShadow(object);\n\t\t\t\t\t}\n\t\t\t\t} else if (object.isSprite) {\n\t\t\t\t\tif (!object.frustumCulled || _frustum.intersectsSprite(object)) {\n\t\t\t\t\t\tif (sortObjects) {\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update(object);\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif (material.visible) {\n\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (object.isMesh || object.isLine || object.isPoints) {\n\t\t\t\t\tif (object.isSkinnedMesh) {\n\t\t\t\t\t\t// update skeleton only once in a frame\n\t\t\t\t\t\tif (object.skeleton.frame !== info.render.frame) {\n\t\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!object.frustumCulled || _frustum.intersectsObject(object)) {\n\t\t\t\t\t\tif (sortObjects) {\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update(object);\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\n\t\t\t\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\n\t\t\t\t\t\t\t\tif (groupMaterial && groupMaterial.visible) {\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, groupMaterial, groupOrder, _vector3.z, group);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (material.visible) {\n\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tprojectObject(children[i], camera, groupOrder, sortObjects);\n\t\t\t}\n\t\t}\n\n\t\tfunction renderScene(currentRenderList, scene, camera, viewport) {\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\t\t\tcurrentRenderState.setupLightsView(camera);\n\t\t\tif (transmissiveObjects.length > 0) renderTransmissionPass(opaqueObjects, scene, camera);\n\t\t\tif (viewport) state.viewport(_currentViewport.copy(viewport));\n\t\t\tif (opaqueObjects.length > 0) renderObjects(opaqueObjects, scene, camera);\n\t\t\tif (transmissiveObjects.length > 0) renderObjects(transmissiveObjects, scene, camera);\n\t\t\tif (transparentObjects.length > 0) renderObjects(transparentObjects, scene, camera);\n\t\t}\n\n\t\tfunction renderTransmissionPass(opaqueObjects, scene, camera) {\n\t\t\tif (_transmissionRenderTarget === null) {\n\t\t\t\tconst needsAntialias = _antialias === true && capabilities.isWebGL2 === true;\n\t\t\t\tconst renderTargetType = needsAntialias ? WebGLMultisampleRenderTarget : WebGLRenderTarget;\n\t\t\t\t_transmissionRenderTarget = new renderTargetType(1024, 1024, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: utils.convert(HalfFloatType) !== null ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\t\twrapS: ClampToEdgeWrapping,\n\t\t\t\t\twrapT: ClampToEdgeWrapping,\n\t\t\t\t\tuseRenderToTexture: extensions.has('WEBGL_multisampled_render_to_texture')\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\n\t\t\t_this.setRenderTarget(_transmissionRenderTarget);\n\n\t\t\t_this.clear(); // Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\n\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\t\t\trenderObjects(opaqueObjects, scene, camera);\n\t\t\t_this.toneMapping = currentToneMapping;\n\t\t\ttextures.updateMultisampleRenderTarget(_transmissionRenderTarget);\n\t\t\ttextures.updateRenderTargetMipmap(_transmissionRenderTarget);\n\n\t\t\t_this.setRenderTarget(currentRenderTarget);\n\t\t}\n\n\t\tfunction renderObjects(renderList, scene, camera) {\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor (let i = 0, l = renderList.length; i < l; i++) {\n\t\t\t\tconst renderItem = renderList[i];\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif (object.layers.test(camera.layers)) {\n\t\t\t\t\trenderObject(object, scene, camera, geometry, material, group);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction renderObject(object, scene, camera, geometry, material, group) {\n\t\t\tobject.onBeforeRender(_this, scene, camera, geometry, material, group);\n\t\t\tobject.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n\t\t\tobject.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n\t\t\tmaterial.onBeforeRender(_this, scene, camera, geometry, object, group);\n\n\t\t\tif (material.transparent === true && material.side === DoubleSide) {\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\n\t\t\t\tmaterial.side = DoubleSide;\n\t\t\t} else {\n\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\t\t\t}\n\n\t\t\tobject.onAfterRender(_this, scene, camera, geometry, material, group);\n\t\t}\n\n\t\tfunction getProgram(material, scene, object) {\n\t\t\tif (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get(material);\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\t\t\tconst lightsStateVersion = lights.state.version;\n\t\t\tconst parameters = programCache.getParameters(material, lights.state, shadowsArray, scene, object);\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey(parameters);\n\t\t\tlet programs = materialProperties.programs; // always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || materialProperties.environment);\n\n\t\t\tif (programs === undefined) {\n\t\t\t\t// new material\n\t\t\t\tmaterial.addEventListener('dispose', onMaterialDispose);\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\t\t\t}\n\n\t\t\tlet program = programs.get(programCacheKey);\n\n\t\t\tif (program !== undefined) {\n\t\t\t\t// early out if program and light state is identical\n\t\t\t\tif (materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion) {\n\t\t\t\t\tupdateCommonMaterialProperties(material, parameters);\n\t\t\t\t\treturn program;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tparameters.uniforms = programCache.getUniforms(material);\n\t\t\t\tmaterial.onBuild(object, parameters, _this);\n\t\t\t\tmaterial.onBeforeCompile(parameters, _this);\n\t\t\t\tprogram = programCache.acquireProgram(parameters, programCacheKey);\n\t\t\t\tprograms.set(programCacheKey, program);\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif (!material.isShaderMaterial && !material.isRawShaderMaterial || material.clipping === true) {\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties(material, parameters); // store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights(material);\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif (materialProperties.needsLights) {\n\t\t\t\t// wire up the material to this renderer's lighting state\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix; // TODO (abelnation): add area lights shadow info to uniforms\n\t\t\t}\n\n\t\t\tconst progUniforms = program.getUniforms();\n\t\t\tconst uniformsList = WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\t\t\treturn program;\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties(material, parameters) {\n\t\t\tconst materialProperties = properties.get(material);\n\t\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\t\t}\n\n\t\tfunction setProgram(camera, scene, geometry, material, object) {\n\t\t\tif (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst encoding = _currentRenderTarget === null ? _this.outputEncoding : _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding;\n\t\t\tconst envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || environment);\n\t\t\tconst vertexAlphas = material.vertexColors === true && !!geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !!material.normalMap && !!geometry.attributes.tangent;\n\t\t\tconst morphTargets = !!geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !!geometry.morphAttributes.normal;\n\t\t\tconst morphTargetsCount = !!geometry.morphAttributes.position ? geometry.morphAttributes.position.length : 0;\n\t\t\tconst toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n\t\t\tconst materialProperties = properties.get(material);\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif (_clippingEnabled === true) {\n\t\t\t\tif (_localClippingEnabled === true || camera !== _currentCamera) {\n\t\t\t\t\tconst useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\n\t\t\t\t\tclipping.setState(material, camera, useCache);\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif (material.version === materialProperties.__version) {\n\t\t\t\tif (materialProperties.needsLights && materialProperties.lightsStateVersion !== lights.state.version) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.outputEncoding !== encoding) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (object.isInstancedMesh && materialProperties.instancing === false) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (!object.isInstancedMesh && materialProperties.instancing === true) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (object.isSkinnedMesh && materialProperties.skinning === false) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (!object.isSkinnedMesh && materialProperties.skinning === true) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.envMap !== envMap) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (material.fog && materialProperties.fog !== fog) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.numClippingPlanes !== undefined && (materialProperties.numClippingPlanes !== clipping.numPlanes || materialProperties.numIntersection !== clipping.numIntersection)) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.vertexAlphas !== vertexAlphas) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.vertexTangents !== vertexTangents) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.morphTargets !== morphTargets) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.morphNormals !== morphNormals) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.toneMapping !== toneMapping) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\t\t\t} //\n\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif (needsProgramChange === true) {\n\t\t\t\tprogram = getProgram(material, scene, object);\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif (state.useProgram(program.program)) {\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\t\t\t}\n\n\t\t\tif (material.id !== _currentMaterialId) {\n\t\t\t\t_currentMaterialId = material.id;\n\t\t\t\trefreshMaterial = true;\n\t\t\t}\n\n\t\t\tif (refreshProgram || _currentCamera !== camera) {\n\t\t\t\tp_uniforms.setValue(_gl, 'projectionMatrix', camera.projectionMatrix);\n\n\t\t\t\tif (capabilities.logarithmicDepthBuffer) {\n\t\t\t\t\tp_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n\t\t\t\t}\n\n\t\t\t\tif (_currentCamera !== camera) {\n\t\t\t\t\t_currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true; // set to true on material change\n\n\t\t\t\t\trefreshLights = true; // remains set until update done\n\t\t\t\t} // load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\n\t\t\t\tif (material.isShaderMaterial || material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshStandardMaterial || material.envMap) {\n\t\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif (uCamPos !== undefined) {\n\t\t\t\t\t\tuCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial) {\n\t\t\t\t\tp_uniforms.setValue(_gl, 'isOrthographic', camera.isOrthographicCamera === true);\n\t\t\t\t}\n\n\t\t\t\tif (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial || material.isShadowMaterial || object.isSkinnedMesh) {\n\t\t\t\t\tp_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\n\t\t\t\t}\n\t\t\t} // skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\n\t\t\tif (object.isSkinnedMesh) {\n\t\t\t\tp_uniforms.setOptional(_gl, object, 'bindMatrix');\n\t\t\t\tp_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif (skeleton) {\n\t\t\t\t\tif (capabilities.floatVertexTextures) {\n\t\t\t\t\t\tif (skeleton.boneTexture === null) skeleton.computeBoneTexture();\n\t\t\t\t\t\tp_uniforms.setValue(_gl, 'boneTexture', skeleton.boneTexture, textures);\n\t\t\t\t\t\tp_uniforms.setValue(_gl, 'boneTextureSize', skeleton.boneTextureSize);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tp_uniforms.setOptional(_gl, skeleton, 'boneMatrices');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!!geometry && (geometry.morphAttributes.position !== undefined || geometry.morphAttributes.normal !== undefined)) {\n\t\t\t\tmorphtargets.update(object, geometry, material, program);\n\t\t\t}\n\n\t\t\tif (refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow) {\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue(_gl, 'receiveShadow', object.receiveShadow);\n\t\t\t}\n\n\t\t\tif (refreshMaterial) {\n\t\t\t\tp_uniforms.setValue(_gl, 'toneMappingExposure', _this.toneMappingExposure);\n\n\t\t\t\tif (materialProperties.needsLights) {\n\t\t\t\t\t// the current material requires lighting info\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n\t\t\t\t} // refresh uniforms common to several materials\n\n\n\t\t\t\tif (fog && material.fog) {\n\t\t\t\t\tmaterials.refreshFogUniforms(m_uniforms, fog);\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms(m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget);\n\t\t\t\tWebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n\t\t\t}\n\n\t\t\tif (material.isShaderMaterial && material.uniformsNeedUpdate === true) {\n\t\t\t\tWebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\t\t\t}\n\n\t\t\tif (material.isSpriteMaterial) {\n\t\t\t\tp_uniforms.setValue(_gl, 'center', object.center);\n\t\t\t} // common matrices\n\n\n\t\t\tp_uniforms.setValue(_gl, 'modelViewMatrix', object.modelViewMatrix);\n\t\t\tp_uniforms.setValue(_gl, 'normalMatrix', object.normalMatrix);\n\t\t\tp_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld);\n\t\t\treturn program;\n\t\t} // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n\t\tfunction markUniformsLightsNeedsUpdate(uniforms, value) {\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\t\t}\n\n\t\tfunction materialNeedsLights(material) {\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.isShadowMaterial || material.isShaderMaterial && material.lights === true;\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\t\t\treturn _currentActiveCubeFace;\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\t\t\treturn _currentActiveMipmapLevel;\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\t\t\treturn _currentRenderTarget;\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function (renderTarget, colorTexture, depthTexture) {\n\t\t\tproperties.get(renderTarget.texture).__webglTexture = colorTexture;\n\t\t\tproperties.get(renderTarget.depthTexture).__webglTexture = depthTexture;\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\tif (renderTargetProperties.__hasExternalTextures) {\n\t\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\t\tif (!renderTargetProperties.__autoAllocateDepthBuffer) {\n\t\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\t\tif (renderTarget.useRenderToTexture) {\n\t\t\t\t\t\tconsole.warn('render-to-texture extension was disabled because an external texture was provided');\n\t\t\t\t\t\trenderTarget.useRenderToTexture = false;\n\t\t\t\t\t\trenderTarget.useRenderbuffer = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function (renderTarget, defaultFramebuffer) {\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\t\t};\n\n\t\tthis.setRenderTarget = function (renderTarget, activeCubeFace = 0, activeMipmapLevel = 0) {\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\t\t\tlet useDefaultFramebuffer = true;\n\n\t\t\tif (renderTarget) {\n\t\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\n\t\t\t\tif (renderTargetProperties.__useDefaultFramebuffer !== undefined) {\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\t\t\t\t} else if (renderTargetProperties.__webglFramebuffer === undefined) {\n\t\t\t\t\ttextures.setupRenderTarget(renderTarget);\n\t\t\t\t} else if (renderTargetProperties.__hasExternalTextures) {\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures(renderTarget, properties.get(renderTarget.texture).__webglTexture, properties.get(renderTarget.depthTexture).__webglTexture);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif (renderTarget) {\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif (texture.isDataTexture3D || texture.isDataTexture2DArray) {\n\t\t\t\t\tisRenderTarget3D = true;\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n\t\t\t\tif (renderTarget.isWebGLCubeRenderTarget) {\n\t\t\t\t\tframebuffer = __webglFramebuffer[activeCubeFace];\n\t\t\t\t\tisCube = true;\n\t\t\t\t} else if (renderTarget.useRenderbuffer) {\n\t\t\t\t\tframebuffer = properties.get(renderTarget).__webglMultisampledFramebuffer;\n\t\t\t\t} else {\n\t\t\t\t\tframebuffer = __webglFramebuffer;\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy(renderTarget.viewport);\n\n\t\t\t\t_currentScissor.copy(renderTarget.scissor);\n\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\t\t\t} else {\n\t\t\t\t_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();\n\n\t\t\t\t_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();\n\n\t\t\t\t_currentScissorTest = _scissorTest;\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\tif (framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer) {\n\t\t\t\tstate.drawBuffers(renderTarget, framebuffer);\n\t\t\t}\n\n\t\t\tstate.viewport(_currentViewport);\n\t\t\tstate.scissor(_currentScissor);\n\t\t\tstate.setScissorTest(_currentScissorTest);\n\n\t\t\tif (isCube) {\n\t\t\t\tconst textureProperties = properties.get(renderTarget.texture);\n\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel);\n\t\t\t} else if (isRenderTarget3D) {\n\t\t\t\tconst textureProperties = properties.get(renderTarget.texture);\n\t\t\t\tconst layer = activeCubeFace || 0;\n\n\t\t\t\t_gl.framebufferTextureLayer(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer);\n\t\t\t}\n\n\t\t\t_currentMaterialId = -1; // reset current material to ensure correct uniform bindings\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer, activeCubeFaceIndex) {\n\t\t\tif (!(renderTarget && renderTarget.isWebGLRenderTarget)) {\n\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined) {\n\t\t\t\tframebuffer = framebuffer[activeCubeFaceIndex];\n\t\t\t}\n\n\t\t\tif (framebuffer) {\n\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif (textureFormat !== RGBAFormat && utils.convert(textureFormat) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT)) {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = textureType === HalfFloatType && (extensions.has('EXT_color_buffer_half_float') || capabilities.isWebGL2 && extensions.has('EXT_color_buffer_float'));\n\n\t\t\t\t\tif (textureType !== UnsignedByteType && utils.convert(textureType) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t!(textureType === FloatType && (capabilities.isWebGL2 || extensions.has('OES_texture_float') || extensions.has('WEBGL_color_buffer_float'))) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t!halfFloatSupportedByExt) {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) === _gl.FRAMEBUFFER_COMPLETE) {\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\t\t\t\t\t\tif (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\n\t\t\t\t\t\t\t_gl.readPixels(x, y, width, height, utils.convert(textureFormat), utils.convert(textureType), buffer);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\t\t\t\t\tconst framebuffer = _currentRenderTarget !== null ? properties.get(_currentRenderTarget).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function (position, texture, level = 0) {\n\t\t\tif (texture.isFramebufferTexture !== true) {\n\t\t\t\tconsole.error('THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst levelScale = Math.pow(2, -level);\n\t\t\tconst width = Math.floor(texture.image.width * levelScale);\n\t\t\tconst height = Math.floor(texture.image.height * levelScale);\n\t\t\ttextures.setTexture2D(texture, 0);\n\n\t\t\t_gl.copyTexSubImage2D(_gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height);\n\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.copyTextureToTexture = function (position, srcTexture, dstTexture, level = 0) {\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert(dstTexture.format);\n\t\t\tconst glType = utils.convert(dstTexture.type);\n\t\t\ttextures.setTexture2D(dstTexture, 0); // As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\n\n\t\t\tif (srcTexture.isDataTexture) {\n\t\t\t\t_gl.texSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data);\n\t\t\t} else {\n\t\t\t\tif (srcTexture.isCompressedTexture) {\n\t\t\t\t\t_gl.compressedTexSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[0].width, srcTexture.mipmaps[0].height, glFormat, srcTexture.mipmaps[0].data);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.texSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image);\n\t\t\t\t}\n\t\t\t} // Generate mipmaps only when copying level 0\n\n\n\t\t\tif (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(_gl.TEXTURE_2D);\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function (sourceBox, position, srcTexture, dstTexture, level = 0) {\n\t\t\tif (_this.isWebGL1Renderer) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert(dstTexture.format);\n\t\t\tconst glType = utils.convert(dstTexture.type);\n\t\t\tlet glTarget;\n\n\t\t\tif (dstTexture.isDataTexture3D) {\n\t\t\t\ttextures.setTexture3D(dstTexture, 0);\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\t\t\t} else if (dstTexture.isDataTexture2DArray) {\n\t\t\t\ttextures.setTexture2DArray(dstTexture, 0);\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\n\n\t\t\tconst unpackRowLen = _gl.getParameter(_gl.UNPACK_ROW_LENGTH);\n\n\t\t\tconst unpackImageHeight = _gl.getParameter(_gl.UNPACK_IMAGE_HEIGHT);\n\n\t\t\tconst unpackSkipPixels = _gl.getParameter(_gl.UNPACK_SKIP_PIXELS);\n\n\t\t\tconst unpackSkipRows = _gl.getParameter(_gl.UNPACK_SKIP_ROWS);\n\n\t\t\tconst unpackSkipImages = _gl.getParameter(_gl.UNPACK_SKIP_IMAGES);\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[0] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, image.width);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, image.height);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, sourceBox.min.x);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, sourceBox.min.y);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, sourceBox.min.z);\n\n\t\t\tif (srcTexture.isDataTexture || srcTexture.isDataTexture3D) {\n\t\t\t\t_gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data);\n\t\t\t} else {\n\t\t\t\tif (srcTexture.isCompressedTexture) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.');\n\n\t\t\t\t\t_gl.compressedTexSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, unpackRowLen);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, unpackSkipPixels);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, unpackSkipRows);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, unpackSkipImages); // Generate mipmaps only when copying level 0\n\n\n\t\t\tif (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(glTarget);\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.initTexture = function (texture) {\n\t\t\ttextures.setTexture2D(texture, 0);\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.resetState = function () {\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\t\t};\n\n\t\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n\t\t\t\tdetail: this\n\t\t\t}));\n\t\t}\n\t}\n\n\tWebGLRenderer.prototype.isWebGLRenderer = true;\n\n\tclass WebGL1Renderer extends WebGLRenderer {}\n\n\tWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\n\tclass FogExp2 {\n\t\tconstructor(color, density = 0.00025) {\n\t\t\tthis.name = '';\n\t\t\tthis.color = new Color(color);\n\t\t\tthis.density = density;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new FogExp2(this.color, this.density);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn {\n\t\t\t\ttype: 'FogExp2',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tdensity: this.density\n\t\t\t};\n\t\t}\n\n\t}\n\n\tFogExp2.prototype.isFogExp2 = true;\n\n\tclass Fog {\n\t\tconstructor(color, near = 1, far = 1000) {\n\t\t\tthis.name = '';\n\t\t\tthis.color = new Color(color);\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Fog(this.color, this.near, this.far);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn {\n\t\t\t\ttype: 'Fog',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tnear: this.near,\n\t\t\t\tfar: this.far\n\t\t\t};\n\t\t}\n\n\t}\n\n\tFog.prototype.isFog = true;\n\n\tclass Scene extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Scene';\n\t\t\tthis.background = null;\n\t\t\tthis.environment = null;\n\t\t\tthis.fog = null;\n\t\t\tthis.overrideMaterial = null;\n\t\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\t\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n\t\t\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n\t\t\t\t\tdetail: this\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tif (source.background !== null) this.background = source.background.clone();\n\t\t\tif (source.environment !== null) this.environment = source.environment.clone();\n\t\t\tif (source.fog !== null) this.fog = source.fog.clone();\n\t\t\tif (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tif (this.fog !== null) data.object.fog = this.fog.toJSON();\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tScene.prototype.isScene = true;\n\n\tclass InterleavedBuffer {\n\t\tconstructor(array, stride) {\n\t\t\tthis.array = array;\n\t\t\tthis.stride = stride;\n\t\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\t\t\tthis.usage = StaticDrawUsage;\n\t\t\tthis.updateRange = {\n\t\t\t\toffset: 0,\n\t\t\t\tcount: -1\n\t\t\t};\n\t\t\tthis.version = 0;\n\t\t\tthis.uuid = generateUUID();\n\t\t}\n\n\t\tonUploadCallback() {}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t\tsetUsage(value) {\n\t\t\tthis.usage = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.array = new source.array.constructor(source.array);\n\t\t\tthis.count = source.count;\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.usage = source.usage;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyAt(index1, attribute, index2) {\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor (let i = 0, l = this.stride; i < l; i++) {\n\t\t\t\tthis.array[index1 + i] = attribute.array[index2 + i];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(value, offset = 0) {\n\t\t\tthis.array.set(value, offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone(data) {\n\t\t\tif (data.arrayBuffers === undefined) {\n\t\t\t\tdata.arrayBuffers = {};\n\t\t\t}\n\n\t\t\tif (this.array.buffer._uuid === undefined) {\n\t\t\t\tthis.array.buffer._uuid = generateUUID();\n\t\t\t}\n\n\t\t\tif (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n\t\t\t\tdata.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer;\n\t\t\t}\n\n\t\t\tconst array = new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]);\n\t\t\tconst ib = new this.constructor(array, this.stride);\n\t\t\tib.setUsage(this.usage);\n\t\t\treturn ib;\n\t\t}\n\n\t\tonUpload(callback) {\n\t\t\tthis.onUploadCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(data) {\n\t\t\tif (data.arrayBuffers === undefined) {\n\t\t\t\tdata.arrayBuffers = {};\n\t\t\t} // generate UUID for array buffer if necessary\n\n\n\t\t\tif (this.array.buffer._uuid === undefined) {\n\t\t\t\tthis.array.buffer._uuid = generateUUID();\n\t\t\t}\n\n\t\t\tif (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n\t\t\t\tdata.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(new Uint32Array(this.array.buffer));\n\t\t\t} //\n\n\n\t\t\treturn {\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tstride: this.stride\n\t\t\t};\n\t\t}\n\n\t}\n\n\tInterleavedBuffer.prototype.isInterleavedBuffer = true;\n\n\tconst _vector$6 = /*@__PURE__*/new Vector3();\n\n\tclass InterleavedBufferAttribute {\n\t\tconstructor(interleavedBuffer, itemSize, offset, normalized = false) {\n\t\t\tthis.name = '';\n\t\t\tthis.data = interleavedBuffer;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.offset = offset;\n\t\t\tthis.normalized = normalized === true;\n\t\t}\n\n\t\tget count() {\n\t\t\treturn this.data.count;\n\t\t}\n\n\t\tget array() {\n\t\t\treturn this.data.array;\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tthis.data.needsUpdate = value;\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tfor (let i = 0, l = this.data.count; i < l; i++) {\n\t\t\t\t_vector$6.x = this.getX(i);\n\t\t\t\t_vector$6.y = this.getY(i);\n\t\t\t\t_vector$6.z = this.getZ(i);\n\n\t\t\t\t_vector$6.applyMatrix4(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyNormalMatrix(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$6.x = this.getX(i);\n\t\t\t\t_vector$6.y = this.getY(i);\n\t\t\t\t_vector$6.z = this.getZ(i);\n\n\t\t\t\t_vector$6.applyNormalMatrix(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttransformDirection(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$6.x = this.getX(i);\n\t\t\t\t_vector$6.y = this.getY(i);\n\t\t\t\t_vector$6.z = this.getZ(i);\n\n\t\t\t\t_vector$6.transformDirection(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(index, x) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset] = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(index, y) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetZ(index, z) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetW(index, w) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetX(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset];\n\t\t}\n\n\t\tgetY(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 1];\n\t\t}\n\n\t\tgetZ(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 2];\n\t\t}\n\n\t\tgetW(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 3];\n\t\t}\n\n\t\tsetXY(index, x, y) {\n\t\t\tindex = index * this.data.stride + this.offset;\n\t\t\tthis.data.array[index + 0] = x;\n\t\t\tthis.data.array[index + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZ(index, x, y, z) {\n\t\t\tindex = index * this.data.stride + this.offset;\n\t\t\tthis.data.array[index + 0] = x;\n\t\t\tthis.data.array[index + 1] = y;\n\t\t\tthis.data.array[index + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZW(index, x, y, z, w) {\n\t\t\tindex = index * this.data.stride + this.offset;\n\t\t\tthis.data.array[index + 0] = x;\n\t\t\tthis.data.array[index + 1] = y;\n\t\t\tthis.data.array[index + 2] = z;\n\t\t\tthis.data.array[index + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone(data) {\n\t\t\tif (data === undefined) {\n\t\t\t\tconsole.log('THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.');\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor (let i = 0; i < this.count; i++) {\n\t\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\t\tfor (let j = 0; j < this.itemSize; j++) {\n\t\t\t\t\t\tarray.push(this.data.array[index + j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute(new this.array.constructor(array), this.itemSize, this.normalized);\n\t\t\t} else {\n\t\t\t\tif (data.interleavedBuffers === undefined) {\n\t\t\t\t\tdata.interleavedBuffers = {};\n\t\t\t\t}\n\n\t\t\t\tif (data.interleavedBuffers[this.data.uuid] === undefined) {\n\t\t\t\t\tdata.interleavedBuffers[this.data.uuid] = this.data.clone(data);\n\t\t\t\t}\n\n\t\t\t\treturn new InterleavedBufferAttribute(data.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(data) {\n\t\t\tif (data === undefined) {\n\t\t\t\tconsole.log('THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.');\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor (let i = 0; i < this.count; i++) {\n\t\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\t\tfor (let j = 0; j < this.itemSize; j++) {\n\t\t\t\t\t\tarray.push(this.data.array[index + j]);\n\t\t\t\t\t}\n\t\t\t\t} // deinterleave data and save it as an ordinary buffer attribute for now\n\n\n\t\t\t\treturn {\n\t\t\t\t\titemSize: this.itemSize,\n\t\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnormalized: this.normalized\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// save as true interlaved attribtue\n\t\t\t\tif (data.interleavedBuffers === undefined) {\n\t\t\t\t\tdata.interleavedBuffers = {};\n\t\t\t\t}\n\n\t\t\t\tif (data.interleavedBuffers[this.data.uuid] === undefined) {\n\t\t\t\t\tdata.interleavedBuffers[this.data.uuid] = this.data.toJSON(data);\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\t\titemSize: this.itemSize,\n\t\t\t\t\tdata: this.data.uuid,\n\t\t\t\t\toffset: this.offset,\n\t\t\t\t\tnormalized: this.normalized\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t}\n\n\tInterleavedBufferAttribute.prototype.isInterleavedBufferAttribute = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\trotation: <float>,\n\t *\tsizeAttenuation: <bool>\n\t * }\n\t */\n\n\tclass SpriteMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'SpriteMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.rotation = 0;\n\t\t\tthis.sizeAttenuation = true;\n\t\t\tthis.transparent = true;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.rotation = source.rotation;\n\t\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSpriteMaterial.prototype.isSpriteMaterial = true;\n\n\tlet _geometry;\n\n\tconst _intersectPoint = /*@__PURE__*/new Vector3();\n\n\tconst _worldScale = /*@__PURE__*/new Vector3();\n\n\tconst _mvPosition = /*@__PURE__*/new Vector3();\n\n\tconst _alignedPosition = /*@__PURE__*/new Vector2();\n\n\tconst _rotatedPosition = /*@__PURE__*/new Vector2();\n\n\tconst _viewWorldMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _vA = /*@__PURE__*/new Vector3();\n\n\tconst _vB = /*@__PURE__*/new Vector3();\n\n\tconst _vC = /*@__PURE__*/new Vector3();\n\n\tconst _uvA = /*@__PURE__*/new Vector2();\n\n\tconst _uvB = /*@__PURE__*/new Vector2();\n\n\tconst _uvC = /*@__PURE__*/new Vector2();\n\n\tclass Sprite extends Object3D {\n\t\tconstructor(material) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Sprite';\n\n\t\t\tif (_geometry === undefined) {\n\t\t\t\t_geometry = new BufferGeometry();\n\t\t\t\tconst float32Array = new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]);\n\t\t\t\tconst interleavedBuffer = new InterleavedBuffer(float32Array, 5);\n\n\t\t\t\t_geometry.setIndex([0, 1, 2, 0, 2, 3]);\n\n\t\t\t\t_geometry.setAttribute('position', new InterleavedBufferAttribute(interleavedBuffer, 3, 0, false));\n\n\t\t\t\t_geometry.setAttribute('uv', new InterleavedBufferAttribute(interleavedBuffer, 2, 3, false));\n\t\t\t}\n\n\t\t\tthis.geometry = _geometry;\n\t\t\tthis.material = material !== undefined ? material : new SpriteMaterial();\n\t\t\tthis.center = new Vector2(0.5, 0.5);\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tif (raycaster.camera === null) {\n\t\t\t\tconsole.error('THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.');\n\t\t\t}\n\n\t\t\t_worldScale.setFromMatrixScale(this.matrixWorld);\n\n\t\t\t_viewWorldMatrix.copy(raycaster.camera.matrixWorld);\n\n\t\t\tthis.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse, this.matrixWorld);\n\n\t\t\t_mvPosition.setFromMatrixPosition(this.modelViewMatrix);\n\n\t\t\tif (raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false) {\n\t\t\t\t_worldScale.multiplyScalar(-_mvPosition.z);\n\t\t\t}\n\n\t\t\tconst rotation = this.material.rotation;\n\t\t\tlet sin, cos;\n\n\t\t\tif (rotation !== 0) {\n\t\t\t\tcos = Math.cos(rotation);\n\t\t\t\tsin = Math.sin(rotation);\n\t\t\t}\n\n\t\t\tconst center = this.center;\n\t\t\ttransformVertex(_vA.set(-0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\t\t\ttransformVertex(_vB.set(0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\t\t\ttransformVertex(_vC.set(0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\n\t\t\t_uvA.set(0, 0);\n\n\t\t\t_uvB.set(1, 0);\n\n\t\t\t_uvC.set(1, 1); // check first triangle\n\n\n\t\t\tlet intersect = raycaster.ray.intersectTriangle(_vA, _vB, _vC, false, _intersectPoint);\n\n\t\t\tif (intersect === null) {\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex(_vB.set(-0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\n\t\t\t\t_uvB.set(0, 1);\n\n\t\t\t\tintersect = raycaster.ray.intersectTriangle(_vA, _vC, _vB, false, _intersectPoint);\n\n\t\t\t\tif (intersect === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo(_intersectPoint);\n\t\t\tif (distance < raycaster.near || distance > raycaster.far) return;\n\t\t\tintersects.push({\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: _intersectPoint.clone(),\n\t\t\t\tuv: Triangle.getUV(_intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2()),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\t\t\t});\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tif (source.center !== undefined) this.center.copy(source.center);\n\t\t\tthis.material = source.material;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSprite.prototype.isSprite = true;\n\n\tfunction transformVertex(vertexPosition, mvPosition, center, scale, sin, cos) {\n\t\t// compute position in camera space\n\t\t_alignedPosition.subVectors(vertexPosition, center).addScalar(0.5).multiply(scale); // to check if rotation is not zero\n\n\n\t\tif (sin !== undefined) {\n\t\t\t_rotatedPosition.x = cos * _alignedPosition.x - sin * _alignedPosition.y;\n\t\t\t_rotatedPosition.y = sin * _alignedPosition.x + cos * _alignedPosition.y;\n\t\t} else {\n\t\t\t_rotatedPosition.copy(_alignedPosition);\n\t\t}\n\n\t\tvertexPosition.copy(mvPosition);\n\t\tvertexPosition.x += _rotatedPosition.x;\n\t\tvertexPosition.y += _rotatedPosition.y; // transform to world space\n\n\t\tvertexPosition.applyMatrix4(_viewWorldMatrix);\n\t}\n\n\tconst _v1$2 = /*@__PURE__*/new Vector3();\n\n\tconst _v2$1 = /*@__PURE__*/new Vector3();\n\n\tclass LOD extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis._currentLevel = 0;\n\t\t\tthis.type = 'LOD';\n\t\t\tObject.defineProperties(this, {\n\t\t\t\tlevels: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: []\n\t\t\t\t},\n\t\t\t\tisLOD: {\n\t\t\t\t\tvalue: true\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.autoUpdate = true;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source, false);\n\t\t\tconst levels = source.levels;\n\n\t\t\tfor (let i = 0, l = levels.length; i < l; i++) {\n\t\t\t\tconst level = levels[i];\n\t\t\t\tthis.addLevel(level.object.clone(), level.distance);\n\t\t\t}\n\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\treturn this;\n\t\t}\n\n\t\taddLevel(object, distance = 0) {\n\t\t\tdistance = Math.abs(distance);\n\t\t\tconst levels = this.levels;\n\t\t\tlet l;\n\n\t\t\tfor (l = 0; l < levels.length; l++) {\n\t\t\t\tif (distance < levels[l].distance) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlevels.splice(l, 0, {\n\t\t\t\tdistance: distance,\n\t\t\t\tobject: object\n\t\t\t});\n\t\t\tthis.add(object);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetCurrentLevel() {\n\t\t\treturn this._currentLevel;\n\t\t}\n\n\t\tgetObjectForDistance(distance) {\n\t\t\tconst levels = this.levels;\n\n\t\t\tif (levels.length > 0) {\n\t\t\t\tlet i, l;\n\n\t\t\t\tfor (i = 1, l = levels.length; i < l; i++) {\n\t\t\t\t\tif (distance < levels[i].distance) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn levels[i - 1].object;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst levels = this.levels;\n\n\t\t\tif (levels.length > 0) {\n\t\t\t\t_v1$2.setFromMatrixPosition(this.matrixWorld);\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(_v1$2);\n\t\t\t\tthis.getObjectForDistance(distance).raycast(raycaster, intersects);\n\t\t\t}\n\t\t}\n\n\t\tupdate(camera) {\n\t\t\tconst levels = this.levels;\n\n\t\t\tif (levels.length > 1) {\n\t\t\t\t_v1$2.setFromMatrixPosition(camera.matrixWorld);\n\n\t\t\t\t_v2$1.setFromMatrixPosition(this.matrixWorld);\n\n\t\t\t\tconst distance = _v1$2.distanceTo(_v2$1) / camera.zoom;\n\t\t\t\tlevels[0].object.visible = true;\n\t\t\t\tlet i, l;\n\n\t\t\t\tfor (i = 1, l = levels.length; i < l; i++) {\n\t\t\t\t\tif (distance >= levels[i].distance) {\n\t\t\t\t\t\tlevels[i - 1].object.visible = false;\n\t\t\t\t\t\tlevels[i].object.visible = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._currentLevel = i - 1;\n\n\t\t\t\tfor (; i < l; i++) {\n\t\t\t\t\tlevels[i].object.visible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tif (this.autoUpdate === false) data.object.autoUpdate = false;\n\t\t\tdata.object.levels = [];\n\t\t\tconst levels = this.levels;\n\n\t\t\tfor (let i = 0, l = levels.length; i < l; i++) {\n\t\t\t\tconst level = levels[i];\n\t\t\t\tdata.object.levels.push({\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tconst _basePosition = /*@__PURE__*/new Vector3();\n\n\tconst _skinIndex = /*@__PURE__*/new Vector4();\n\n\tconst _skinWeight = /*@__PURE__*/new Vector4();\n\n\tconst _vector$5 = /*@__PURE__*/new Vector3();\n\n\tconst _matrix = /*@__PURE__*/new Matrix4();\n\n\tclass SkinnedMesh extends Mesh {\n\t\tconstructor(geometry, material) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'SkinnedMesh';\n\t\t\tthis.bindMode = 'attached';\n\t\t\tthis.bindMatrix = new Matrix4();\n\t\t\tthis.bindMatrixInverse = new Matrix4();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.bindMode = source.bindMode;\n\t\t\tthis.bindMatrix.copy(source.bindMatrix);\n\t\t\tthis.bindMatrixInverse.copy(source.bindMatrixInverse);\n\t\t\tthis.skeleton = source.skeleton;\n\t\t\treturn this;\n\t\t}\n\n\t\tbind(skeleton, bindMatrix) {\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif (bindMatrix === undefined) {\n\t\t\t\tthis.updateMatrixWorld(true);\n\t\t\t\tthis.skeleton.calculateInverses();\n\t\t\t\tbindMatrix = this.matrixWorld;\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy(bindMatrix);\n\t\t\tthis.bindMatrixInverse.copy(bindMatrix).invert();\n\t\t}\n\n\t\tpose() {\n\t\t\tthis.skeleton.pose();\n\t\t}\n\n\t\tnormalizeSkinWeights() {\n\t\t\tconst vector = new Vector4();\n\t\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor (let i = 0, l = skinWeight.count; i < l; i++) {\n\t\t\t\tvector.x = skinWeight.getX(i);\n\t\t\t\tvector.y = skinWeight.getY(i);\n\t\t\t\tvector.z = skinWeight.getZ(i);\n\t\t\t\tvector.w = skinWeight.getW(i);\n\t\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\t\tif (scale !== Infinity) {\n\t\t\t\t\tvector.multiplyScalar(scale);\n\t\t\t\t} else {\n\t\t\t\t\tvector.set(1, 0, 0, 0); // do something reasonable\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW(i, vector.x, vector.y, vector.z, vector.w);\n\t\t\t}\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\n\t\t\tif (this.bindMode === 'attached') {\n\t\t\t\tthis.bindMatrixInverse.copy(this.matrixWorld).invert();\n\t\t\t} else if (this.bindMode === 'detached') {\n\t\t\t\tthis.bindMatrixInverse.copy(this.bindMatrix).invert();\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode);\n\t\t\t}\n\t\t}\n\n\t\tboneTransform(index, target) {\n\t\t\tconst skeleton = this.skeleton;\n\t\t\tconst geometry = this.geometry;\n\n\t\t\t_skinIndex.fromBufferAttribute(geometry.attributes.skinIndex, index);\n\n\t\t\t_skinWeight.fromBufferAttribute(geometry.attributes.skinWeight, index);\n\n\t\t\t_basePosition.copy(target).applyMatrix4(this.bindMatrix);\n\n\t\t\ttarget.set(0, 0, 0);\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tconst weight = _skinWeight.getComponent(i);\n\n\t\t\t\tif (weight !== 0) {\n\t\t\t\t\tconst boneIndex = _skinIndex.getComponent(i);\n\n\t\t\t\t\t_matrix.multiplyMatrices(skeleton.bones[boneIndex].matrixWorld, skeleton.boneInverses[boneIndex]);\n\n\t\t\t\t\ttarget.addScaledVector(_vector$5.copy(_basePosition).applyMatrix4(_matrix), weight);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn target.applyMatrix4(this.bindMatrixInverse);\n\t\t}\n\n\t}\n\n\tSkinnedMesh.prototype.isSkinnedMesh = true;\n\n\tclass Bone extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Bone';\n\t\t}\n\n\t}\n\n\tBone.prototype.isBone = true;\n\n\tclass DataTexture extends Texture {\n\t\tconstructor(data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding) {\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n\t\t\tthis.image = {\n\t\t\t\tdata: data,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\t\t\tthis.magFilter = magFilter;\n\t\t\tthis.minFilter = minFilter;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.flipY = false;\n\t\t\tthis.unpackAlignment = 1;\n\t\t}\n\n\t}\n\n\tDataTexture.prototype.isDataTexture = true;\n\n\tconst _offsetMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _identityMatrix = /*@__PURE__*/new Matrix4();\n\n\tclass Skeleton {\n\t\tconstructor(bones = [], boneInverses = []) {\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.bones = bones.slice(0);\n\t\t\tthis.boneInverses = boneInverses;\n\t\t\tthis.boneMatrices = null;\n\t\t\tthis.boneTexture = null;\n\t\t\tthis.boneTextureSize = 0;\n\t\t\tthis.frame = -1;\n\t\t\tthis.init();\n\t\t}\n\n\t\tinit() {\n\t\t\tconst bones = this.bones;\n\t\t\tconst boneInverses = this.boneInverses;\n\t\t\tthis.boneMatrices = new Float32Array(bones.length * 16); // calculate inverse bone matrices if necessary\n\n\t\t\tif (boneInverses.length === 0) {\n\t\t\t\tthis.calculateInverses();\n\t\t\t} else {\n\t\t\t\t// handle special case\n\t\t\t\tif (bones.length !== boneInverses.length) {\n\t\t\t\t\tconsole.warn('THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.');\n\t\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\t\t\tthis.boneInverses.push(new Matrix4());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcalculateInverses() {\n\t\t\tthis.boneInverses.length = 0;\n\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst inverse = new Matrix4();\n\n\t\t\t\tif (this.bones[i]) {\n\t\t\t\t\tinverse.copy(this.bones[i].matrixWorld).invert();\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push(inverse);\n\t\t\t}\n\t\t}\n\n\t\tpose() {\n\t\t\t// recover the bind-time world matrices\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst bone = this.bones[i];\n\n\t\t\t\tif (bone) {\n\t\t\t\t\tbone.matrixWorld.copy(this.boneInverses[i]).invert();\n\t\t\t\t}\n\t\t\t} // compute the local matrices, positions, rotations and scales\n\n\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst bone = this.bones[i];\n\n\t\t\t\tif (bone) {\n\t\t\t\t\tif (bone.parent && bone.parent.isBone) {\n\t\t\t\t\t\tbone.matrix.copy(bone.parent.matrixWorld).invert();\n\t\t\t\t\t\tbone.matrix.multiply(bone.matrixWorld);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbone.matrix.copy(bone.matrixWorld);\n\t\t\t\t\t}\n\n\t\t\t\t\tbone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst bones = this.bones;\n\t\t\tconst boneInverses = this.boneInverses;\n\t\t\tconst boneMatrices = this.boneMatrices;\n\t\t\tconst boneTexture = this.boneTexture; // flatten bone matrices to array\n\n\t\t\tfor (let i = 0, il = bones.length; i < il; i++) {\n\t\t\t\t// compute the offset between the current and the original transform\n\t\t\t\tconst matrix = bones[i] ? bones[i].matrixWorld : _identityMatrix;\n\n\t\t\t\t_offsetMatrix.multiplyMatrices(matrix, boneInverses[i]);\n\n\t\t\t\t_offsetMatrix.toArray(boneMatrices, i * 16);\n\t\t\t}\n\n\t\t\tif (boneTexture !== null) {\n\t\t\t\tboneTexture.needsUpdate = true;\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Skeleton(this.bones, this.boneInverses);\n\t\t}\n\n\t\tcomputeBoneTexture() {\n\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t//\t\t\tRGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t//\twith\t8x8\tpixel texture max\t 16 bones * 4 pixels =\t(8 * 8)\n\t\t\t//\t\t\t 16x16 pixel texture max\t 64 bones * 4 pixels = (16 * 16)\n\t\t\t//\t\t\t 32x32 pixel texture max\t256 bones * 4 pixels = (32 * 32)\n\t\t\t//\t\t\t 64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\t\t\tlet size = Math.sqrt(this.bones.length * 4); // 4 pixels needed for 1 matrix\n\n\t\t\tsize = ceilPowerOfTwo(size);\n\t\t\tsize = Math.max(size, 4);\n\t\t\tconst boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\n\n\t\t\tboneMatrices.set(this.boneMatrices); // copy current values\n\n\t\t\tconst boneTexture = new DataTexture(boneMatrices, size, size, RGBAFormat, FloatType);\n\t\t\tboneTexture.needsUpdate = true;\n\t\t\tthis.boneMatrices = boneMatrices;\n\t\t\tthis.boneTexture = boneTexture;\n\t\t\tthis.boneTextureSize = size;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetBoneByName(name) {\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst bone = this.bones[i];\n\n\t\t\t\tif (bone.name === name) {\n\t\t\t\t\treturn bone;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\tdispose() {\n\t\t\tif (this.boneTexture !== null) {\n\t\t\t\tthis.boneTexture.dispose();\n\t\t\t\tthis.boneTexture = null;\n\t\t\t}\n\t\t}\n\n\t\tfromJSON(json, bones) {\n\t\t\tthis.uuid = json.uuid;\n\n\t\t\tfor (let i = 0, l = json.bones.length; i < l; i++) {\n\t\t\t\tconst uuid = json.bones[i];\n\t\t\t\tlet bone = bones[uuid];\n\n\t\t\t\tif (bone === undefined) {\n\t\t\t\t\tconsole.warn('THREE.Skeleton: No bone found with UUID:', uuid);\n\t\t\t\t\tbone = new Bone();\n\t\t\t\t}\n\n\t\t\t\tthis.bones.push(bone);\n\t\t\t\tthis.boneInverses.push(new Matrix4().fromArray(json.boneInverses[i]));\n\t\t\t}\n\n\t\t\tthis.init();\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Skeleton',\n\t\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t\t},\n\t\t\t\tbones: [],\n\t\t\t\tboneInverses: []\n\t\t\t};\n\t\t\tdata.uuid = this.uuid;\n\t\t\tconst bones = this.bones;\n\t\t\tconst boneInverses = this.boneInverses;\n\n\t\t\tfor (let i = 0, l = bones.length; i < l; i++) {\n\t\t\t\tconst bone = bones[i];\n\t\t\t\tdata.bones.push(bone.uuid);\n\t\t\t\tconst boneInverse = boneInverses[i];\n\t\t\t\tdata.boneInverses.push(boneInverse.toArray());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tclass InstancedBufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized, meshPerAttribute = 1) {\n\t\t\tif (typeof normalized === 'number') {\n\t\t\t\tmeshPerAttribute = normalized;\n\t\t\t\tnormalized = false;\n\t\t\t\tconsole.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.');\n\t\t\t}\n\n\t\t\tsuper(array, itemSize, normalized);\n\t\t\tthis.meshPerAttribute = meshPerAttribute;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\t\t\tdata.isInstancedBufferAttribute = true;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tInstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\n\n\tconst _instanceLocalMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _instanceWorldMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _instanceIntersects = [];\n\n\tconst _mesh = /*@__PURE__*/new Mesh();\n\n\tclass InstancedMesh extends Mesh {\n\t\tconstructor(geometry, material, count) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.instanceMatrix = new InstancedBufferAttribute(new Float32Array(count * 16), 16);\n\t\t\tthis.instanceColor = null;\n\t\t\tthis.count = count;\n\t\t\tthis.frustumCulled = false;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.instanceMatrix.copy(source.instanceMatrix);\n\t\t\tif (source.instanceColor !== null) this.instanceColor = source.instanceColor.clone();\n\t\t\tthis.count = source.count;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetColorAt(index, color) {\n\t\t\tcolor.fromArray(this.instanceColor.array, index * 3);\n\t\t}\n\n\t\tgetMatrixAt(index, matrix) {\n\t\t\tmatrix.fromArray(this.instanceMatrix.array, index * 16);\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tconst raycastTimes = this.count;\n\t\t\t_mesh.geometry = this.geometry;\n\t\t\t_mesh.material = this.material;\n\t\t\tif (_mesh.material === undefined) return;\n\n\t\t\tfor (let instanceId = 0; instanceId < raycastTimes; instanceId++) {\n\t\t\t\t// calculate the world matrix for each instance\n\t\t\t\tthis.getMatrixAt(instanceId, _instanceLocalMatrix);\n\n\t\t\t\t_instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix); // the mesh represents this single instance\n\n\n\t\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t\t_mesh.raycast(raycaster, _instanceIntersects); // process the result of raycast\n\n\n\t\t\t\tfor (let i = 0, l = _instanceIntersects.length; i < l; i++) {\n\t\t\t\t\tconst intersect = _instanceIntersects[i];\n\t\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\t\tintersect.object = this;\n\t\t\t\t\tintersects.push(intersect);\n\t\t\t\t}\n\n\t\t\t\t_instanceIntersects.length = 0;\n\t\t\t}\n\t\t}\n\n\t\tsetColorAt(index, color) {\n\t\t\tif (this.instanceColor === null) {\n\t\t\t\tthis.instanceColor = new InstancedBufferAttribute(new Float32Array(this.instanceMatrix.count * 3), 3);\n\t\t\t}\n\n\t\t\tcolor.toArray(this.instanceColor.array, index * 3);\n\t\t}\n\n\t\tsetMatrixAt(index, matrix) {\n\t\t\tmatrix.toArray(this.instanceMatrix.array, index * 16);\n\t\t}\n\n\t\tupdateMorphTargets() {}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t}\n\n\tInstancedMesh.prototype.isInstancedMesh = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tlinewidth: <float>,\n\t *\tlinecap: \"round\",\n\t *\tlinejoin: \"round\"\n\t * }\n\t */\n\n\tclass LineBasicMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineBasicMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.linewidth = 1;\n\t\t\tthis.linecap = 'round';\n\t\t\tthis.linejoin = 'round';\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.linewidth = source.linewidth;\n\t\t\tthis.linecap = source.linecap;\n\t\t\tthis.linejoin = source.linejoin;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n\tconst _start$1 = /*@__PURE__*/new Vector3();\n\n\tconst _end$1 = /*@__PURE__*/new Vector3();\n\n\tconst _inverseMatrix$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _ray$1 = /*@__PURE__*/new Ray();\n\n\tconst _sphere$1 = /*@__PURE__*/new Sphere();\n\n\tclass Line extends Object3D {\n\t\tconstructor(geometry = new BufferGeometry(), material = new LineBasicMaterial()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Line';\n\t\t\tthis.geometry = geometry;\n\t\t\tthis.material = material;\n\t\t\tthis.updateMorphTargets();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\t\t\treturn this;\n\t\t}\n\n\t\tcomputeLineDistances() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\t// we assume non-indexed geometry\n\t\t\t\tif (geometry.index === null) {\n\t\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\t\tconst lineDistances = [0];\n\n\t\t\t\t\tfor (let i = 1, l = positionAttribute.count; i < l; i++) {\n\t\t\t\t\t\t_start$1.fromBufferAttribute(positionAttribute, i - 1);\n\n\t\t\t\t\t\t_end$1.fromBufferAttribute(positionAttribute, i);\n\n\t\t\t\t\t\tlineDistances[i] = lineDistances[i - 1];\n\t\t\t\t\t\tlineDistances[i] += _start$1.distanceTo(_end$1);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tconst threshold = raycaster.params.Line.threshold;\n\t\t\tconst drawRange = geometry.drawRange; // Checking boundingSphere distance to ray\n\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$1.copy(geometry.boundingSphere);\n\n\t\t\t_sphere$1.applyMatrix4(matrixWorld);\n\n\t\t\t_sphere$1.radius += threshold;\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere$1) === false) return; //\n\n\t\t\t_inverseMatrix$1.copy(matrixWorld).invert();\n\n\t\t\t_ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);\n\n\t\t\tconst localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n\t\t\tconst localThresholdSq = localThreshold * localThreshold;\n\t\t\tconst vStart = new Vector3();\n\t\t\tconst vEnd = new Vector3();\n\t\t\tconst interSegment = new Vector3();\n\t\t\tconst interRay = new Vector3();\n\t\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tconst attributes = geometry.attributes;\n\t\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, l = end - 1; i < l; i += step) {\n\t\t\t\t\t\tconst a = index.getX(i);\n\t\t\t\t\t\tconst b = index.getX(i + 1);\n\t\t\t\t\t\tvStart.fromBufferAttribute(positionAttribute, a);\n\t\t\t\t\t\tvEnd.fromBufferAttribute(positionAttribute, b);\n\n\t\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n\n\t\t\t\t\t\tif (distSq > localThresholdSq) continue;\n\t\t\t\t\t\tinterRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(interRay);\n\t\t\t\t\t\tif (distance < raycaster.near || distance > raycaster.far) continue;\n\t\t\t\t\t\tintersects.push({\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4(this.matrixWorld),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, l = end - 1; i < l; i += step) {\n\t\t\t\t\t\tvStart.fromBufferAttribute(positionAttribute, i);\n\t\t\t\t\t\tvEnd.fromBufferAttribute(positionAttribute, i + 1);\n\n\t\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n\n\t\t\t\t\t\tif (distSq > localThresholdSq) continue;\n\t\t\t\t\t\tinterRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(interRay);\n\t\t\t\t\t\tif (distance < raycaster.near || distance > raycaster.far) continue;\n\t\t\t\t\t\tintersects.push({\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4(this.matrixWorld),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\t\t}\n\n\t\tupdateMorphTargets() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\t\tconst keys = Object.keys(morphAttributes);\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\n\n\t\t\t\t\tif (morphAttribute !== undefined) {\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\n\t\t\t\t\tconsole.error('THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tLine.prototype.isLine = true;\n\n\tconst _start = /*@__PURE__*/new Vector3();\n\n\tconst _end = /*@__PURE__*/new Vector3();\n\n\tclass LineSegments extends Line {\n\t\tconstructor(geometry, material) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'LineSegments';\n\t\t}\n\n\t\tcomputeLineDistances() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\t// we assume non-indexed geometry\n\t\t\t\tif (geometry.index === null) {\n\t\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\t\tconst lineDistances = [];\n\n\t\t\t\t\tfor (let i = 0, l = positionAttribute.count; i < l; i += 2) {\n\t\t\t\t\t\t_start.fromBufferAttribute(positionAttribute, i);\n\n\t\t\t\t\t\t_end.fromBufferAttribute(positionAttribute, i + 1);\n\n\t\t\t\t\t\tlineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\n\t\t\t\t\t\tlineDistances[i + 1] = lineDistances[i] + _start.distanceTo(_end);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineSegments.prototype.isLineSegments = true;\n\n\tclass LineLoop extends Line {\n\t\tconstructor(geometry, material) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'LineLoop';\n\t\t}\n\n\t}\n\n\tLineLoop.prototype.isLineLoop = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tsize: <float>,\n\t *\tsizeAttenuation: <bool>\n\t *\n\t * }\n\t */\n\n\tclass PointsMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PointsMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.size = 1;\n\t\t\tthis.sizeAttenuation = true;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.size = source.size;\n\t\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tPointsMaterial.prototype.isPointsMaterial = true;\n\n\tconst _inverseMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _ray = /*@__PURE__*/new Ray();\n\n\tconst _sphere = /*@__PURE__*/new Sphere();\n\n\tconst _position$2 = /*@__PURE__*/new Vector3();\n\n\tclass Points extends Object3D {\n\t\tconstructor(geometry = new BufferGeometry(), material = new PointsMaterial()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Points';\n\t\t\tthis.geometry = geometry;\n\t\t\tthis.material = material;\n\t\t\tthis.updateMorphTargets();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\t\t\treturn this;\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tconst threshold = raycaster.params.Points.threshold;\n\t\t\tconst drawRange = geometry.drawRange; // Checking boundingSphere distance to ray\n\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere.copy(geometry.boundingSphere);\n\n\t\t\t_sphere.applyMatrix4(matrixWorld);\n\n\t\t\t_sphere.radius += threshold;\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere) === false) return; //\n\n\t\t\t_inverseMatrix.copy(matrixWorld).invert();\n\n\t\t\t_ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\n\n\t\t\tconst localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n\t\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tconst attributes = geometry.attributes;\n\t\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, il = end; i < il; i++) {\n\t\t\t\t\t\tconst a = index.getX(i);\n\n\t\t\t\t\t\t_position$2.fromBufferAttribute(positionAttribute, a);\n\n\t\t\t\t\t\ttestPoint(_position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, l = end; i < l; i++) {\n\t\t\t\t\t\t_position$2.fromBufferAttribute(positionAttribute, i);\n\n\t\t\t\t\t\ttestPoint(_position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.error('THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\t\t}\n\n\t\tupdateMorphTargets() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\t\tconst keys = Object.keys(morphAttributes);\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\n\n\t\t\t\t\tif (morphAttribute !== undefined) {\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\n\t\t\t\t\tconsole.error('THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tPoints.prototype.isPoints = true;\n\n\tfunction testPoint(point, index, localThresholdSq, matrixWorld, raycaster, intersects, object) {\n\t\tconst rayPointDistanceSq = _ray.distanceSqToPoint(point);\n\n\t\tif (rayPointDistanceSq < localThresholdSq) {\n\t\t\tconst intersectPoint = new Vector3();\n\n\t\t\t_ray.closestPointToPoint(point, intersectPoint);\n\n\t\t\tintersectPoint.applyMatrix4(matrixWorld);\n\t\t\tconst distance = raycaster.ray.origin.distanceTo(intersectPoint);\n\t\t\tif (distance < raycaster.near || distance > raycaster.far) return;\n\t\t\tintersects.push({\n\t\t\t\tdistance: distance,\n\t\t\t\tdistanceToRay: Math.sqrt(rayPointDistanceSq),\n\t\t\t\tpoint: intersectPoint,\n\t\t\t\tindex: index,\n\t\t\t\tface: null,\n\t\t\t\tobject: object\n\t\t\t});\n\t\t}\n\t}\n\n\tclass VideoTexture extends Texture {\n\t\tconstructor(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n\t\t\tsuper(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n\t\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tconst scope = this;\n\n\t\t\tfunction updateVideo() {\n\t\t\t\tscope.needsUpdate = true;\n\t\t\t\tvideo.requestVideoFrameCallback(updateVideo);\n\t\t\t}\n\n\t\t\tif ('requestVideoFrameCallback' in video) {\n\t\t\t\tvideo.requestVideoFrameCallback(updateVideo);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.image).copy(this);\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst video = this.image;\n\t\t\tconst hasVideoFrameCallback = ('requestVideoFrameCallback' in video);\n\n\t\t\tif (hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA) {\n\t\t\t\tthis.needsUpdate = true;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tVideoTexture.prototype.isVideoTexture = true;\n\n\tclass FramebufferTexture extends Texture {\n\t\tconstructor(width, height, format) {\n\t\t\tsuper({\n\t\t\t\twidth,\n\t\t\t\theight\n\t\t\t});\n\t\t\tthis.format = format;\n\t\t\tthis.magFilter = NearestFilter;\n\t\t\tthis.minFilter = NearestFilter;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\n\t}\n\n\tFramebufferTexture.prototype.isFramebufferTexture = true;\n\n\tclass CompressedTexture extends Texture {\n\t\tconstructor(mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n\t\t\tthis.image = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\t\t\tthis.mipmaps = mipmaps; // no flipping for cube textures\n\t\t\t// (also flipping doesn't work for compressed textures )\n\n\t\t\tthis.flipY = false; // can't generate mipmaps for compressed textures\n\t\t\t// mips must be embedded in DDS files\n\n\t\t\tthis.generateMipmaps = false;\n\t\t}\n\n\t}\n\n\tCompressedTexture.prototype.isCompressedTexture = true;\n\n\tclass CanvasTexture extends Texture {\n\t\tconstructor(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n\t\t\tsuper(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\n\t}\n\n\tCanvasTexture.prototype.isCanvasTexture = true;\n\n\tclass CircleGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CircleGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tsegments: segments,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\tsegments = Math.max(3, segments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst uv = new Vector2(); // center point\n\n\t\t\tvertices.push(0, 0, 0);\n\t\t\tnormals.push(0, 0, 1);\n\t\t\tuvs.push(0.5, 0.5);\n\n\t\t\tfor (let s = 0, i = 3; s <= segments; s++, i += 3) {\n\t\t\t\tconst segment = thetaStart + s / segments * thetaLength; // vertex\n\n\t\t\t\tvertex.x = radius * Math.cos(segment);\n\t\t\t\tvertex.y = radius * Math.sin(segment);\n\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\tnormals.push(0, 0, 1); // uvs\n\n\t\t\t\tuv.x = (vertices[i] / radius + 1) / 2;\n\t\t\t\tuv.y = (vertices[i + 1] / radius + 1) / 2;\n\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t} // indices\n\n\n\t\t\tfor (let i = 1; i <= segments; i++) {\n\t\t\t\tindices.push(i, i + 1, 0);\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new CircleGeometry(data.radius, data.segments, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass CylinderGeometry extends BufferGeometry {\n\t\tconstructor(radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CylinderGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradiusTop: radiusTop,\n\t\t\t\tradiusBottom: radiusBottom,\n\t\t\t\theight: height,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\topenEnded: openEnded,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\tconst scope = this;\n\t\t\tradialSegments = Math.floor(radialSegments);\n\t\t\theightSegments = Math.floor(heightSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tlet index = 0;\n\t\t\tconst indexArray = [];\n\t\t\tconst halfHeight = height / 2;\n\t\t\tlet groupStart = 0; // generate geometry\n\n\t\t\tgenerateTorso();\n\n\t\t\tif (openEnded === false) {\n\t\t\t\tif (radiusTop > 0) generateCap(true);\n\t\t\t\tif (radiusBottom > 0) generateCap(false);\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n\t\t\tfunction generateTorso() {\n\t\t\t\tconst normal = new Vector3();\n\t\t\t\tconst vertex = new Vector3();\n\t\t\t\tlet groupCount = 0; // this will be used to calculate the normal\n\n\t\t\t\tconst slope = (radiusBottom - radiusTop) / height; // generate vertices, normals and uvs\n\n\t\t\t\tfor (let y = 0; y <= heightSegments; y++) {\n\t\t\t\t\tconst indexRow = [];\n\t\t\t\t\tconst v = y / heightSegments; // calculate the radius of the current row\n\n\t\t\t\t\tconst radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n\t\t\t\t\tfor (let x = 0; x <= radialSegments; x++) {\n\t\t\t\t\t\tconst u = x / radialSegments;\n\t\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\t\t\t\t\t\tconst sinTheta = Math.sin(theta);\n\t\t\t\t\t\tconst cosTheta = Math.cos(theta); // vertex\n\n\t\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\t\tvertex.y = -v * height + halfHeight;\n\t\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\t\tnormal.set(sinTheta, slope, cosTheta).normalize();\n\t\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\t\tuvs.push(u, 1 - v); // save index of vertex in respective row\n\n\t\t\t\t\t\tindexRow.push(index++);\n\t\t\t\t\t} // now save vertices of the row in our index array\n\n\n\t\t\t\t\tindexArray.push(indexRow);\n\t\t\t\t} // generate indices\n\n\n\t\t\t\tfor (let x = 0; x < radialSegments; x++) {\n\t\t\t\t\tfor (let y = 0; y < heightSegments; y++) {\n\t\t\t\t\t\t// we use the index array to access the correct indices\n\t\t\t\t\t\tconst a = indexArray[y][x];\n\t\t\t\t\t\tconst b = indexArray[y + 1][x];\n\t\t\t\t\t\tconst c = indexArray[y + 1][x + 1];\n\t\t\t\t\t\tconst d = indexArray[y][x + 1]; // faces\n\n\t\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\t\tindices.push(b, c, d); // update group counter\n\n\t\t\t\t\t\tgroupCount += 6;\n\t\t\t\t\t}\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\n\n\n\t\t\t\tscope.addGroup(groupStart, groupCount, 0); // calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t}\n\n\t\t\tfunction generateCap(top) {\n\t\t\t\t// save the index of the first center vertex\n\t\t\t\tconst centerIndexStart = index;\n\t\t\t\tconst uv = new Vector2();\n\t\t\t\tconst vertex = new Vector3();\n\t\t\t\tlet groupCount = 0;\n\t\t\t\tconst radius = top === true ? radiusTop : radiusBottom;\n\t\t\t\tconst sign = top === true ? 1 : -1; // first we generate the center vertex data of the cap.\n\t\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\t\tfor (let x = 1; x <= radialSegments; x++) {\n\t\t\t\t\t// vertex\n\t\t\t\t\tvertices.push(0, halfHeight * sign, 0); // normal\n\n\t\t\t\t\tnormals.push(0, sign, 0); // uv\n\n\t\t\t\t\tuvs.push(0.5, 0.5); // increase index\n\n\t\t\t\t\tindex++;\n\t\t\t\t} // save the index of the last center vertex\n\n\n\t\t\t\tconst centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs\n\n\t\t\t\tfor (let x = 0; x <= radialSegments; x++) {\n\t\t\t\t\tconst u = x / radialSegments;\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\t\t\t\t\tconst cosTheta = Math.cos(theta);\n\t\t\t\t\tconst sinTheta = Math.sin(theta); // vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tnormals.push(0, sign, 0); // uv\n\n\t\t\t\t\tuv.x = cosTheta * 0.5 + 0.5;\n\t\t\t\t\tuv.y = sinTheta * 0.5 * sign + 0.5;\n\t\t\t\t\tuvs.push(uv.x, uv.y); // increase index\n\n\t\t\t\t\tindex++;\n\t\t\t\t} // generate indices\n\n\n\t\t\t\tfor (let x = 0; x < radialSegments; x++) {\n\t\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\t\tif (top === true) {\n\t\t\t\t\t\t// face top\n\t\t\t\t\t\tindices.push(i, i + 1, c);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// face bottom\n\t\t\t\t\t\tindices.push(i + 1, i, c);\n\t\t\t\t\t}\n\n\t\t\t\t\tgroupCount += 3;\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\n\n\n\t\t\t\tscope.addGroup(groupStart, groupCount, top === true ? 1 : 2); // calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new CylinderGeometry(data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass ConeGeometry extends CylinderGeometry {\n\t\tconstructor(radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper(0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n\t\t\tthis.type = 'ConeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\theight: height,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\topenEnded: openEnded,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new ConeGeometry(data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass PolyhedronGeometry extends BufferGeometry {\n\t\tconstructor(vertices = [], indices = [], radius = 1, detail = 0) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PolyhedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tvertices: vertices,\n\t\t\t\tindices: indices,\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t}; // default buffer data\n\n\t\t\tconst vertexBuffer = [];\n\t\t\tconst uvBuffer = []; // the subdivision creates the vertex buffer data\n\n\t\t\tsubdivide(detail); // all vertices should lie on a conceptual sphere with a given radius\n\n\t\t\tapplyRadius(radius); // finally, create the uv data\n\n\t\t\tgenerateUVs(); // build non-indexed geometry\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertexBuffer, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(vertexBuffer.slice(), 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvBuffer, 2));\n\n\t\t\tif (detail === 0) {\n\t\t\t\tthis.computeVertexNormals(); // flat normals\n\t\t\t} else {\n\t\t\t\tthis.normalizeNormals(); // smooth normals\n\t\t\t} // helper functions\n\n\n\t\t\tfunction subdivide(detail) {\n\t\t\t\tconst a = new Vector3();\n\t\t\t\tconst b = new Vector3();\n\t\t\t\tconst c = new Vector3(); // iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\t\tfor (let i = 0; i < indices.length; i += 3) {\n\t\t\t\t\t// get the vertices of the face\n\t\t\t\t\tgetVertexByIndex(indices[i + 0], a);\n\t\t\t\t\tgetVertexByIndex(indices[i + 1], b);\n\t\t\t\t\tgetVertexByIndex(indices[i + 2], c); // perform subdivision\n\n\t\t\t\t\tsubdivideFace(a, b, c, detail);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction subdivideFace(a, b, c, detail) {\n\t\t\t\tconst cols = detail + 1; // we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\t\tconst v = []; // construct all of the vertices for this subdivision\n\n\t\t\t\tfor (let i = 0; i <= cols; i++) {\n\t\t\t\t\tv[i] = [];\n\t\t\t\t\tconst aj = a.clone().lerp(c, i / cols);\n\t\t\t\t\tconst bj = b.clone().lerp(c, i / cols);\n\t\t\t\t\tconst rows = cols - i;\n\n\t\t\t\t\tfor (let j = 0; j <= rows; j++) {\n\t\t\t\t\t\tif (j === 0 && i === cols) {\n\t\t\t\t\t\t\tv[i][j] = aj;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tv[i][j] = aj.clone().lerp(bj, j / rows);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // construct all of the faces\n\n\n\t\t\t\tfor (let i = 0; i < cols; i++) {\n\t\t\t\t\tfor (let j = 0; j < 2 * (cols - i) - 1; j++) {\n\t\t\t\t\t\tconst k = Math.floor(j / 2);\n\n\t\t\t\t\t\tif (j % 2 === 0) {\n\t\t\t\t\t\t\tpushVertex(v[i][k + 1]);\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k]);\n\t\t\t\t\t\t\tpushVertex(v[i][k]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpushVertex(v[i][k + 1]);\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k + 1]);\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction applyRadius(radius) {\n\t\t\t\tconst vertex = new Vector3(); // iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\t\tfor (let i = 0; i < vertexBuffer.length; i += 3) {\n\t\t\t\t\tvertex.x = vertexBuffer[i + 0];\n\t\t\t\t\tvertex.y = vertexBuffer[i + 1];\n\t\t\t\t\tvertex.z = vertexBuffer[i + 2];\n\t\t\t\t\tvertex.normalize().multiplyScalar(radius);\n\t\t\t\t\tvertexBuffer[i + 0] = vertex.x;\n\t\t\t\t\tvertexBuffer[i + 1] = vertex.y;\n\t\t\t\t\tvertexBuffer[i + 2] = vertex.z;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction generateUVs() {\n\t\t\t\tconst vertex = new Vector3();\n\n\t\t\t\tfor (let i = 0; i < vertexBuffer.length; i += 3) {\n\t\t\t\t\tvertex.x = vertexBuffer[i + 0];\n\t\t\t\t\tvertex.y = vertexBuffer[i + 1];\n\t\t\t\t\tvertex.z = vertexBuffer[i + 2];\n\t\t\t\t\tconst u = azimuth(vertex) / 2 / Math.PI + 0.5;\n\t\t\t\t\tconst v = inclination(vertex) / Math.PI + 0.5;\n\t\t\t\t\tuvBuffer.push(u, 1 - v);\n\t\t\t\t}\n\n\t\t\t\tcorrectUVs();\n\t\t\t\tcorrectSeam();\n\t\t\t}\n\n\t\t\tfunction correctSeam() {\n\t\t\t\t// handle case when face straddles the seam, see #3269\n\t\t\t\tfor (let i = 0; i < uvBuffer.length; i += 6) {\n\t\t\t\t\t// uv data of a single face\n\t\t\t\t\tconst x0 = uvBuffer[i + 0];\n\t\t\t\t\tconst x1 = uvBuffer[i + 2];\n\t\t\t\t\tconst x2 = uvBuffer[i + 4];\n\t\t\t\t\tconst max = Math.max(x0, x1, x2);\n\t\t\t\t\tconst min = Math.min(x0, x1, x2); // 0.9 is somewhat arbitrary\n\n\t\t\t\t\tif (max > 0.9 && min < 0.1) {\n\t\t\t\t\t\tif (x0 < 0.2) uvBuffer[i + 0] += 1;\n\t\t\t\t\t\tif (x1 < 0.2) uvBuffer[i + 2] += 1;\n\t\t\t\t\t\tif (x2 < 0.2) uvBuffer[i + 4] += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction pushVertex(vertex) {\n\t\t\t\tvertexBuffer.push(vertex.x, vertex.y, vertex.z);\n\t\t\t}\n\n\t\t\tfunction getVertexByIndex(index, vertex) {\n\t\t\t\tconst stride = index * 3;\n\t\t\t\tvertex.x = vertices[stride + 0];\n\t\t\t\tvertex.y = vertices[stride + 1];\n\t\t\t\tvertex.z = vertices[stride + 2];\n\t\t\t}\n\n\t\t\tfunction correctUVs() {\n\t\t\t\tconst a = new Vector3();\n\t\t\t\tconst b = new Vector3();\n\t\t\t\tconst c = new Vector3();\n\t\t\t\tconst centroid = new Vector3();\n\t\t\t\tconst uvA = new Vector2();\n\t\t\t\tconst uvB = new Vector2();\n\t\t\t\tconst uvC = new Vector2();\n\n\t\t\t\tfor (let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6) {\n\t\t\t\t\ta.set(vertexBuffer[i + 0], vertexBuffer[i + 1], vertexBuffer[i + 2]);\n\t\t\t\t\tb.set(vertexBuffer[i + 3], vertexBuffer[i + 4], vertexBuffer[i + 5]);\n\t\t\t\t\tc.set(vertexBuffer[i + 6], vertexBuffer[i + 7], vertexBuffer[i + 8]);\n\t\t\t\t\tuvA.set(uvBuffer[j + 0], uvBuffer[j + 1]);\n\t\t\t\t\tuvB.set(uvBuffer[j + 2], uvBuffer[j + 3]);\n\t\t\t\t\tuvC.set(uvBuffer[j + 4], uvBuffer[j + 5]);\n\t\t\t\t\tcentroid.copy(a).add(b).add(c).divideScalar(3);\n\t\t\t\t\tconst azi = azimuth(centroid);\n\t\t\t\t\tcorrectUV(uvA, j + 0, a, azi);\n\t\t\t\t\tcorrectUV(uvB, j + 2, b, azi);\n\t\t\t\t\tcorrectUV(uvC, j + 4, c, azi);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction correctUV(uv, stride, vector, azimuth) {\n\t\t\t\tif (azimuth < 0 && uv.x === 1) {\n\t\t\t\t\tuvBuffer[stride] = uv.x - 1;\n\t\t\t\t}\n\n\t\t\t\tif (vector.x === 0 && vector.z === 0) {\n\t\t\t\t\tuvBuffer[stride] = azimuth / 2 / Math.PI + 0.5;\n\t\t\t\t}\n\t\t\t} // Angle around the Y axis, counter-clockwise when looking from above.\n\n\n\t\t\tfunction azimuth(vector) {\n\t\t\t\treturn Math.atan2(vector.z, -vector.x);\n\t\t\t} // Angle above the XZ plane.\n\n\n\t\t\tfunction inclination(vector) {\n\t\t\t\treturn Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new PolyhedronGeometry(data.vertices, data.indices, data.radius, data.details);\n\t\t}\n\n\t}\n\n\tclass DodecahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst t = (1 + Math.sqrt(5)) / 2;\n\t\t\tconst r = 1 / t;\n\t\t\tconst vertices = [// (±1, ±1, ±1)\n\t\t\t-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, ±1/φ, ±φ)\n\t\t\t0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (±1/φ, ±φ, 0)\n\t\t\t-r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (±φ, 0, ±1/φ)\n\t\t\t-t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\n\t\t\tconst indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'DodecahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new DodecahedronGeometry(data.radius, data.detail);\n\t\t}\n\n\t}\n\n\tconst _v0 = new Vector3();\n\n\tconst _v1$1 = new Vector3();\n\n\tconst _normal = new Vector3();\n\n\tconst _triangle = new Triangle();\n\n\tclass EdgesGeometry extends BufferGeometry {\n\t\tconstructor(geometry = null, thresholdAngle = 1) {\n\t\t\tsuper();\n\t\t\tthis.type = 'EdgesGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tgeometry: geometry,\n\t\t\t\tthresholdAngle: thresholdAngle\n\t\t\t};\n\n\t\t\tif (geometry !== null) {\n\t\t\t\tconst precisionPoints = 4;\n\t\t\t\tconst precision = Math.pow(10, precisionPoints);\n\t\t\t\tconst thresholdDot = Math.cos(DEG2RAD * thresholdAngle);\n\t\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\t\tconst positionAttr = geometry.getAttribute('position');\n\t\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\t\t\t\tconst indexArr = [0, 0, 0];\n\t\t\t\tconst vertKeys = ['a', 'b', 'c'];\n\t\t\t\tconst hashes = new Array(3);\n\t\t\t\tconst edgeData = {};\n\t\t\t\tconst vertices = [];\n\n\t\t\t\tfor (let i = 0; i < indexCount; i += 3) {\n\t\t\t\t\tif (indexAttr) {\n\t\t\t\t\t\tindexArr[0] = indexAttr.getX(i);\n\t\t\t\t\t\tindexArr[1] = indexAttr.getX(i + 1);\n\t\t\t\t\t\tindexArr[2] = indexAttr.getX(i + 2);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindexArr[0] = i;\n\t\t\t\t\t\tindexArr[1] = i + 1;\n\t\t\t\t\t\tindexArr[2] = i + 2;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst {\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tb,\n\t\t\t\t\t\tc\n\t\t\t\t\t} = _triangle;\n\t\t\t\t\ta.fromBufferAttribute(positionAttr, indexArr[0]);\n\t\t\t\t\tb.fromBufferAttribute(positionAttr, indexArr[1]);\n\t\t\t\t\tc.fromBufferAttribute(positionAttr, indexArr[2]);\n\n\t\t\t\t\t_triangle.getNormal(_normal); // create hashes for the edge from the vertices\n\n\n\t\t\t\t\thashes[0] = `${Math.round(a.x * precision)},${Math.round(a.y * precision)},${Math.round(a.z * precision)}`;\n\t\t\t\t\thashes[1] = `${Math.round(b.x * precision)},${Math.round(b.y * precision)},${Math.round(b.z * precision)}`;\n\t\t\t\t\thashes[2] = `${Math.round(c.x * precision)},${Math.round(c.y * precision)},${Math.round(c.z * precision)}`; // skip degenerate triangles\n\n\t\t\t\t\tif (hashes[0] === hashes[1] || hashes[1] === hashes[2] || hashes[2] === hashes[0]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} // iterate over every edge\n\n\n\t\t\t\t\tfor (let j = 0; j < 3; j++) {\n\t\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\t\tconst jNext = (j + 1) % 3;\n\t\t\t\t\t\tconst vecHash0 = hashes[j];\n\t\t\t\t\t\tconst vecHash1 = hashes[jNext];\n\t\t\t\t\t\tconst v0 = _triangle[vertKeys[j]];\n\t\t\t\t\t\tconst v1 = _triangle[vertKeys[jNext]];\n\t\t\t\t\t\tconst hash = `${vecHash0}_${vecHash1}`;\n\t\t\t\t\t\tconst reverseHash = `${vecHash1}_${vecHash0}`;\n\n\t\t\t\t\t\tif (reverseHash in edgeData && edgeData[reverseHash]) {\n\t\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\t\tif (_normal.dot(edgeData[reverseHash].normal) <= thresholdDot) {\n\t\t\t\t\t\t\t\tvertices.push(v0.x, v0.y, v0.z);\n\t\t\t\t\t\t\t\tvertices.push(v1.x, v1.y, v1.z);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tedgeData[reverseHash] = null;\n\t\t\t\t\t\t} else if (!(hash in edgeData)) {\n\t\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\t\tedgeData[hash] = {\n\t\t\t\t\t\t\t\tindex0: indexArr[j],\n\t\t\t\t\t\t\t\tindex1: indexArr[jNext],\n\t\t\t\t\t\t\t\tnormal: _normal.clone()\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // iterate over all remaining, unmatched edges and add them to the vertex array\n\n\n\t\t\t\tfor (const key in edgeData) {\n\t\t\t\t\tif (edgeData[key]) {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tindex0,\n\t\t\t\t\t\t\tindex1\n\t\t\t\t\t\t} = edgeData[key];\n\n\t\t\t\t\t\t_v0.fromBufferAttribute(positionAttr, index0);\n\n\t\t\t\t\t\t_v1$1.fromBufferAttribute(positionAttr, index1);\n\n\t\t\t\t\t\tvertices.push(_v0.x, _v0.y, _v0.z);\n\t\t\t\t\t\tvertices.push(_v1$1.x, _v1$1.y, _v1$1.z);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Extensible curve object.\n\t *\n\t * Some common of curve methods:\n\t * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n\t * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following curves inherit from THREE.Curve:\n\t *\n\t * -- 2D curves --\n\t * THREE.ArcCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.EllipseCurve\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.SplineCurve\n\t *\n\t * -- 3D curves --\n\t * THREE.CatmullRomCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath.\n\t *\n\t **/\n\n\tclass Curve {\n\t\tconstructor() {\n\t\t\tthis.type = 'Curve';\n\t\t\tthis.arcLengthDivisions = 200;\n\t\t} // Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\n\n\t\tgetPoint() {\n\t\t\tconsole.warn('THREE.Curve: .getPoint() not implemented.');\n\t\t\treturn null;\n\t\t} // Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\n\n\t\tgetPointAt(u, optionalTarget) {\n\t\t\tconst t = this.getUtoTmapping(u);\n\t\t\treturn this.getPoint(t, optionalTarget);\n\t\t} // Get sequence of points using getPoint( t )\n\n\n\t\tgetPoints(divisions = 5) {\n\t\t\tconst points = [];\n\n\t\t\tfor (let d = 0; d <= divisions; d++) {\n\t\t\t\tpoints.push(this.getPoint(d / divisions));\n\t\t\t}\n\n\t\t\treturn points;\n\t\t} // Get sequence of points using getPointAt( u )\n\n\n\t\tgetSpacedPoints(divisions = 5) {\n\t\t\tconst points = [];\n\n\t\t\tfor (let d = 0; d <= divisions; d++) {\n\t\t\t\tpoints.push(this.getPointAt(d / divisions));\n\t\t\t}\n\n\t\t\treturn points;\n\t\t} // Get total curve arc length\n\n\n\t\tgetLength() {\n\t\t\tconst lengths = this.getLengths();\n\t\t\treturn lengths[lengths.length - 1];\n\t\t} // Get list of cumulative segment lengths\n\n\n\t\tgetLengths(divisions = this.arcLengthDivisions) {\n\t\t\tif (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\n\t\t\t\treturn this.cacheArcLengths;\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\t\t\tconst cache = [];\n\t\t\tlet current,\n\t\t\t\t\tlast = this.getPoint(0);\n\t\t\tlet sum = 0;\n\t\t\tcache.push(0);\n\n\t\t\tfor (let p = 1; p <= divisions; p++) {\n\t\t\t\tcurrent = this.getPoint(p / divisions);\n\t\t\t\tsum += current.distanceTo(last);\n\t\t\t\tcache.push(sum);\n\t\t\t\tlast = current;\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\t\t}\n\n\t\tupdateArcLengths() {\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\t\t} // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\n\t\tgetUtoTmapping(u, distance) {\n\t\t\tconst arcLengths = this.getLengths();\n\t\t\tlet i = 0;\n\t\t\tconst il = arcLengths.length;\n\t\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\t\tif (distance) {\n\t\t\t\ttargetArcLength = distance;\n\t\t\t} else {\n\t\t\t\ttargetArcLength = u * arcLengths[il - 1];\n\t\t\t} // binary search for the index with largest value smaller than target u distance\n\n\n\t\t\tlet low = 0,\n\t\t\t\t\thigh = il - 1,\n\t\t\t\t\tcomparison;\n\n\t\t\twhile (low <= high) {\n\t\t\t\ti = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[i] - targetArcLength;\n\n\t\t\t\tif (comparison < 0) {\n\t\t\t\t\tlow = i + 1;\n\t\t\t\t} else if (comparison > 0) {\n\t\t\t\t\thigh = i - 1;\n\t\t\t\t} else {\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak; // DONE\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\tif (arcLengths[i] === targetArcLength) {\n\t\t\t\treturn i / (il - 1);\n\t\t\t} // we could get finer grain at lengths, or use simple interpolation between two points\n\n\n\t\t\tconst lengthBefore = arcLengths[i];\n\t\t\tconst lengthAfter = arcLengths[i + 1];\n\t\t\tconst segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\n\n\t\t\tconst segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\n\n\t\t\tconst t = (i + segmentFraction) / (il - 1);\n\t\t\treturn t;\n\t\t} // Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\n\n\t\tgetTangent(t, optionalTarget) {\n\t\t\tconst delta = 0.0001;\n\t\t\tlet t1 = t - delta;\n\t\t\tlet t2 = t + delta; // Capping in case of danger\n\n\t\t\tif (t1 < 0) t1 = 0;\n\t\t\tif (t2 > 1) t2 = 1;\n\t\t\tconst pt1 = this.getPoint(t1);\n\t\t\tconst pt2 = this.getPoint(t2);\n\t\t\tconst tangent = optionalTarget || (pt1.isVector2 ? new Vector2() : new Vector3());\n\t\t\ttangent.copy(pt2).sub(pt1).normalize();\n\t\t\treturn tangent;\n\t\t}\n\n\t\tgetTangentAt(u, optionalTarget) {\n\t\t\tconst t = this.getUtoTmapping(u);\n\t\t\treturn this.getTangent(t, optionalTarget);\n\t\t}\n\n\t\tcomputeFrenetFrames(segments, closed) {\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\t\t\tconst normal = new Vector3();\n\t\t\tconst tangents = [];\n\t\t\tconst normals = [];\n\t\t\tconst binormals = [];\n\t\t\tconst vec = new Vector3();\n\t\t\tconst mat = new Matrix4(); // compute the tangent vectors for each segment on the curve\n\n\t\t\tfor (let i = 0; i <= segments; i++) {\n\t\t\t\tconst u = i / segments;\n\t\t\t\ttangents[i] = this.getTangentAt(u, new Vector3());\n\t\t\t} // select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the minimum tangent xyz component\n\n\n\t\t\tnormals[0] = new Vector3();\n\t\t\tbinormals[0] = new Vector3();\n\t\t\tlet min = Number.MAX_VALUE;\n\t\t\tconst tx = Math.abs(tangents[0].x);\n\t\t\tconst ty = Math.abs(tangents[0].y);\n\t\t\tconst tz = Math.abs(tangents[0].z);\n\n\t\t\tif (tx <= min) {\n\t\t\t\tmin = tx;\n\t\t\t\tnormal.set(1, 0, 0);\n\t\t\t}\n\n\t\t\tif (ty <= min) {\n\t\t\t\tmin = ty;\n\t\t\t\tnormal.set(0, 1, 0);\n\t\t\t}\n\n\t\t\tif (tz <= min) {\n\t\t\t\tnormal.set(0, 0, 1);\n\t\t\t}\n\n\t\t\tvec.crossVectors(tangents[0], normal).normalize();\n\t\t\tnormals[0].crossVectors(tangents[0], vec);\n\t\t\tbinormals[0].crossVectors(tangents[0], normals[0]); // compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\t\tfor (let i = 1; i <= segments; i++) {\n\t\t\t\tnormals[i] = normals[i - 1].clone();\n\t\t\t\tbinormals[i] = binormals[i - 1].clone();\n\t\t\t\tvec.crossVectors(tangents[i - 1], tangents[i]);\n\n\t\t\t\tif (vec.length() > Number.EPSILON) {\n\t\t\t\t\tvec.normalize();\n\t\t\t\t\tconst theta = Math.acos(clamp(tangents[i - 1].dot(tangents[i]), -1, 1)); // clamp for floating pt errors\n\n\t\t\t\t\tnormals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\n\t\t\t\t}\n\n\t\t\t\tbinormals[i].crossVectors(tangents[i], normals[i]);\n\t\t\t} // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\n\t\t\tif (closed === true) {\n\t\t\t\tlet theta = Math.acos(clamp(normals[0].dot(normals[segments]), -1, 1));\n\t\t\t\ttheta /= segments;\n\n\t\t\t\tif (tangents[0].dot(vec.crossVectors(normals[0], normals[segments])) > 0) {\n\t\t\t\t\ttheta = -theta;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 1; i <= segments; i++) {\n\t\t\t\t\t// twist a little...\n\t\t\t\t\tnormals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\n\t\t\t\t\tbinormals[i].crossVectors(tangents[i], normals[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttangents: tangents,\n\t\t\t\tnormals: normals,\n\t\t\t\tbinormals: binormals\n\t\t\t};\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Curve',\n\t\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t\t}\n\t\t\t};\n\t\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\t\tdata.type = this.type;\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass EllipseCurve extends Curve {\n\t\tconstructor(aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0) {\n\t\t\tsuper();\n\t\t\tthis.type = 'EllipseCurve';\n\t\t\tthis.aX = aX;\n\t\t\tthis.aY = aY;\n\t\t\tthis.xRadius = xRadius;\n\t\t\tthis.yRadius = yRadius;\n\t\t\tthis.aStartAngle = aStartAngle;\n\t\t\tthis.aEndAngle = aEndAngle;\n\t\t\tthis.aClockwise = aClockwise;\n\t\t\tthis.aRotation = aRotation;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget) {\n\t\t\tconst point = optionalTarget || new Vector2();\n\t\t\tconst twoPi = Math.PI * 2;\n\t\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\t\tconst samePoints = Math.abs(deltaAngle) < Number.EPSILON; // ensures that deltaAngle is 0 .. 2 PI\n\n\t\t\twhile (deltaAngle < 0) deltaAngle += twoPi;\n\n\t\t\twhile (deltaAngle > twoPi) deltaAngle -= twoPi;\n\n\t\t\tif (deltaAngle < Number.EPSILON) {\n\t\t\t\tif (samePoints) {\n\t\t\t\t\tdeltaAngle = 0;\n\t\t\t\t} else {\n\t\t\t\t\tdeltaAngle = twoPi;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.aClockwise === true && !samePoints) {\n\t\t\t\tif (deltaAngle === twoPi) {\n\t\t\t\t\tdeltaAngle = -twoPi;\n\t\t\t\t} else {\n\t\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\t\tlet x = this.aX + this.xRadius * Math.cos(angle);\n\t\t\tlet y = this.aY + this.yRadius * Math.sin(angle);\n\n\t\t\tif (this.aRotation !== 0) {\n\t\t\t\tconst cos = Math.cos(this.aRotation);\n\t\t\t\tconst sin = Math.sin(this.aRotation);\n\t\t\t\tconst tx = x - this.aX;\n\t\t\t\tconst ty = y - this.aY; // Rotate the point about the center of the ellipse.\n\n\t\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\t\ty = tx * sin + ty * cos + this.aY;\n\t\t\t}\n\n\t\t\treturn point.set(x, y);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.aX = source.aX;\n\t\t\tthis.aY = source.aY;\n\t\t\tthis.xRadius = source.xRadius;\n\t\t\tthis.yRadius = source.yRadius;\n\t\t\tthis.aStartAngle = source.aStartAngle;\n\t\t\tthis.aEndAngle = source.aEndAngle;\n\t\t\tthis.aClockwise = source.aClockwise;\n\t\t\tthis.aRotation = source.aRotation;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.aX = this.aX;\n\t\t\tdata.aY = this.aY;\n\t\t\tdata.xRadius = this.xRadius;\n\t\t\tdata.yRadius = this.yRadius;\n\t\t\tdata.aStartAngle = this.aStartAngle;\n\t\t\tdata.aEndAngle = this.aEndAngle;\n\t\t\tdata.aClockwise = this.aClockwise;\n\t\t\tdata.aRotation = this.aRotation;\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.aX = json.aX;\n\t\t\tthis.aY = json.aY;\n\t\t\tthis.xRadius = json.xRadius;\n\t\t\tthis.yRadius = json.yRadius;\n\t\t\tthis.aStartAngle = json.aStartAngle;\n\t\t\tthis.aEndAngle = json.aEndAngle;\n\t\t\tthis.aClockwise = json.aClockwise;\n\t\t\tthis.aRotation = json.aRotation;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tEllipseCurve.prototype.isEllipseCurve = true;\n\n\tclass ArcCurve extends EllipseCurve {\n\t\tconstructor(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n\t\t\tsuper(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n\t\t\tthis.type = 'ArcCurve';\n\t\t}\n\n\t}\n\n\tArcCurve.prototype.isArcCurve = true;\n\n\t/**\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\t/*\n\tBased on an optimized c++ solution in\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t - http://ideone.com/NoEbVM\n\n\tThis CubicPoly class could be used for reusing some variables and calculations,\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\twhich can be placed in CurveUtils.\n\t*/\n\n\tfunction CubicPoly() {\n\t\tlet c0 = 0,\n\t\t\t\tc1 = 0,\n\t\t\t\tc2 = 0,\n\t\t\t\tc3 = 0;\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *\t p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *\t p(0) = x0, p(1) = x1\n\t\t *\tand\n\t\t *\t p'(0) = t0, p'(1) = t1.\n\t\t */\n\n\t\tfunction init(x0, x1, t0, t1) {\n\t\t\tc0 = x0;\n\t\t\tc1 = t0;\n\t\t\tc2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\t\t}\n\n\t\treturn {\n\t\t\tinitCatmullRom: function (x0, x1, x2, x3, tension) {\n\t\t\t\tinit(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n\t\t\t},\n\t\t\tinitNonuniformCatmullRom: function (x0, x1, x2, x3, dt0, dt1, dt2) {\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\t\tlet t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n\t\t\t\tlet t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\n\n\t\t\t\tt1 *= dt1;\n\t\t\t\tt2 *= dt1;\n\t\t\t\tinit(x1, x2, t1, t2);\n\t\t\t},\n\t\t\tcalc: function (t) {\n\t\t\t\tconst t2 = t * t;\n\t\t\t\tconst t3 = t2 * t;\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\t\t\t}\n\t\t};\n\t} //\n\n\n\tconst tmp = new Vector3();\n\tconst px = new CubicPoly(),\n\t\t\t\tpy = new CubicPoly(),\n\t\t\t\tpz = new CubicPoly();\n\n\tclass CatmullRomCurve3 extends Curve {\n\t\tconstructor(points = [], closed = false, curveType = 'centripetal', tension = 0.5) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CatmullRomCurve3';\n\t\t\tthis.points = points;\n\t\t\tthis.closed = closed;\n\t\t\tthis.curveType = curveType;\n\t\t\tthis.tension = tension;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst points = this.points;\n\t\t\tconst l = points.length;\n\t\t\tconst p = (l - (this.closed ? 0 : 1)) * t;\n\t\t\tlet intPoint = Math.floor(p);\n\t\t\tlet weight = p - intPoint;\n\n\t\t\tif (this.closed) {\n\t\t\t\tintPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / l) + 1) * l;\n\t\t\t} else if (weight === 0 && intPoint === l - 1) {\n\t\t\t\tintPoint = l - 2;\n\t\t\t\tweight = 1;\n\t\t\t}\n\n\t\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\t\tif (this.closed || intPoint > 0) {\n\t\t\t\tp0 = points[(intPoint - 1) % l];\n\t\t\t} else {\n\t\t\t\t// extrapolate first point\n\t\t\t\ttmp.subVectors(points[0], points[1]).add(points[0]);\n\t\t\t\tp0 = tmp;\n\t\t\t}\n\n\t\t\tconst p1 = points[intPoint % l];\n\t\t\tconst p2 = points[(intPoint + 1) % l];\n\n\t\t\tif (this.closed || intPoint + 2 < l) {\n\t\t\t\tp3 = points[(intPoint + 2) % l];\n\t\t\t} else {\n\t\t\t\t// extrapolate last point\n\t\t\t\ttmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\n\t\t\t\tp3 = tmp;\n\t\t\t}\n\n\t\t\tif (this.curveType === 'centripetal' || this.curveType === 'chordal') {\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\t\tlet dt0 = Math.pow(p0.distanceToSquared(p1), pow);\n\t\t\t\tlet dt1 = Math.pow(p1.distanceToSquared(p2), pow);\n\t\t\t\tlet dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\n\n\t\t\t\tif (dt1 < 1e-4) dt1 = 1.0;\n\t\t\t\tif (dt0 < 1e-4) dt0 = dt1;\n\t\t\t\tif (dt2 < 1e-4) dt2 = dt1;\n\t\t\t\tpx.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n\t\t\t\tpy.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n\t\t\t\tpz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n\t\t\t} else if (this.curveType === 'catmullrom') {\n\t\t\t\tpx.initCatmullRom(p0.x, p1.x, p2.x, p3.x, this.tension);\n\t\t\t\tpy.initCatmullRom(p0.y, p1.y, p2.y, p3.y, this.tension);\n\t\t\t\tpz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, this.tension);\n\t\t\t}\n\n\t\t\tpoint.set(px.calc(weight), py.calc(weight), pz.calc(weight));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = source.points.length; i < l; i++) {\n\t\t\t\tconst point = source.points[i];\n\t\t\t\tthis.points.push(point.clone());\n\t\t\t}\n\n\t\t\tthis.closed = source.closed;\n\t\t\tthis.curveType = source.curveType;\n\t\t\tthis.tension = source.tension;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.points = [];\n\n\t\t\tfor (let i = 0, l = this.points.length; i < l; i++) {\n\t\t\t\tconst point = this.points[i];\n\t\t\t\tdata.points.push(point.toArray());\n\t\t\t}\n\n\t\t\tdata.closed = this.closed;\n\t\t\tdata.curveType = this.curveType;\n\t\t\tdata.tension = this.tension;\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = json.points.length; i < l; i++) {\n\t\t\t\tconst point = json.points[i];\n\t\t\t\tthis.points.push(new Vector3().fromArray(point));\n\t\t\t}\n\n\t\t\tthis.closed = json.closed;\n\t\t\tthis.curveType = json.curveType;\n\t\t\tthis.tension = json.tension;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n\t/**\n\t * Bezier Curves formulas obtained from\n\t * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n\t */\n\tfunction CatmullRom(t, p0, p1, p2, p3) {\n\t\tconst v0 = (p2 - p0) * 0.5;\n\t\tconst v1 = (p3 - p1) * 0.5;\n\t\tconst t2 = t * t;\n\t\tconst t3 = t * t2;\n\t\treturn (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n\t} //\n\n\n\tfunction QuadraticBezierP0(t, p) {\n\t\tconst k = 1 - t;\n\t\treturn k * k * p;\n\t}\n\n\tfunction QuadraticBezierP1(t, p) {\n\t\treturn 2 * (1 - t) * t * p;\n\t}\n\n\tfunction QuadraticBezierP2(t, p) {\n\t\treturn t * t * p;\n\t}\n\n\tfunction QuadraticBezier(t, p0, p1, p2) {\n\t\treturn QuadraticBezierP0(t, p0) + QuadraticBezierP1(t, p1) + QuadraticBezierP2(t, p2);\n\t} //\n\n\n\tfunction CubicBezierP0(t, p) {\n\t\tconst k = 1 - t;\n\t\treturn k * k * k * p;\n\t}\n\n\tfunction CubicBezierP1(t, p) {\n\t\tconst k = 1 - t;\n\t\treturn 3 * k * k * t * p;\n\t}\n\n\tfunction CubicBezierP2(t, p) {\n\t\treturn 3 * (1 - t) * t * t * p;\n\t}\n\n\tfunction CubicBezierP3(t, p) {\n\t\treturn t * t * t * p;\n\t}\n\n\tfunction CubicBezier(t, p0, p1, p2, p3) {\n\t\treturn CubicBezierP0(t, p0) + CubicBezierP1(t, p1) + CubicBezierP2(t, p2) + CubicBezierP3(t, p3);\n\t}\n\n\tclass CubicBezierCurve extends Curve {\n\t\tconstructor(v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CubicBezierCurve';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t\tthis.v3 = v3;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2,\n\t\t\t\t\t\tv3 = this.v3;\n\t\t\tpoint.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\tthis.v3.copy(source.v3);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\tdata.v3 = this.v3.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\tthis.v3.fromArray(json.v3);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\n\tclass CubicBezierCurve3 extends Curve {\n\t\tconstructor(v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CubicBezierCurve3';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t\tthis.v3 = v3;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2,\n\t\t\t\t\t\tv3 = this.v3;\n\t\t\tpoint.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y), CubicBezier(t, v0.z, v1.z, v2.z, v3.z));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\tthis.v3.copy(source.v3);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\tdata.v3 = this.v3.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\tthis.v3.fromArray(json.v3);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\n\tclass LineCurve extends Curve {\n\t\tconstructor(v1 = new Vector2(), v2 = new Vector2()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineCurve';\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\n\t\t\tif (t === 1) {\n\t\t\t\tpoint.copy(this.v2);\n\t\t\t} else {\n\t\t\t\tpoint.copy(this.v2).sub(this.v1);\n\t\t\t\tpoint.multiplyScalar(t).add(this.v1);\n\t\t\t}\n\n\t\t\treturn point;\n\t\t} // Line curve is linear, so we can overwrite default getPointAt\n\n\n\t\tgetPointAt(u, optionalTarget) {\n\t\t\treturn this.getPoint(u, optionalTarget);\n\t\t}\n\n\t\tgetTangent(t, optionalTarget) {\n\t\t\tconst tangent = optionalTarget || new Vector2();\n\t\t\ttangent.copy(this.v2).sub(this.v1).normalize();\n\t\t\treturn tangent;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineCurve.prototype.isLineCurve = true;\n\n\tclass LineCurve3 extends Curve {\n\t\tconstructor(v1 = new Vector3(), v2 = new Vector3()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineCurve3';\n\t\t\tthis.isLineCurve3 = true;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\n\t\t\tif (t === 1) {\n\t\t\t\tpoint.copy(this.v2);\n\t\t\t} else {\n\t\t\t\tpoint.copy(this.v2).sub(this.v1);\n\t\t\t\tpoint.multiplyScalar(t).add(this.v1);\n\t\t\t}\n\n\t\t\treturn point;\n\t\t} // Line curve is linear, so we can overwrite default getPointAt\n\n\n\t\tgetPointAt(u, optionalTarget) {\n\t\t\treturn this.getPoint(u, optionalTarget);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass QuadraticBezierCurve extends Curve {\n\t\tconstructor(v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'QuadraticBezierCurve';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2;\n\t\t\tpoint.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\n\tclass QuadraticBezierCurve3 extends Curve {\n\t\tconstructor(v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'QuadraticBezierCurve3';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2;\n\t\t\tpoint.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y), QuadraticBezier(t, v0.z, v1.z, v2.z));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\n\tclass SplineCurve extends Curve {\n\t\tconstructor(points = []) {\n\t\t\tsuper();\n\t\t\tthis.type = 'SplineCurve';\n\t\t\tthis.points = points;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst points = this.points;\n\t\t\tconst p = (points.length - 1) * t;\n\t\t\tconst intPoint = Math.floor(p);\n\t\t\tconst weight = p - intPoint;\n\t\t\tconst p0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n\t\t\tconst p1 = points[intPoint];\n\t\t\tconst p2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n\t\t\tconst p3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n\t\t\tpoint.set(CatmullRom(weight, p0.x, p1.x, p2.x, p3.x), CatmullRom(weight, p0.y, p1.y, p2.y, p3.y));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = source.points.length; i < l; i++) {\n\t\t\t\tconst point = source.points[i];\n\t\t\t\tthis.points.push(point.clone());\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.points = [];\n\n\t\t\tfor (let i = 0, l = this.points.length; i < l; i++) {\n\t\t\t\tconst point = this.points[i];\n\t\t\t\tdata.points.push(point.toArray());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = json.points.length; i < l; i++) {\n\t\t\t\tconst point = json.points[i];\n\t\t\t\tthis.points.push(new Vector2().fromArray(point));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSplineCurve.prototype.isSplineCurve = true;\n\n\tvar Curves = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tArcCurve: ArcCurve,\n\t\tCatmullRomCurve3: CatmullRomCurve3,\n\t\tCubicBezierCurve: CubicBezierCurve,\n\t\tCubicBezierCurve3: CubicBezierCurve3,\n\t\tEllipseCurve: EllipseCurve,\n\t\tLineCurve: LineCurve,\n\t\tLineCurve3: LineCurve3,\n\t\tQuadraticBezierCurve: QuadraticBezierCurve,\n\t\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\t\tSplineCurve: SplineCurve\n\t});\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *\tcurves, but retains the api of a curve\n\t **************************************************************/\n\n\tclass CurvePath extends Curve {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'CurvePath';\n\t\t\tthis.curves = [];\n\t\t\tthis.autoClose = false; // Automatically closes the path\n\t\t}\n\n\t\tadd(curve) {\n\t\t\tthis.curves.push(curve);\n\t\t}\n\n\t\tclosePath() {\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tconst startPoint = this.curves[0].getPoint(0);\n\t\t\tconst endPoint = this.curves[this.curves.length - 1].getPoint(1);\n\n\t\t\tif (!startPoint.equals(endPoint)) {\n\t\t\t\tthis.curves.push(new LineCurve(endPoint, startPoint));\n\t\t\t}\n\t\t} // To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\n\n\t\tgetPoint(t, optionalTarget) {\n\t\t\tconst d = t * this.getLength();\n\t\t\tconst curveLengths = this.getCurveLengths();\n\t\t\tlet i = 0; // To think about boundaries points.\n\n\t\t\twhile (i < curveLengths.length) {\n\t\t\t\tif (curveLengths[i] >= d) {\n\t\t\t\t\tconst diff = curveLengths[i] - d;\n\t\t\t\t\tconst curve = this.curves[i];\n\t\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\t\t\t\t\treturn curve.getPointAt(u, optionalTarget);\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\treturn null; // loop where sum != 0, sum > d , sum+1 <d\n\t\t} // We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\n\n\t\tgetLength() {\n\t\t\tconst lens = this.getCurveLengths();\n\t\t\treturn lens[lens.length - 1];\n\t\t} // cacheLengths must be recalculated.\n\n\n\t\tupdateArcLengths() {\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getCurveLengths();\n\t\t} // Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\n\t\tgetCurveLengths() {\n\t\t\t// We use cache values if curves and cache array are same length\n\t\t\tif (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n\t\t\t\treturn this.cacheLengths;\n\t\t\t} // Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\n\t\t\tconst lengths = [];\n\t\t\tlet sums = 0;\n\n\t\t\tfor (let i = 0, l = this.curves.length; i < l; i++) {\n\t\t\t\tsums += this.curves[i].getLength();\n\t\t\t\tlengths.push(sums);\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\t\t\treturn lengths;\n\t\t}\n\n\t\tgetSpacedPoints(divisions = 40) {\n\t\t\tconst points = [];\n\n\t\t\tfor (let i = 0; i <= divisions; i++) {\n\t\t\t\tpoints.push(this.getPoint(i / divisions));\n\t\t\t}\n\n\t\t\tif (this.autoClose) {\n\t\t\t\tpoints.push(points[0]);\n\t\t\t}\n\n\t\t\treturn points;\n\t\t}\n\n\t\tgetPoints(divisions = 12) {\n\t\t\tconst points = [];\n\t\t\tlet last;\n\n\t\t\tfor (let i = 0, curves = this.curves; i < curves.length; i++) {\n\t\t\t\tconst curve = curves[i];\n\t\t\t\tconst resolution = curve && curve.isEllipseCurve ? divisions * 2 : curve && (curve.isLineCurve || curve.isLineCurve3) ? 1 : curve && curve.isSplineCurve ? divisions * curve.points.length : divisions;\n\t\t\t\tconst pts = curve.getPoints(resolution);\n\n\t\t\t\tfor (let j = 0; j < pts.length; j++) {\n\t\t\t\t\tconst point = pts[j];\n\t\t\t\t\tif (last && last.equals(point)) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tlast = point;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.autoClose && points.length > 1 && !points[points.length - 1].equals(points[0])) {\n\t\t\t\tpoints.push(points[0]);\n\t\t\t}\n\n\t\t\treturn points;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.curves = [];\n\n\t\t\tfor (let i = 0, l = source.curves.length; i < l; i++) {\n\t\t\t\tconst curve = source.curves[i];\n\t\t\t\tthis.curves.push(curve.clone());\n\t\t\t}\n\n\t\t\tthis.autoClose = source.autoClose;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.autoClose = this.autoClose;\n\t\t\tdata.curves = [];\n\n\t\t\tfor (let i = 0, l = this.curves.length; i < l; i++) {\n\t\t\t\tconst curve = this.curves[i];\n\t\t\t\tdata.curves.push(curve.toJSON());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.autoClose = json.autoClose;\n\t\t\tthis.curves = [];\n\n\t\t\tfor (let i = 0, l = json.curves.length; i < l; i++) {\n\t\t\t\tconst curve = json.curves[i];\n\t\t\t\tthis.curves.push(new Curves[curve.type]().fromJSON(curve));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass Path extends CurvePath {\n\t\tconstructor(points) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Path';\n\t\t\tthis.currentPoint = new Vector2();\n\n\t\t\tif (points) {\n\t\t\t\tthis.setFromPoints(points);\n\t\t\t}\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tthis.moveTo(points[0].x, points[0].y);\n\n\t\t\tfor (let i = 1, l = points.length; i < l; i++) {\n\t\t\t\tthis.lineTo(points[i].x, points[i].y);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tmoveTo(x, y) {\n\t\t\tthis.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\n\n\t\t\treturn this;\n\t\t}\n\n\t\tlineTo(x, y) {\n\t\t\tconst curve = new LineCurve(this.currentPoint.clone(), new Vector2(x, y));\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.set(x, y);\n\t\t\treturn this;\n\t\t}\n\n\t\tquadraticCurveTo(aCPx, aCPy, aX, aY) {\n\t\t\tconst curve = new QuadraticBezierCurve(this.currentPoint.clone(), new Vector2(aCPx, aCPy), new Vector2(aX, aY));\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.set(aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tbezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n\t\t\tconst curve = new CubicBezierCurve(this.currentPoint.clone(), new Vector2(aCP1x, aCP1y), new Vector2(aCP2x, aCP2y), new Vector2(aX, aY));\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.set(aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tsplineThru(pts\n\t\t/*Array of Vector*/\n\t\t) {\n\t\t\tconst npts = [this.currentPoint.clone()].concat(pts);\n\t\t\tconst curve = new SplineCurve(npts);\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.copy(pts[pts.length - 1]);\n\t\t\treturn this;\n\t\t}\n\n\t\tarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n\t\t\tconst x0 = this.currentPoint.x;\n\t\t\tconst y0 = this.currentPoint.y;\n\t\t\tthis.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n\t\t\treturn this;\n\t\t}\n\n\t\tabsarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n\t\t\tthis.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n\t\t\treturn this;\n\t\t}\n\n\t\tellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n\t\t\tconst x0 = this.currentPoint.x;\n\t\t\tconst y0 = this.currentPoint.y;\n\t\t\tthis.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\t\t\treturn this;\n\t\t}\n\n\t\tabsellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n\t\t\tconst curve = new EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\n\t\t\tif (this.curves.length > 0) {\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tconst firstPoint = curve.getPoint(0);\n\n\t\t\t\tif (!firstPoint.equals(this.currentPoint)) {\n\t\t\t\t\tthis.lineTo(firstPoint.x, firstPoint.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.curves.push(curve);\n\t\t\tconst lastPoint = curve.getPoint(1);\n\t\t\tthis.currentPoint.copy(lastPoint);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.currentPoint.copy(source.currentPoint);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.currentPoint = this.currentPoint.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.currentPoint.fromArray(json.currentPoint);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass Shape extends Path {\n\t\tconstructor(points) {\n\t\t\tsuper(points);\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.type = 'Shape';\n\t\t\tthis.holes = [];\n\t\t}\n\n\t\tgetPointsHoles(divisions) {\n\t\t\tconst holesPts = [];\n\n\t\t\tfor (let i = 0, l = this.holes.length; i < l; i++) {\n\t\t\t\tholesPts[i] = this.holes[i].getPoints(divisions);\n\t\t\t}\n\n\t\t\treturn holesPts;\n\t\t} // get points of shape and holes (keypoints based on segments parameter)\n\n\n\t\textractPoints(divisions) {\n\t\t\treturn {\n\t\t\t\tshape: this.getPoints(divisions),\n\t\t\t\tholes: this.getPointsHoles(divisions)\n\t\t\t};\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.holes = [];\n\n\t\t\tfor (let i = 0, l = source.holes.length; i < l; i++) {\n\t\t\t\tconst hole = source.holes[i];\n\t\t\t\tthis.holes.push(hole.clone());\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.holes = [];\n\n\t\t\tfor (let i = 0, l = this.holes.length; i < l; i++) {\n\t\t\t\tconst hole = this.holes[i];\n\t\t\t\tdata.holes.push(hole.toJSON());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.uuid = json.uuid;\n\t\t\tthis.holes = [];\n\n\t\t\tfor (let i = 0, l = json.holes.length; i < l; i++) {\n\t\t\t\tconst hole = json.holes[i];\n\t\t\t\tthis.holes.push(new Path().fromJSON(hole));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\t/**\n\t * Port from https://github.com/mapbox/earcut (v2.2.2)\n\t */\n\tconst Earcut = {\n\t\ttriangulate: function (data, holeIndices, dim = 2) {\n\t\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\t\tconst outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\t\t\tlet outerNode = linkedList(data, 0, outerLen, dim, true);\n\t\t\tconst triangles = [];\n\t\t\tif (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\t\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\t\t\tif (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim); // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\t\tif (data.length > 80 * dim) {\n\t\t\t\tminX = maxX = data[0];\n\t\t\t\tminY = maxY = data[1];\n\n\t\t\t\tfor (let i = dim; i < outerLen; i += dim) {\n\t\t\t\t\tx = data[i];\n\t\t\t\t\ty = data[i + 1];\n\t\t\t\t\tif (x < minX) minX = x;\n\t\t\t\t\tif (y < minY) minY = y;\n\t\t\t\t\tif (x > maxX) maxX = x;\n\t\t\t\t\tif (y > maxY) maxY = y;\n\t\t\t\t} // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\n\t\t\t\tinvSize = Math.max(maxX - minX, maxY - minY);\n\t\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\t\t\t}\n\n\t\t\tearcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\t\t\treturn triangles;\n\t\t}\n\t}; // create a circular doubly linked list from polygon points in the specified winding order\n\n\tfunction linkedList(data, start, end, dim, clockwise) {\n\t\tlet i, last;\n\n\t\tif (clockwise === signedArea(data, start, end, dim) > 0) {\n\t\t\tfor (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n\t\t} else {\n\t\t\tfor (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n\t\t}\n\n\t\tif (last && equals(last, last.next)) {\n\t\t\tremoveNode(last);\n\t\t\tlast = last.next;\n\t\t}\n\n\t\treturn last;\n\t} // eliminate colinear or duplicate points\n\n\n\tfunction filterPoints(start, end) {\n\t\tif (!start) return start;\n\t\tif (!end) end = start;\n\t\tlet p = start,\n\t\t\t\tagain;\n\n\t\tdo {\n\t\t\tagain = false;\n\n\t\t\tif (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n\t\t\t\tremoveNode(p);\n\t\t\t\tp = end = p.prev;\n\t\t\t\tif (p === p.next) break;\n\t\t\t\tagain = true;\n\t\t\t} else {\n\t\t\t\tp = p.next;\n\t\t\t}\n\t\t} while (again || p !== end);\n\n\t\treturn end;\n\t} // main ear slicing loop which triangulates a polygon (given as a linked list)\n\n\n\tfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n\t\tif (!ear) return; // interlink polygon nodes in z-order\n\n\t\tif (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\t\tlet stop = ear,\n\t\t\t\tprev,\n\t\t\t\tnext; // iterate through ears, slicing them one by one\n\n\t\twhile (ear.prev !== ear.next) {\n\t\t\tprev = ear.prev;\n\t\t\tnext = ear.next;\n\n\t\t\tif (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n\t\t\t\t// cut off the triangle\n\t\t\t\ttriangles.push(prev.i / dim);\n\t\t\t\ttriangles.push(ear.i / dim);\n\t\t\t\ttriangles.push(next.i / dim);\n\t\t\t\tremoveNode(ear); // skipping the next vertex leads to less sliver triangles\n\n\t\t\t\tear = next.next;\n\t\t\t\tstop = next.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tear = next; // if we looped through the whole remaining polygon and can't find any more ears\n\n\t\t\tif (ear === stop) {\n\t\t\t\t// try filtering points and slicing again\n\t\t\t\tif (!pass) {\n\t\t\t\t\tearcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1); // if this didn't work, try curing all small self-intersections locally\n\t\t\t\t} else if (pass === 1) {\n\t\t\t\t\tear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n\t\t\t\t\tearcutLinked(ear, triangles, dim, minX, minY, invSize, 2); // as a last resort, try splitting the remaining polygon into two\n\t\t\t\t} else if (pass === 2) {\n\t\t\t\t\tsplitEarcut(ear, triangles, dim, minX, minY, invSize);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} // check whether a polygon node forms a valid ear with adjacent nodes\n\n\n\tfunction isEar(ear) {\n\t\tconst a = ear.prev,\n\t\t\t\t\tb = ear,\n\t\t\t\t\tc = ear.next;\n\t\tif (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\t\t// now make sure we don't have other points inside the potential ear\n\n\t\tlet p = ear.next.next;\n\n\t\twhile (p !== ear.prev) {\n\t\t\tif (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n\t\t\tp = p.next;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction isEarHashed(ear, minX, minY, invSize) {\n\t\tconst a = ear.prev,\n\t\t\t\t\tb = ear,\n\t\t\t\t\tc = ear.next;\n\t\tif (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\t\t// triangle bbox; min & max are calculated like this for speed\n\n\t\tconst minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x,\n\t\t\t\t\tminTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y,\n\t\t\t\t\tmaxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x,\n\t\t\t\t\tmaxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y; // z-order range for the current triangle bbox;\n\n\t\tconst minZ = zOrder(minTX, minTY, minX, minY, invSize),\n\t\t\t\t\tmaxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\t\tlet p = ear.prevZ,\n\t\t\t\tn = ear.nextZ; // look for points inside the triangle in both directions\n\n\t\twhile (p && p.z >= minZ && n && n.z <= maxZ) {\n\t\t\tif (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n\t\t\tp = p.prevZ;\n\t\t\tif (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n\t\t\tn = n.nextZ;\n\t\t} // look for remaining points in decreasing z-order\n\n\n\t\twhile (p && p.z >= minZ) {\n\t\t\tif (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n\t\t\tp = p.prevZ;\n\t\t} // look for remaining points in increasing z-order\n\n\n\t\twhile (n && n.z <= maxZ) {\n\t\t\tif (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n\t\t\tn = n.nextZ;\n\t\t}\n\n\t\treturn true;\n\t} // go through all polygon nodes and cure small local self-intersections\n\n\n\tfunction cureLocalIntersections(start, triangles, dim) {\n\t\tlet p = start;\n\n\t\tdo {\n\t\t\tconst a = p.prev,\n\t\t\t\t\t\tb = p.next.next;\n\n\t\t\tif (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\t\t\t\ttriangles.push(a.i / dim);\n\t\t\t\ttriangles.push(p.i / dim);\n\t\t\t\ttriangles.push(b.i / dim); // remove two nodes involved\n\n\t\t\t\tremoveNode(p);\n\t\t\t\tremoveNode(p.next);\n\t\t\t\tp = start = b;\n\t\t\t}\n\n\t\t\tp = p.next;\n\t\t} while (p !== start);\n\n\t\treturn filterPoints(p);\n\t} // try splitting polygon into two and triangulate them independently\n\n\n\tfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n\t\t// look for a valid diagonal that divides the polygon into two\n\t\tlet a = start;\n\n\t\tdo {\n\t\t\tlet b = a.next.next;\n\n\t\t\twhile (b !== a.prev) {\n\t\t\t\tif (a.i !== b.i && isValidDiagonal(a, b)) {\n\t\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\t\tlet c = splitPolygon(a, b); // filter colinear points around the cuts\n\n\t\t\t\t\ta = filterPoints(a, a.next);\n\t\t\t\t\tc = filterPoints(c, c.next); // run earcut on each half\n\n\t\t\t\t\tearcutLinked(a, triangles, dim, minX, minY, invSize);\n\t\t\t\t\tearcutLinked(c, triangles, dim, minX, minY, invSize);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tb = b.next;\n\t\t\t}\n\n\t\t\ta = a.next;\n\t\t} while (a !== start);\n\t} // link every hole into the outer loop, producing a single-ring polygon without holes\n\n\n\tfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n\t\tconst queue = [];\n\t\tlet i, len, start, end, list;\n\n\t\tfor (i = 0, len = holeIndices.length; i < len; i++) {\n\t\t\tstart = holeIndices[i] * dim;\n\t\t\tend = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n\t\t\tlist = linkedList(data, start, end, dim, false);\n\t\t\tif (list === list.next) list.steiner = true;\n\t\t\tqueue.push(getLeftmost(list));\n\t\t}\n\n\t\tqueue.sort(compareX); // process holes from left to right\n\n\t\tfor (i = 0; i < queue.length; i++) {\n\t\t\teliminateHole(queue[i], outerNode);\n\t\t\touterNode = filterPoints(outerNode, outerNode.next);\n\t\t}\n\n\t\treturn outerNode;\n\t}\n\n\tfunction compareX(a, b) {\n\t\treturn a.x - b.x;\n\t} // find a bridge between vertices that connects hole with an outer ring and and link it\n\n\n\tfunction eliminateHole(hole, outerNode) {\n\t\touterNode = findHoleBridge(hole, outerNode);\n\n\t\tif (outerNode) {\n\t\t\tconst b = splitPolygon(outerNode, hole); // filter collinear points around the cuts\n\n\t\t\tfilterPoints(outerNode, outerNode.next);\n\t\t\tfilterPoints(b, b.next);\n\t\t}\n\t} // David Eberly's algorithm for finding a bridge between hole and outer polygon\n\n\n\tfunction findHoleBridge(hole, outerNode) {\n\t\tlet p = outerNode;\n\t\tconst hx = hole.x;\n\t\tconst hy = hole.y;\n\t\tlet qx = -Infinity,\n\t\t\t\tm; // find a segment intersected by a ray from the hole's leftmost point to the left;\n\t\t// segment's endpoint with lesser x will be potential connection point\n\n\t\tdo {\n\t\t\tif (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n\t\t\t\tconst x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n\n\t\t\t\tif (x <= hx && x > qx) {\n\t\t\t\t\tqx = x;\n\n\t\t\t\t\tif (x === hx) {\n\t\t\t\t\t\tif (hy === p.y) return p;\n\t\t\t\t\t\tif (hy === p.next.y) return p.next;\n\t\t\t\t\t}\n\n\t\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tp = p.next;\n\t\t} while (p !== outerNode);\n\n\t\tif (!m) return null;\n\t\tif (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\t\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t\t// if there are no points found, we have a valid connection;\n\t\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\t\tconst stop = m,\n\t\t\t\t\tmx = m.x,\n\t\t\t\t\tmy = m.y;\n\t\tlet tanMin = Infinity,\n\t\t\t\ttan;\n\t\tp = m;\n\n\t\tdo {\n\t\t\tif (hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\t\t\t\ttan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n\t\t\t\tif (locallyInside(p, hole) && (tan < tanMin || tan === tanMin && (p.x > m.x || p.x === m.x && sectorContainsSector(m, p)))) {\n\t\t\t\t\tm = p;\n\t\t\t\t\ttanMin = tan;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tp = p.next;\n\t\t} while (p !== stop);\n\n\t\treturn m;\n\t} // whether sector in vertex m contains sector in vertex p in the same coordinates\n\n\n\tfunction sectorContainsSector(m, p) {\n\t\treturn area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n\t} // interlink polygon nodes in z-order\n\n\n\tfunction indexCurve(start, minX, minY, invSize) {\n\t\tlet p = start;\n\n\t\tdo {\n\t\t\tif (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n\t\t\tp.prevZ = p.prev;\n\t\t\tp.nextZ = p.next;\n\t\t\tp = p.next;\n\t\t} while (p !== start);\n\n\t\tp.prevZ.nextZ = null;\n\t\tp.prevZ = null;\n\t\tsortLinked(p);\n\t} // Simon Tatham's linked list merge sort algorithm\n\t// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\n\n\tfunction sortLinked(list) {\n\t\tlet i,\n\t\t\t\tp,\n\t\t\t\tq,\n\t\t\t\te,\n\t\t\t\ttail,\n\t\t\t\tnumMerges,\n\t\t\t\tpSize,\n\t\t\t\tqSize,\n\t\t\t\tinSize = 1;\n\n\t\tdo {\n\t\t\tp = list;\n\t\t\tlist = null;\n\t\t\ttail = null;\n\t\t\tnumMerges = 0;\n\n\t\t\twhile (p) {\n\t\t\t\tnumMerges++;\n\t\t\t\tq = p;\n\t\t\t\tpSize = 0;\n\n\t\t\t\tfor (i = 0; i < inSize; i++) {\n\t\t\t\t\tpSize++;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tif (!q) break;\n\t\t\t\t}\n\n\t\t\t\tqSize = inSize;\n\n\t\t\t\twhile (pSize > 0 || qSize > 0 && q) {\n\t\t\t\t\tif (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n\t\t\t\t\t\te = p;\n\t\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\t\tpSize--;\n\t\t\t\t\t} else {\n\t\t\t\t\t\te = q;\n\t\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\t\tqSize--;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tail) tail.nextZ = e;else list = e;\n\t\t\t\t\te.prevZ = tail;\n\t\t\t\t\ttail = e;\n\t\t\t\t}\n\n\t\t\t\tp = q;\n\t\t\t}\n\n\t\t\ttail.nextZ = null;\n\t\t\tinSize *= 2;\n\t\t} while (numMerges > 1);\n\n\t\treturn list;\n\t} // z-order of a point given coords and inverse of the longer side of data bbox\n\n\n\tfunction zOrder(x, y, minX, minY, invSize) {\n\t\t// coords are transformed into non-negative 15-bit integer range\n\t\tx = 32767 * (x - minX) * invSize;\n\t\ty = 32767 * (y - minY) * invSize;\n\t\tx = (x | x << 8) & 0x00FF00FF;\n\t\tx = (x | x << 4) & 0x0F0F0F0F;\n\t\tx = (x | x << 2) & 0x33333333;\n\t\tx = (x | x << 1) & 0x55555555;\n\t\ty = (y | y << 8) & 0x00FF00FF;\n\t\ty = (y | y << 4) & 0x0F0F0F0F;\n\t\ty = (y | y << 2) & 0x33333333;\n\t\ty = (y | y << 1) & 0x55555555;\n\t\treturn x | y << 1;\n\t} // find the leftmost node of a polygon ring\n\n\n\tfunction getLeftmost(start) {\n\t\tlet p = start,\n\t\t\t\tleftmost = start;\n\n\t\tdo {\n\t\t\tif (p.x < leftmost.x || p.x === leftmost.x && p.y < leftmost.y) leftmost = p;\n\t\t\tp = p.next;\n\t\t} while (p !== start);\n\n\t\treturn leftmost;\n\t} // check if a point lies within a convex triangle\n\n\n\tfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n\t\treturn (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n\t} // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\n\n\tfunction isValidDiagonal(a, b) {\n\t\treturn a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && ( // dones't intersect other edges\n\t\tlocallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && ( // locally visible\n\t\tarea(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n\t\tequals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n\t} // signed area of a triangle\n\n\n\tfunction area(p, q, r) {\n\t\treturn (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n\t} // check if two points are equal\n\n\n\tfunction equals(p1, p2) {\n\t\treturn p1.x === p2.x && p1.y === p2.y;\n\t} // check if two segments intersect\n\n\n\tfunction intersects(p1, q1, p2, q2) {\n\t\tconst o1 = sign(area(p1, q1, p2));\n\t\tconst o2 = sign(area(p1, q1, q2));\n\t\tconst o3 = sign(area(p2, q2, p1));\n\t\tconst o4 = sign(area(p2, q2, q1));\n\t\tif (o1 !== o2 && o3 !== o4) return true; // general case\n\n\t\tif (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\n\t\tif (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\n\t\tif (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\n\t\tif (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\t\treturn false;\n\t} // for collinear points p, q, r, check if point q lies on segment pr\n\n\n\tfunction onSegment(p, q, r) {\n\t\treturn q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n\t}\n\n\tfunction sign(num) {\n\t\treturn num > 0 ? 1 : num < 0 ? -1 : 0;\n\t} // check if a polygon diagonal intersects any polygon segments\n\n\n\tfunction intersectsPolygon(a, b) {\n\t\tlet p = a;\n\n\t\tdo {\n\t\t\tif (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) return true;\n\t\t\tp = p.next;\n\t\t} while (p !== a);\n\n\t\treturn false;\n\t} // check if a polygon diagonal is locally inside the polygon\n\n\n\tfunction locallyInside(a, b) {\n\t\treturn area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n\t} // check if the middle point of a polygon diagonal is inside the polygon\n\n\n\tfunction middleInside(a, b) {\n\t\tlet p = a,\n\t\t\t\tinside = false;\n\t\tconst px = (a.x + b.x) / 2,\n\t\t\t\t\tpy = (a.y + b.y) / 2;\n\n\t\tdo {\n\t\t\tif (p.y > py !== p.next.y > py && p.next.y !== p.y && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) inside = !inside;\n\t\t\tp = p.next;\n\t\t} while (p !== a);\n\n\t\treturn inside;\n\t} // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n\t// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\n\n\tfunction splitPolygon(a, b) {\n\t\tconst a2 = new Node(a.i, a.x, a.y),\n\t\t\t\t\tb2 = new Node(b.i, b.x, b.y),\n\t\t\t\t\tan = a.next,\n\t\t\t\t\tbp = b.prev;\n\t\ta.next = b;\n\t\tb.prev = a;\n\t\ta2.next = an;\n\t\tan.prev = a2;\n\t\tb2.next = a2;\n\t\ta2.prev = b2;\n\t\tbp.next = b2;\n\t\tb2.prev = bp;\n\t\treturn b2;\n\t} // create a node and optionally link it with previous one (in a circular doubly linked list)\n\n\n\tfunction insertNode(i, x, y, last) {\n\t\tconst p = new Node(i, x, y);\n\n\t\tif (!last) {\n\t\t\tp.prev = p;\n\t\t\tp.next = p;\n\t\t} else {\n\t\t\tp.next = last.next;\n\t\t\tp.prev = last;\n\t\t\tlast.next.prev = p;\n\t\t\tlast.next = p;\n\t\t}\n\n\t\treturn p;\n\t}\n\n\tfunction removeNode(p) {\n\t\tp.next.prev = p.prev;\n\t\tp.prev.next = p.next;\n\t\tif (p.prevZ) p.prevZ.nextZ = p.nextZ;\n\t\tif (p.nextZ) p.nextZ.prevZ = p.prevZ;\n\t}\n\n\tfunction Node(i, x, y) {\n\t\t// vertex index in coordinates array\n\t\tthis.i = i; // vertex coordinates\n\n\t\tthis.x = x;\n\t\tthis.y = y; // previous and next vertex nodes in a polygon ring\n\n\t\tthis.prev = null;\n\t\tthis.next = null; // z-order curve value\n\n\t\tthis.z = null; // previous and next nodes in z-order\n\n\t\tthis.prevZ = null;\n\t\tthis.nextZ = null; // indicates whether this is a steiner point\n\n\t\tthis.steiner = false;\n\t}\n\n\tfunction signedArea(data, start, end, dim) {\n\t\tlet sum = 0;\n\n\t\tfor (let i = start, j = end - dim; i < end; i += dim) {\n\t\t\tsum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n\t\t\tj = i;\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\tclass ShapeUtils {\n\t\t// calculate area of the contour polygon\n\t\tstatic area(contour) {\n\t\t\tconst n = contour.length;\n\t\t\tlet a = 0.0;\n\n\t\t\tfor (let p = n - 1, q = 0; q < n; p = q++) {\n\t\t\t\ta += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\t\t}\n\n\t\tstatic isClockWise(pts) {\n\t\t\treturn ShapeUtils.area(pts) < 0;\n\t\t}\n\n\t\tstatic triangulateShape(contour, holes) {\n\t\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\n\t\t\tconst holeIndices = []; // array of hole indices\n\n\t\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\t\tremoveDupEndPts(contour);\n\t\t\taddContour(vertices, contour); //\n\n\t\t\tlet holeIndex = contour.length;\n\t\t\tholes.forEach(removeDupEndPts);\n\n\t\t\tfor (let i = 0; i < holes.length; i++) {\n\t\t\t\tholeIndices.push(holeIndex);\n\t\t\t\tholeIndex += holes[i].length;\n\t\t\t\taddContour(vertices, holes[i]);\n\t\t\t} //\n\n\n\t\t\tconst triangles = Earcut.triangulate(vertices, holeIndices); //\n\n\t\t\tfor (let i = 0; i < triangles.length; i += 3) {\n\t\t\t\tfaces.push(triangles.slice(i, i + 3));\n\t\t\t}\n\n\t\t\treturn faces;\n\t\t}\n\n\t}\n\n\tfunction removeDupEndPts(points) {\n\t\tconst l = points.length;\n\n\t\tif (l > 2 && points[l - 1].equals(points[0])) {\n\t\t\tpoints.pop();\n\t\t}\n\t}\n\n\tfunction addContour(vertices, contour) {\n\t\tfor (let i = 0; i < contour.length; i++) {\n\t\t\tvertices.push(contour[i].x);\n\t\t\tvertices.push(contour[i].y);\n\t\t}\n\t}\n\n\t/**\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *\tcurveSegments: <int>, // number of points on the curves\n\t *\tsteps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *\tdepth: <float>, // Depth to extrude the shape\n\t *\n\t *\tbevelEnabled: <bool>, // turn on bevel\n\t *\tbevelThickness: <float>, // how deep into the original shape bevel goes\n\t *\tbevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n\t *\tbevelOffset: <float>, // how far from shape outline does bevel start\n\t *\tbevelSegments: <int>, // number of bevel layers\n\t *\n\t *\textrudePath: <THREE.Curve> // curve to extrude shape along\n\t *\n\t *\tUVGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t */\n\n\tclass ExtrudeGeometry extends BufferGeometry {\n\t\tconstructor(shapes = new Shape([new Vector2(0.5, 0.5), new Vector2(-0.5, 0.5), new Vector2(-0.5, -0.5), new Vector2(0.5, -0.5)]), options = {}) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ExtrudeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tshapes: shapes,\n\t\t\t\toptions: options\n\t\t\t};\n\t\t\tshapes = Array.isArray(shapes) ? shapes : [shapes];\n\t\t\tconst scope = this;\n\t\t\tconst verticesArray = [];\n\t\t\tconst uvArray = [];\n\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\tconst shape = shapes[i];\n\t\t\t\taddShape(shape);\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(verticesArray, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvArray, 2));\n\t\t\tthis.computeVertexNormals(); // functions\n\n\t\t\tfunction addShape(shape) {\n\t\t\t\tconst placeholder = []; // options\n\n\t\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\t\tlet depth = options.depth !== undefined ? options.depth : 1;\n\t\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\t\t\t\tconst extrudePath = options.extrudePath;\n\t\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator; // deprecated options\n\n\t\t\t\tif (options.amount !== undefined) {\n\t\t\t\t\tconsole.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');\n\t\t\t\t\tdepth = options.amount;\n\t\t\t\t} //\n\n\n\t\t\t\tlet extrudePts,\n\t\t\t\t\t\textrudeByPath = false;\n\t\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\t\tif (extrudePath) {\n\t\t\t\t\textrudePts = extrudePath.getSpacedPoints(steps);\n\t\t\t\t\textrudeByPath = true;\n\t\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\t\t\t\t\t// SETUP TNB variables\n\t\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\t\tsplineTube = extrudePath.computeFrenetFrames(steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\t\tbinormal = new Vector3();\n\t\t\t\t\tnormal = new Vector3();\n\t\t\t\t\tposition2 = new Vector3();\n\t\t\t\t} // Safeguards if bevels are not enabled\n\n\n\t\t\t\tif (!bevelEnabled) {\n\t\t\t\t\tbevelSegments = 0;\n\t\t\t\t\tbevelThickness = 0;\n\t\t\t\t\tbevelSize = 0;\n\t\t\t\t\tbevelOffset = 0;\n\t\t\t\t} // Variables initialization\n\n\n\t\t\t\tconst shapePoints = shape.extractPoints(curveSegments);\n\t\t\t\tlet vertices = shapePoints.shape;\n\t\t\t\tconst holes = shapePoints.holes;\n\t\t\t\tconst reverse = !ShapeUtils.isClockWise(vertices);\n\n\t\t\t\tif (reverse) {\n\t\t\t\t\tvertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\n\t\t\t\t\t\tif (ShapeUtils.isClockWise(ahole)) {\n\t\t\t\t\t\t\tholes[h] = ahole.reverse();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst faces = ShapeUtils.triangulateShape(vertices, holes);\n\t\t\t\t/* Vertices */\n\n\t\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\tvertices = vertices.concat(ahole);\n\t\t\t\t}\n\n\t\t\t\tfunction scalePt2(pt, vec, size) {\n\t\t\t\t\tif (!vec) console.error('THREE.ExtrudeGeometry: vec does not exist');\n\t\t\t\t\treturn vec.clone().multiplyScalar(size).add(pt);\n\t\t\t\t}\n\n\t\t\t\tconst vlen = vertices.length,\n\t\t\t\t\t\t\tflen = faces.length; // Find directions for point movement\n\n\t\t\t\tfunction getBevelVec(inPt, inPrev, inNext) {\n\t\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t\t//\t shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t\t//\n\t\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t\t//\tadjacent edges of inPt at a distance of 1 unit on the left side.\n\t\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\t\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\t\t\t\t\tconst v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\n\n\t\t\t\t\tconst collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n\n\t\t\t\t\tif (Math.abs(collinear0) > Number.EPSILON) {\n\t\t\t\t\t\t// not collinear\n\t\t\t\t\t\t// length of vectors for normalizing\n\t\t\t\t\t\tconst v_prev_len = Math.sqrt(v_prev_lensq);\n\t\t\t\t\t\tconst v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\n\n\t\t\t\t\t\tconst ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n\t\t\t\t\t\tconst ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n\t\t\t\t\t\tconst ptNextShift_x = inNext.x - v_next_y / v_next_len;\n\t\t\t\t\t\tconst ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\n\n\t\t\t\t\t\tconst sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\n\n\t\t\t\t\t\tv_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n\t\t\t\t\t\tv_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t\t//\tbut prevent crazy spikes\n\n\t\t\t\t\t\tconst v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n\n\t\t\t\t\t\tif (v_trans_lensq <= 2) {\n\t\t\t\t\t\t\treturn new Vector2(v_trans_x, v_trans_y);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_trans_lensq / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// handle special case of collinear edges\n\t\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\t\tif (v_prev_x > Number.EPSILON) {\n\t\t\t\t\t\t\tif (v_next_x > Number.EPSILON) {\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (v_prev_x < -Number.EPSILON) {\n\t\t\t\t\t\t\t\tif (v_next_x < -Number.EPSILON) {\n\t\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n\t\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (direction_eq) {\n\t\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\t\tv_trans_x = -v_prev_y;\n\t\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_prev_lensq);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_prev_lensq / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn new Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n\t\t\t\t}\n\n\t\t\t\tconst contourMovements = [];\n\n\t\t\t\tfor (let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n\t\t\t\t\tif (j === il) j = 0;\n\t\t\t\t\tif (k === il) k = 0; //\t(j)---(i)---(k)\n\t\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\t\tcontourMovements[i] = getBevelVec(contour[i], contour[j], contour[k]);\n\t\t\t\t}\n\n\t\t\t\tconst holesMovements = [];\n\t\t\t\tlet oneHoleMovements,\n\t\t\t\t\t\tverticesMovements = contourMovements.concat();\n\n\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\toneHoleMovements = [];\n\n\t\t\t\t\tfor (let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n\t\t\t\t\t\tif (j === il) j = 0;\n\t\t\t\t\t\tif (k === il) k = 0; //\t(j)---(i)---(k)\n\n\t\t\t\t\t\toneHoleMovements[i] = getBevelVec(ahole[i], ahole[j], ahole[k]);\n\t\t\t\t\t}\n\n\t\t\t\t\tholesMovements.push(oneHoleMovements);\n\t\t\t\t\tverticesMovements = verticesMovements.concat(oneHoleMovements);\n\t\t\t\t} // Loop bevelSegments, 1 for the front, 1 for the back\n\n\n\t\t\t\tfor (let b = 0; b < bevelSegments; b++) {\n\t\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\t\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\t\tconst z = bevelThickness * Math.cos(t * Math.PI / 2);\n\t\t\t\t\tconst bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset; // contract shape\n\n\t\t\t\t\tfor (let i = 0, il = contour.length; i < il; i++) {\n\t\t\t\t\t\tconst vert = scalePt2(contour[i], contourMovements[i], bs);\n\t\t\t\t\t\tv(vert.x, vert.y, -z);\n\t\t\t\t\t} // expand holes\n\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\t\toneHoleMovements = holesMovements[h];\n\n\t\t\t\t\t\tfor (let i = 0, il = ahole.length; i < il; i++) {\n\t\t\t\t\t\t\tconst vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\t\t\t\t\t\t\tv(vert.x, vert.y, -z);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst bs = bevelSize + bevelOffset; // Back facing vertices\n\n\t\t\t\tfor (let i = 0; i < vlen; i++) {\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n\t\t\t\t\tif (!extrudeByPath) {\n\t\t\t\t\t\tv(vert.x, vert.y, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\t\t\t\t\t\tnormal.copy(splineTube.normals[0]).multiplyScalar(vert.x);\n\t\t\t\t\t\tbinormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);\n\t\t\t\t\t\tposition2.copy(extrudePts[0]).add(normal).add(binormal);\n\t\t\t\t\t\tv(position2.x, position2.y, position2.z);\n\t\t\t\t\t}\n\t\t\t\t} // Add stepped vertices...\n\t\t\t\t// Including front facing vertices\n\n\n\t\t\t\tfor (let s = 1; s <= steps; s++) {\n\t\t\t\t\tfor (let i = 0; i < vlen; i++) {\n\t\t\t\t\t\tconst vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n\t\t\t\t\t\tif (!extrudeByPath) {\n\t\t\t\t\t\t\tv(vert.x, vert.y, depth / steps * s);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\t\t\t\t\t\t\tnormal.copy(splineTube.normals[s]).multiplyScalar(vert.x);\n\t\t\t\t\t\t\tbinormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);\n\t\t\t\t\t\t\tposition2.copy(extrudePts[s]).add(normal).add(binormal);\n\t\t\t\t\t\t\tv(position2.x, position2.y, position2.z);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // Add bevel segments planes\n\t\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\n\n\t\t\t\tfor (let b = bevelSegments - 1; b >= 0; b--) {\n\t\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\t\tconst z = bevelThickness * Math.cos(t * Math.PI / 2);\n\t\t\t\t\tconst bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset; // contract shape\n\n\t\t\t\t\tfor (let i = 0, il = contour.length; i < il; i++) {\n\t\t\t\t\t\tconst vert = scalePt2(contour[i], contourMovements[i], bs);\n\t\t\t\t\t\tv(vert.x, vert.y, depth + z);\n\t\t\t\t\t} // expand holes\n\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\t\toneHoleMovements = holesMovements[h];\n\n\t\t\t\t\t\tfor (let i = 0, il = ahole.length; i < il; i++) {\n\t\t\t\t\t\t\tconst vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\n\t\t\t\t\t\t\tif (!extrudeByPath) {\n\t\t\t\t\t\t\t\tv(vert.x, vert.y, depth + z);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tv(vert.x, vert.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + z);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/* Faces */\n\t\t\t\t// Top and bottom faces\n\n\n\t\t\t\tbuildLidFaces(); // Sides faces\n\n\t\t\t\tbuildSideFaces(); /////\tInternal functions\n\n\t\t\t\tfunction buildLidFaces() {\n\t\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\t\tif (bevelEnabled) {\n\t\t\t\t\t\tlet layer = 0; // steps + 1\n\n\t\t\t\t\t\tlet offset = vlen * layer; // Bottom faces\n\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[2] + offset, face[1] + offset, face[0] + offset);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\t\toffset = vlen * layer; // Top faces\n\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[0] + offset, face[1] + offset, face[2] + offset);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Bottom faces\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[2], face[1], face[0]);\n\t\t\t\t\t\t} // Top faces\n\n\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[0] + vlen * steps, face[1] + vlen * steps, face[2] + vlen * steps);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.addGroup(start, verticesArray.length / 3 - start, 0);\n\t\t\t\t} // Create faces for the z-sides of the shape\n\n\n\t\t\t\tfunction buildSideFaces() {\n\t\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\t\tlet layeroffset = 0;\n\t\t\t\t\tsidewalls(contour, layeroffset);\n\t\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\t\tsidewalls(ahole, layeroffset); //, true\n\n\t\t\t\t\t\tlayeroffset += ahole.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.addGroup(start, verticesArray.length / 3 - start, 1);\n\t\t\t\t}\n\n\t\t\t\tfunction sidewalls(contour, layeroffset) {\n\t\t\t\t\tlet i = contour.length;\n\n\t\t\t\t\twhile (--i >= 0) {\n\t\t\t\t\t\tconst j = i;\n\t\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\t\tif (k < 0) k = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\t\tfor (let s = 0, sl = steps + bevelSegments * 2; s < sl; s++) {\n\t\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\t\tconst slen2 = vlen * (s + 1);\n\t\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\t\t\t\t\t\t\tf4(a, b, c, d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction v(x, y, z) {\n\t\t\t\t\tplaceholder.push(x);\n\t\t\t\t\tplaceholder.push(y);\n\t\t\t\t\tplaceholder.push(z);\n\t\t\t\t}\n\n\t\t\t\tfunction f3(a, b, c) {\n\t\t\t\t\taddVertex(a);\n\t\t\t\t\taddVertex(b);\n\t\t\t\t\taddVertex(c);\n\t\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\t\tconst uvs = uvgen.generateTopUV(scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n\t\t\t\t\taddUV(uvs[0]);\n\t\t\t\t\taddUV(uvs[1]);\n\t\t\t\t\taddUV(uvs[2]);\n\t\t\t\t}\n\n\t\t\t\tfunction f4(a, b, c, d) {\n\t\t\t\t\taddVertex(a);\n\t\t\t\t\taddVertex(b);\n\t\t\t\t\taddVertex(d);\n\t\t\t\t\taddVertex(b);\n\t\t\t\t\taddVertex(c);\n\t\t\t\t\taddVertex(d);\n\t\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\t\tconst uvs = uvgen.generateSideWallUV(scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n\t\t\t\t\taddUV(uvs[0]);\n\t\t\t\t\taddUV(uvs[1]);\n\t\t\t\t\taddUV(uvs[3]);\n\t\t\t\t\taddUV(uvs[1]);\n\t\t\t\t\taddUV(uvs[2]);\n\t\t\t\t\taddUV(uvs[3]);\n\t\t\t\t}\n\n\t\t\t\tfunction addVertex(index) {\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 0]);\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 1]);\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 2]);\n\t\t\t\t}\n\n\t\t\t\tfunction addUV(vector2) {\n\t\t\t\t\tuvArray.push(vector2.x);\n\t\t\t\t\tuvArray.push(vector2.y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tconst shapes = this.parameters.shapes;\n\t\t\tconst options = this.parameters.options;\n\t\t\treturn toJSON$1(shapes, options, data);\n\t\t}\n\n\t\tstatic fromJSON(data, shapes) {\n\t\t\tconst geometryShapes = [];\n\n\t\t\tfor (let j = 0, jl = data.shapes.length; j < jl; j++) {\n\t\t\t\tconst shape = shapes[data.shapes[j]];\n\t\t\t\tgeometryShapes.push(shape);\n\t\t\t}\n\n\t\t\tconst extrudePath = data.options.extrudePath;\n\n\t\t\tif (extrudePath !== undefined) {\n\t\t\t\tdata.options.extrudePath = new Curves[extrudePath.type]().fromJSON(extrudePath);\n\t\t\t}\n\n\t\t\treturn new ExtrudeGeometry(geometryShapes, data.options);\n\t\t}\n\n\t}\n\n\tconst WorldUVGenerator = {\n\t\tgenerateTopUV: function (geometry, vertices, indexA, indexB, indexC) {\n\t\t\tconst a_x = vertices[indexA * 3];\n\t\t\tconst a_y = vertices[indexA * 3 + 1];\n\t\t\tconst b_x = vertices[indexB * 3];\n\t\t\tconst b_y = vertices[indexB * 3 + 1];\n\t\t\tconst c_x = vertices[indexC * 3];\n\t\t\tconst c_y = vertices[indexC * 3 + 1];\n\t\t\treturn [new Vector2(a_x, a_y), new Vector2(b_x, b_y), new Vector2(c_x, c_y)];\n\t\t},\n\t\tgenerateSideWallUV: function (geometry, vertices, indexA, indexB, indexC, indexD) {\n\t\t\tconst a_x = vertices[indexA * 3];\n\t\t\tconst a_y = vertices[indexA * 3 + 1];\n\t\t\tconst a_z = vertices[indexA * 3 + 2];\n\t\t\tconst b_x = vertices[indexB * 3];\n\t\t\tconst b_y = vertices[indexB * 3 + 1];\n\t\t\tconst b_z = vertices[indexB * 3 + 2];\n\t\t\tconst c_x = vertices[indexC * 3];\n\t\t\tconst c_y = vertices[indexC * 3 + 1];\n\t\t\tconst c_z = vertices[indexC * 3 + 2];\n\t\t\tconst d_x = vertices[indexD * 3];\n\t\t\tconst d_y = vertices[indexD * 3 + 1];\n\t\t\tconst d_z = vertices[indexD * 3 + 2];\n\n\t\t\tif (Math.abs(a_y - b_y) < Math.abs(a_x - b_x)) {\n\t\t\t\treturn [new Vector2(a_x, 1 - a_z), new Vector2(b_x, 1 - b_z), new Vector2(c_x, 1 - c_z), new Vector2(d_x, 1 - d_z)];\n\t\t\t} else {\n\t\t\t\treturn [new Vector2(a_y, 1 - a_z), new Vector2(b_y, 1 - b_z), new Vector2(c_y, 1 - c_z), new Vector2(d_y, 1 - d_z)];\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction toJSON$1(shapes, options, data) {\n\t\tdata.shapes = [];\n\n\t\tif (Array.isArray(shapes)) {\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\tconst shape = shapes[i];\n\t\t\t\tdata.shapes.push(shape.uuid);\n\t\t\t}\n\t\t} else {\n\t\t\tdata.shapes.push(shapes.uuid);\n\t\t}\n\n\t\tif (options.extrudePath !== undefined) data.options.extrudePath = options.extrudePath.toJSON();\n\t\treturn data;\n\t}\n\n\tclass IcosahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst t = (1 + Math.sqrt(5)) / 2;\n\t\t\tconst vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\n\t\t\tconst indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'IcosahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new IcosahedronGeometry(data.radius, data.detail);\n\t\t}\n\n\t}\n\n\tclass LatheGeometry extends BufferGeometry {\n\t\tconstructor(points = [new Vector2(0, 0.5), new Vector2(0.5, 0), new Vector2(0, -0.5)], segments = 12, phiStart = 0, phiLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LatheGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tpoints: points,\n\t\t\t\tsegments: segments,\n\t\t\t\tphiStart: phiStart,\n\t\t\t\tphiLength: phiLength\n\t\t\t};\n\t\t\tsegments = Math.floor(segments); // clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\t\tphiLength = clamp(phiLength, 0, Math.PI * 2); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst uvs = [];\n\t\t\tconst initNormals = [];\n\t\t\tconst normals = []; // helper variables\n\n\t\t\tconst inverseSegments = 1.0 / segments;\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst uv = new Vector2();\n\t\t\tconst normal = new Vector3();\n\t\t\tconst curNormal = new Vector3();\n\t\t\tconst prevNormal = new Vector3();\n\t\t\tlet dx = 0;\n\t\t\tlet dy = 0; // pre-compute normals for initial \"meridian\"\n\n\t\t\tfor (let j = 0; j <= points.length - 1; j++) {\n\t\t\t\tswitch (j) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\t// special handling for 1st vertex on path\n\t\t\t\t\t\tdx = points[j + 1].x - points[j].x;\n\t\t\t\t\t\tdy = points[j + 1].y - points[j].y;\n\t\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\t\tnormal.y = -dx;\n\t\t\t\t\t\tnormal.z = dy * 0.0;\n\t\t\t\t\t\tprevNormal.copy(normal);\n\t\t\t\t\t\tnormal.normalize();\n\t\t\t\t\t\tinitNormals.push(normal.x, normal.y, normal.z);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase points.length - 1:\n\t\t\t\t\t\t// special handling for last Vertex on path\n\t\t\t\t\t\tinitNormals.push(prevNormal.x, prevNormal.y, prevNormal.z);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// default handling for all vertices in between\n\t\t\t\t\t\tdx = points[j + 1].x - points[j].x;\n\t\t\t\t\t\tdy = points[j + 1].y - points[j].y;\n\t\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\t\tnormal.y = -dx;\n\t\t\t\t\t\tnormal.z = dy * 0.0;\n\t\t\t\t\t\tcurNormal.copy(normal);\n\t\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\t\tnormal.z += prevNormal.z;\n\t\t\t\t\t\tnormal.normalize();\n\t\t\t\t\t\tinitNormals.push(normal.x, normal.y, normal.z);\n\t\t\t\t\t\tprevNormal.copy(curNormal);\n\t\t\t\t}\n\t\t\t} // generate vertices, uvs and normals\n\n\n\t\t\tfor (let i = 0; i <= segments; i++) {\n\t\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\t\t\t\tconst sin = Math.sin(phi);\n\t\t\t\tconst cos = Math.cos(phi);\n\n\t\t\t\tfor (let j = 0; j <= points.length - 1; j++) {\n\t\t\t\t\t// vertex\n\t\t\t\t\tvertex.x = points[j].x * sin;\n\t\t\t\t\tvertex.y = points[j].y;\n\t\t\t\t\tvertex.z = points[j].x * cos;\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // uv\n\n\t\t\t\t\tuv.x = i / segments;\n\t\t\t\t\tuv.y = j / (points.length - 1);\n\t\t\t\t\tuvs.push(uv.x, uv.y); // normal\n\n\t\t\t\t\tconst x = initNormals[3 * j + 0] * sin;\n\t\t\t\t\tconst y = initNormals[3 * j + 1];\n\t\t\t\t\tconst z = initNormals[3 * j + 0] * cos;\n\t\t\t\t\tnormals.push(x, y, z);\n\t\t\t\t}\n\t\t\t} // indices\n\n\n\t\t\tfor (let i = 0; i < segments; i++) {\n\t\t\t\tfor (let j = 0; j < points.length - 1; j++) {\n\t\t\t\t\tconst base = j + i * points.length;\n\t\t\t\t\tconst a = base;\n\t\t\t\t\tconst b = base + points.length;\n\t\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\t\tconst d = base + 1; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(c, d, b);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new LatheGeometry(data.points, data.segments, data.phiStart, data.phiLength);\n\t\t}\n\n\t}\n\n\tclass OctahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n\t\t\tconst indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'OctahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new OctahedronGeometry(data.radius, data.detail);\n\t\t}\n\n\t}\n\n\tclass RingGeometry extends BufferGeometry {\n\t\tconstructor(innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'RingGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tthetaSegments: thetaSegments,\n\t\t\t\tphiSegments: phiSegments,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\tthetaSegments = Math.max(3, thetaSegments);\n\t\t\tphiSegments = Math.max(1, phiSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // some helper variables\n\n\t\t\tlet radius = innerRadius;\n\t\t\tconst radiusStep = (outerRadius - innerRadius) / phiSegments;\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst uv = new Vector2(); // generate vertices, normals and uvs\n\n\t\t\tfor (let j = 0; j <= phiSegments; j++) {\n\t\t\t\tfor (let i = 0; i <= thetaSegments; i++) {\n\t\t\t\t\t// values are generate from the inside of the ring to the outside\n\t\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength; // vertex\n\n\t\t\t\t\tvertex.x = radius * Math.cos(segment);\n\t\t\t\t\tvertex.y = radius * Math.sin(segment);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tnormals.push(0, 0, 1); // uv\n\n\t\t\t\t\tuv.x = (vertex.x / outerRadius + 1) / 2;\n\t\t\t\t\tuv.y = (vertex.y / outerRadius + 1) / 2;\n\t\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t\t} // increase the radius for next row of vertices\n\n\n\t\t\t\tradius += radiusStep;\n\t\t\t} // indices\n\n\n\t\t\tfor (let j = 0; j < phiSegments; j++) {\n\t\t\t\tconst thetaSegmentLevel = j * (thetaSegments + 1);\n\n\t\t\t\tfor (let i = 0; i < thetaSegments; i++) {\n\t\t\t\t\tconst segment = i + thetaSegmentLevel;\n\t\t\t\t\tconst a = segment;\n\t\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\t\tconst d = segment + 1; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new RingGeometry(data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass ShapeGeometry extends BufferGeometry {\n\t\tconstructor(shapes = new Shape([new Vector2(0, 0.5), new Vector2(-0.5, -0.5), new Vector2(0.5, -0.5)]), curveSegments = 12) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ShapeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tshapes: shapes,\n\t\t\t\tcurveSegments: curveSegments\n\t\t\t}; // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tlet groupStart = 0;\n\t\t\tlet groupCount = 0; // allow single and array values for \"shapes\" parameter\n\n\t\t\tif (Array.isArray(shapes) === false) {\n\t\t\t\taddShape(shapes);\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < shapes.length; i++) {\n\t\t\t\t\taddShape(shapes[i]);\n\t\t\t\t\tthis.addGroup(groupStart, groupCount, i); // enables MultiMaterial support\n\n\t\t\t\t\tgroupStart += groupCount;\n\t\t\t\t\tgroupCount = 0;\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // helper functions\n\n\t\t\tfunction addShape(shape) {\n\t\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\t\tconst points = shape.extractPoints(curveSegments);\n\t\t\t\tlet shapeVertices = points.shape;\n\t\t\t\tconst shapeHoles = points.holes; // check direction of vertices\n\n\t\t\t\tif (ShapeUtils.isClockWise(shapeVertices) === false) {\n\t\t\t\t\tshapeVertices = shapeVertices.reverse();\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0, l = shapeHoles.length; i < l; i++) {\n\t\t\t\t\tconst shapeHole = shapeHoles[i];\n\n\t\t\t\t\tif (ShapeUtils.isClockWise(shapeHole) === true) {\n\t\t\t\t\t\tshapeHoles[i] = shapeHole.reverse();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst faces = ShapeUtils.triangulateShape(shapeVertices, shapeHoles); // join vertices of inner and outer paths to a single array\n\n\t\t\t\tfor (let i = 0, l = shapeHoles.length; i < l; i++) {\n\t\t\t\t\tconst shapeHole = shapeHoles[i];\n\t\t\t\t\tshapeVertices = shapeVertices.concat(shapeHole);\n\t\t\t\t} // vertices, normals, uvs\n\n\n\t\t\t\tfor (let i = 0, l = shapeVertices.length; i < l; i++) {\n\t\t\t\t\tconst vertex = shapeVertices[i];\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, 0);\n\t\t\t\t\tnormals.push(0, 0, 1);\n\t\t\t\t\tuvs.push(vertex.x, vertex.y); // world uvs\n\t\t\t\t} // incides\n\n\n\t\t\t\tfor (let i = 0, l = faces.length; i < l; i++) {\n\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\tconst a = face[0] + indexOffset;\n\t\t\t\t\tconst b = face[1] + indexOffset;\n\t\t\t\t\tconst c = face[2] + indexOffset;\n\t\t\t\t\tindices.push(a, b, c);\n\t\t\t\t\tgroupCount += 3;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tconst shapes = this.parameters.shapes;\n\t\t\treturn toJSON(shapes, data);\n\t\t}\n\n\t\tstatic fromJSON(data, shapes) {\n\t\t\tconst geometryShapes = [];\n\n\t\t\tfor (let j = 0, jl = data.shapes.length; j < jl; j++) {\n\t\t\t\tconst shape = shapes[data.shapes[j]];\n\t\t\t\tgeometryShapes.push(shape);\n\t\t\t}\n\n\t\t\treturn new ShapeGeometry(geometryShapes, data.curveSegments);\n\t\t}\n\n\t}\n\n\tfunction toJSON(shapes, data) {\n\t\tdata.shapes = [];\n\n\t\tif (Array.isArray(shapes)) {\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\tconst shape = shapes[i];\n\t\t\t\tdata.shapes.push(shape.uuid);\n\t\t\t}\n\t\t} else {\n\t\t\tdata.shapes.push(shapes.uuid);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tclass SphereGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI) {\n\t\t\tsuper();\n\t\t\tthis.type = 'SphereGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tphiStart: phiStart,\n\t\t\t\tphiLength: phiLength,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\twidthSegments = Math.max(3, Math.floor(widthSegments));\n\t\t\theightSegments = Math.max(2, Math.floor(heightSegments));\n\t\t\tconst thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\n\t\t\tlet index = 0;\n\t\t\tconst grid = [];\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3(); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // generate vertices, normals and uvs\n\n\t\t\tfor (let iy = 0; iy <= heightSegments; iy++) {\n\t\t\t\tconst verticesRow = [];\n\t\t\t\tconst v = iy / heightSegments; // special case for the poles\n\n\t\t\t\tlet uOffset = 0;\n\n\t\t\t\tif (iy == 0 && thetaStart == 0) {\n\t\t\t\t\tuOffset = 0.5 / widthSegments;\n\t\t\t\t} else if (iy == heightSegments && thetaEnd == Math.PI) {\n\t\t\t\t\tuOffset = -0.5 / widthSegments;\n\t\t\t\t}\n\n\t\t\t\tfor (let ix = 0; ix <= widthSegments; ix++) {\n\t\t\t\t\tconst u = ix / widthSegments; // vertex\n\n\t\t\t\t\tvertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n\t\t\t\t\tvertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n\t\t\t\t\tvertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tnormal.copy(vertex).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(u + uOffset, 1 - v);\n\t\t\t\t\tverticesRow.push(index++);\n\t\t\t\t}\n\n\t\t\t\tgrid.push(verticesRow);\n\t\t\t} // indices\n\n\n\t\t\tfor (let iy = 0; iy < heightSegments; iy++) {\n\t\t\t\tfor (let ix = 0; ix < widthSegments; ix++) {\n\t\t\t\t\tconst a = grid[iy][ix + 1];\n\t\t\t\t\tconst b = grid[iy][ix];\n\t\t\t\t\tconst c = grid[iy + 1][ix];\n\t\t\t\t\tconst d = grid[iy + 1][ix + 1];\n\t\t\t\t\tif (iy !== 0 || thetaStart > 0) indices.push(a, b, d);\n\t\t\t\t\tif (iy !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new SphereGeometry(data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n\t\t}\n\n\t}\n\n\tclass TetrahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n\t\t\tconst indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'TetrahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new TetrahedronGeometry(data.radius, data.detail);\n\t\t}\n\n\t}\n\n\tclass TorusGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'TorusGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\ttube: tube,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tarc: arc\n\t\t\t};\n\t\t\tradialSegments = Math.floor(radialSegments);\n\t\t\ttubularSegments = Math.floor(tubularSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst center = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3(); // generate vertices, normals and uvs\n\n\t\t\tfor (let j = 0; j <= radialSegments; j++) {\n\t\t\t\tfor (let i = 0; i <= tubularSegments; i++) {\n\t\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2; // vertex\n\n\t\t\t\t\tvertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n\t\t\t\t\tvertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n\t\t\t\t\tvertex.z = tube * Math.sin(v);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tcenter.x = radius * Math.cos(u);\n\t\t\t\t\tcenter.y = radius * Math.sin(u);\n\t\t\t\t\tnormal.subVectors(vertex, center).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(i / tubularSegments);\n\t\t\t\t\tuvs.push(j / radialSegments);\n\t\t\t\t}\n\t\t\t} // generate indices\n\n\n\t\t\tfor (let j = 1; j <= radialSegments; j++) {\n\t\t\t\tfor (let i = 1; i <= tubularSegments; i++) {\n\t\t\t\t\t// indices\n\t\t\t\t\tconst a = (tubularSegments + 1) * j + i - 1;\n\t\t\t\t\tconst b = (tubularSegments + 1) * (j - 1) + i - 1;\n\t\t\t\t\tconst c = (tubularSegments + 1) * (j - 1) + i;\n\t\t\t\t\tconst d = (tubularSegments + 1) * j + i; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new TorusGeometry(data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n\t\t}\n\n\t}\n\n\tclass TorusKnotGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3) {\n\t\t\tsuper();\n\t\t\tthis.type = 'TorusKnotGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\ttube: tube,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\tp: p,\n\t\t\t\tq: q\n\t\t\t};\n\t\t\ttubularSegments = Math.floor(tubularSegments);\n\t\t\tradialSegments = Math.floor(radialSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3();\n\t\t\tconst P1 = new Vector3();\n\t\t\tconst P2 = new Vector3();\n\t\t\tconst B = new Vector3();\n\t\t\tconst T = new Vector3();\n\t\t\tconst N = new Vector3(); // generate vertices, normals and uvs\n\n\t\t\tfor (let i = 0; i <= tubularSegments; ++i) {\n\t\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\t\t\t\tconst u = i / tubularSegments * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\t\tcalculatePositionOnCurve(u, p, q, radius, P1);\n\t\t\t\tcalculatePositionOnCurve(u + 0.01, p, q, radius, P2); // calculate orthonormal basis\n\n\t\t\t\tT.subVectors(P2, P1);\n\t\t\t\tN.addVectors(P2, P1);\n\t\t\t\tB.crossVectors(T, N);\n\t\t\t\tN.crossVectors(B, T); // normalize B, N. T can be ignored, we don't use it\n\n\t\t\t\tB.normalize();\n\t\t\t\tN.normalize();\n\n\t\t\t\tfor (let j = 0; j <= radialSegments; ++j) {\n\t\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\t\tconst cx = -tube * Math.cos(v);\n\t\t\t\t\tconst cy = tube * Math.sin(v); // now calculate the final vertex position.\n\t\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\t\tvertex.x = P1.x + (cx * N.x + cy * B.x);\n\t\t\t\t\tvertex.y = P1.y + (cx * N.y + cy * B.y);\n\t\t\t\t\tvertex.z = P1.z + (cx * N.z + cy * B.z);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\t\tnormal.subVectors(vertex, P1).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(i / tubularSegments);\n\t\t\t\t\tuvs.push(j / radialSegments);\n\t\t\t\t}\n\t\t\t} // generate indices\n\n\n\t\t\tfor (let j = 1; j <= tubularSegments; j++) {\n\t\t\t\tfor (let i = 1; i <= radialSegments; i++) {\n\t\t\t\t\t// indices\n\t\t\t\t\tconst a = (radialSegments + 1) * (j - 1) + (i - 1);\n\t\t\t\t\tconst b = (radialSegments + 1) * j + (i - 1);\n\t\t\t\t\tconst c = (radialSegments + 1) * j + i;\n\t\t\t\t\tconst d = (radialSegments + 1) * (j - 1) + i; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // this function calculates the current position on the torus curve\n\n\t\t\tfunction calculatePositionOnCurve(u, p, q, radius, position) {\n\t\t\t\tconst cu = Math.cos(u);\n\t\t\t\tconst su = Math.sin(u);\n\t\t\t\tconst quOverP = q / p * u;\n\t\t\t\tconst cs = Math.cos(quOverP);\n\t\t\t\tposition.x = radius * (2 + cs) * 0.5 * cu;\n\t\t\t\tposition.y = radius * (2 + cs) * su * 0.5;\n\t\t\t\tposition.z = radius * Math.sin(quOverP) * 0.5;\n\t\t\t}\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\treturn new TorusKnotGeometry(data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n\t\t}\n\n\t}\n\n\tclass TubeGeometry extends BufferGeometry {\n\t\tconstructor(path = new QuadraticBezierCurve3(new Vector3(-1, -1, 0), new Vector3(-1, 1, 0), new Vector3(1, 1, 0)), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false) {\n\t\t\tsuper();\n\t\t\tthis.type = 'TubeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tpath: path,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tradius: radius,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\tclosed: closed\n\t\t\t};\n\t\t\tconst frames = path.computeFrenetFrames(tubularSegments, closed); // expose internals\n\n\t\t\tthis.tangents = frames.tangents;\n\t\t\tthis.normals = frames.normals;\n\t\t\tthis.binormals = frames.binormals; // helper variables\n\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3();\n\t\t\tconst uv = new Vector2();\n\t\t\tlet P = new Vector3(); // buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\t\t\tconst indices = []; // create buffer data\n\n\t\t\tgenerateBufferData(); // build geometry\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // functions\n\n\t\t\tfunction generateBufferData() {\n\t\t\t\tfor (let i = 0; i < tubularSegments; i++) {\n\t\t\t\t\tgenerateSegment(i);\n\t\t\t\t} // if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t\t// at the regular position on the given path\n\t\t\t\t//\n\t\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\n\t\t\t\tgenerateSegment(closed === false ? tubularSegments : 0); // uvs are generated in a separate function.\n\t\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\t\tgenerateUVs(); // finally create faces\n\n\t\t\t\tgenerateIndices();\n\t\t\t}\n\n\t\t\tfunction generateSegment(i) {\n\t\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\t\t\t\tP = path.getPointAt(i / tubularSegments, P); // retrieve corresponding normal and binormal\n\n\t\t\t\tconst N = frames.normals[i];\n\t\t\t\tconst B = frames.binormals[i]; // generate normals and vertices for the current segment\n\n\t\t\t\tfor (let j = 0; j <= radialSegments; j++) {\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\t\tconst sin = Math.sin(v);\n\t\t\t\t\tconst cos = -Math.cos(v); // normal\n\n\t\t\t\t\tnormal.x = cos * N.x + sin * B.x;\n\t\t\t\t\tnormal.y = cos * N.y + sin * B.y;\n\t\t\t\t\tnormal.z = cos * N.z + sin * B.z;\n\t\t\t\t\tnormal.normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // vertex\n\n\t\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\t\tvertex.z = P.z + radius * normal.z;\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction generateIndices() {\n\t\t\t\tfor (let j = 1; j <= tubularSegments; j++) {\n\t\t\t\t\tfor (let i = 1; i <= radialSegments; i++) {\n\t\t\t\t\t\tconst a = (radialSegments + 1) * (j - 1) + (i - 1);\n\t\t\t\t\t\tconst b = (radialSegments + 1) * j + (i - 1);\n\t\t\t\t\t\tconst c = (radialSegments + 1) * j + i;\n\t\t\t\t\t\tconst d = (radialSegments + 1) * (j - 1) + i; // faces\n\n\t\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction generateUVs() {\n\t\t\t\tfor (let i = 0; i <= tubularSegments; i++) {\n\t\t\t\t\tfor (let j = 0; j <= radialSegments; j++) {\n\t\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\t\tuv.y = j / radialSegments;\n\t\t\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.path = this.parameters.path.toJSON();\n\t\t\treturn data;\n\t\t}\n\n\t\tstatic fromJSON(data) {\n\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\treturn new TubeGeometry(new Curves[data.path.type]().fromJSON(data.path), data.tubularSegments, data.radius, data.radialSegments, data.closed);\n\t\t}\n\n\t}\n\n\tclass WireframeGeometry extends BufferGeometry {\n\t\tconstructor(geometry = null) {\n\t\t\tsuper();\n\t\t\tthis.type = 'WireframeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tgeometry: geometry\n\t\t\t};\n\n\t\t\tif (geometry !== null) {\n\t\t\t\t// buffer\n\t\t\t\tconst vertices = [];\n\t\t\t\tconst edges = new Set(); // helper variables\n\n\t\t\t\tconst start = new Vector3();\n\t\t\t\tconst end = new Vector3();\n\n\t\t\t\tif (geometry.index !== null) {\n\t\t\t\t\t// indexed BufferGeometry\n\t\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\t\tconst indices = geometry.index;\n\t\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\t\tif (groups.length === 0) {\n\t\t\t\t\t\tgroups = [{\n\t\t\t\t\t\t\tstart: 0,\n\t\t\t\t\t\t\tcount: indices.count,\n\t\t\t\t\t\t\tmaterialIndex: 0\n\t\t\t\t\t\t}];\n\t\t\t\t\t} // create a data structure that contains all eges without duplicates\n\n\n\t\t\t\t\tfor (let o = 0, ol = groups.length; o < ol; ++o) {\n\t\t\t\t\t\tconst group = groups[o];\n\t\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\t\tfor (let i = groupStart, l = groupStart + groupCount; i < l; i += 3) {\n\t\t\t\t\t\t\tfor (let j = 0; j < 3; j++) {\n\t\t\t\t\t\t\t\tconst index1 = indices.getX(i + j);\n\t\t\t\t\t\t\t\tconst index2 = indices.getX(i + (j + 1) % 3);\n\t\t\t\t\t\t\t\tstart.fromBufferAttribute(position, index1);\n\t\t\t\t\t\t\t\tend.fromBufferAttribute(position, index2);\n\n\t\t\t\t\t\t\t\tif (isUniqueEdge(start, end, edges) === true) {\n\t\t\t\t\t\t\t\t\tvertices.push(start.x, start.y, start.z);\n\t\t\t\t\t\t\t\t\tvertices.push(end.x, end.y, end.z);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// non-indexed BufferGeometry\n\t\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\t\tfor (let i = 0, l = position.count / 3; i < l; i++) {\n\t\t\t\t\t\tfor (let j = 0; j < 3; j++) {\n\t\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\t\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\t\tconst index2 = 3 * i + (j + 1) % 3;\n\t\t\t\t\t\t\tstart.fromBufferAttribute(position, index1);\n\t\t\t\t\t\t\tend.fromBufferAttribute(position, index2);\n\n\t\t\t\t\t\t\tif (isUniqueEdge(start, end, edges) === true) {\n\t\t\t\t\t\t\t\tvertices.push(start.x, start.y, start.z);\n\t\t\t\t\t\t\t\tvertices.push(end.x, end.y, end.z);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // build geometry\n\n\n\t\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction isUniqueEdge(start, end, edges) {\n\t\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\t\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\t\tif (edges.has(hash1) === true || edges.has(hash2) === true) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tedges.add(hash1, hash2);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tvar Geometries = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tBoxGeometry: BoxGeometry,\n\t\tBoxBufferGeometry: BoxGeometry,\n\t\tCircleGeometry: CircleGeometry,\n\t\tCircleBufferGeometry: CircleGeometry,\n\t\tConeGeometry: ConeGeometry,\n\t\tConeBufferGeometry: ConeGeometry,\n\t\tCylinderGeometry: CylinderGeometry,\n\t\tCylinderBufferGeometry: CylinderGeometry,\n\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\tDodecahedronBufferGeometry: DodecahedronGeometry,\n\t\tEdgesGeometry: EdgesGeometry,\n\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\tExtrudeBufferGeometry: ExtrudeGeometry,\n\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\tIcosahedronBufferGeometry: IcosahedronGeometry,\n\t\tLatheGeometry: LatheGeometry,\n\t\tLatheBufferGeometry: LatheGeometry,\n\t\tOctahedronGeometry: OctahedronGeometry,\n\t\tOctahedronBufferGeometry: OctahedronGeometry,\n\t\tPlaneGeometry: PlaneGeometry,\n\t\tPlaneBufferGeometry: PlaneGeometry,\n\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\tPolyhedronBufferGeometry: PolyhedronGeometry,\n\t\tRingGeometry: RingGeometry,\n\t\tRingBufferGeometry: RingGeometry,\n\t\tShapeGeometry: ShapeGeometry,\n\t\tShapeBufferGeometry: ShapeGeometry,\n\t\tSphereGeometry: SphereGeometry,\n\t\tSphereBufferGeometry: SphereGeometry,\n\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\tTetrahedronBufferGeometry: TetrahedronGeometry,\n\t\tTorusGeometry: TorusGeometry,\n\t\tTorusBufferGeometry: TorusGeometry,\n\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\tTorusKnotBufferGeometry: TorusKnotGeometry,\n\t\tTubeGeometry: TubeGeometry,\n\t\tTubeBufferGeometry: TubeGeometry,\n\t\tWireframeGeometry: WireframeGeometry\n\t});\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <THREE.Color>\n\t * }\n\t */\n\n\tclass ShadowMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ShadowMaterial';\n\t\t\tthis.color = new Color(0x000000);\n\t\t\tthis.transparent = true;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tShadowMaterial.prototype.isShadowMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\troughness: <float>,\n\t *\tmetalness: <float>,\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\troughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tmetalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tenvMapIntensity: <float>\n\t *\n\t *\trefractionRatio: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshStandardMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshStandardMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.roughness = 1.0;\n\t\t\tthis.metalness = 0.0;\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.roughnessMap = null;\n\t\t\tthis.metalnessMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.envMapIntensity = 1.0;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.flatShading = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': ''\n\t\t\t};\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.roughness = source.roughness;\n\t\t\tthis.metalness = source.metalness;\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.roughnessMap = source.roughnessMap;\n\t\t\tthis.metalnessMap = source.metalnessMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.envMapIntensity = source.envMapIntensity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tclearcoat: <float>,\n\t *\tclearcoatMap: new THREE.Texture( <Image> ),\n\t *\tclearcoatRoughness: <float>,\n\t *\tclearcoatRoughnessMap: new THREE.Texture( <Image> ),\n\t *\tclearcoatNormalScale: <Vector2>,\n\t *\tclearcoatNormalMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tior: <float>,\n\t *\treflectivity: <float>,\n\t *\n\t *\tsheen: <float>,\n\t *\tsheenColor: <Color>,\n\t *\tsheenColorMap: new THREE.Texture( <Image> ),\n\t *\tsheenRoughness: <float>,\n\t *\tsheenRoughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *\ttransmission: <float>,\n\t *\ttransmissionMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tthickness: <float>,\n\t *\tthicknessMap: new THREE.Texture( <Image> ),\n\t *\tattenuationDistance: <float>,\n\t *\tattenuationColor: <Color>,\n\t *\n\t *\tspecularIntensity: <float>,\n\t *\tspecularIntensityMap: new THREE.Texture( <Image> ),\n\t *\tspecularColor: <Color>,\n\t *\tspecularColorMap: new THREE.Texture( <Image> )\n\t * }\n\t */\n\n\tclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': '',\n\t\t\t\t'PHYSICAL': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshPhysicalMaterial';\n\t\t\tthis.clearcoatMap = null;\n\t\t\tthis.clearcoatRoughness = 0.0;\n\t\t\tthis.clearcoatRoughnessMap = null;\n\t\t\tthis.clearcoatNormalScale = new Vector2(1, 1);\n\t\t\tthis.clearcoatNormalMap = null;\n\t\t\tthis.ior = 1.5;\n\t\t\tObject.defineProperty(this, 'reflectivity', {\n\t\t\t\tget: function () {\n\t\t\t\t\treturn clamp(2.5 * (this.ior - 1) / (this.ior + 1), 0, 1);\n\t\t\t\t},\n\t\t\t\tset: function (reflectivity) {\n\t\t\t\t\tthis.ior = (1 + 0.4 * reflectivity) / (1 - 0.4 * reflectivity);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.sheenColor = new Color(0x000000);\n\t\t\tthis.sheenColorMap = null;\n\t\t\tthis.sheenRoughness = 1.0;\n\t\t\tthis.sheenRoughnessMap = null;\n\t\t\tthis.transmissionMap = null;\n\t\t\tthis.thickness = 0;\n\t\t\tthis.thicknessMap = null;\n\t\t\tthis.attenuationDistance = 0.0;\n\t\t\tthis.attenuationColor = new Color(1, 1, 1);\n\t\t\tthis.specularIntensity = 1.0;\n\t\t\tthis.specularIntensityMap = null;\n\t\t\tthis.specularColor = new Color(1, 1, 1);\n\t\t\tthis.specularColorMap = null;\n\t\t\tthis._sheen = 0.0;\n\t\t\tthis._clearcoat = 0;\n\t\t\tthis._transmission = 0;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tget sheen() {\n\t\t\treturn this._sheen;\n\t\t}\n\n\t\tset sheen(value) {\n\t\t\tif (this._sheen > 0 !== value > 0) {\n\t\t\t\tthis.version++;\n\t\t\t}\n\n\t\t\tthis._sheen = value;\n\t\t}\n\n\t\tget clearcoat() {\n\t\t\treturn this._clearcoat;\n\t\t}\n\n\t\tset clearcoat(value) {\n\t\t\tif (this._clearcoat > 0 !== value > 0) {\n\t\t\t\tthis.version++;\n\t\t\t}\n\n\t\t\tthis._clearcoat = value;\n\t\t}\n\n\t\tget transmission() {\n\t\t\treturn this._transmission;\n\t\t}\n\n\t\tset transmission(value) {\n\t\t\tif (this._transmission > 0 !== value > 0) {\n\t\t\t\tthis.version++;\n\t\t\t}\n\n\t\t\tthis._transmission = value;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': '',\n\t\t\t\t'PHYSICAL': ''\n\t\t\t};\n\t\t\tthis.clearcoat = source.clearcoat;\n\t\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\t\tthis.clearcoatNormalScale.copy(source.clearcoatNormalScale);\n\t\t\tthis.ior = source.ior;\n\t\t\tthis.sheen = source.sheen;\n\t\t\tthis.sheenColor.copy(source.sheenColor);\n\t\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\t\t\tthis.transmission = source.transmission;\n\t\t\tthis.transmissionMap = source.transmissionMap;\n\t\t\tthis.thickness = source.thickness;\n\t\t\tthis.thicknessMap = source.thicknessMap;\n\t\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\t\tthis.attenuationColor.copy(source.attenuationColor);\n\t\t\tthis.specularIntensity = source.specularIntensity;\n\t\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\t\tthis.specularColor.copy(source.specularColor);\n\t\t\tthis.specularColorMap = source.specularColorMap;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\tspecular: <hex>,\n\t *\tshininess: <float>,\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\tspecularMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tcombine: THREE.MultiplyOperation,\n\t *\treflectivity: <float>,\n\t *\trefractionRatio: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshPhongMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshPhongMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.specular = new Color(0x111111);\n\t\t\tthis.shininess = 30;\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.specularMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.flatShading = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.specular.copy(source.specular);\n\t\t\tthis.shininess = source.shininess;\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.specularMap = source.specularMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\tgradientMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t * }\n\t */\n\n\tclass MeshToonMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'TOON': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshToonMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.map = null;\n\t\t\tthis.gradientMap = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.gradientMap = source.gradientMap;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\topacity: <float>,\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshNormalMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshNormalMaterial';\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.fog = false;\n\t\t\tthis.flatShading = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tspecularMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tcombine: THREE.Multiply,\n\t *\treflectivity: <float>,\n\t *\trefractionRatio: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t * }\n\t */\n\n\tclass MeshLambertMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshLambertMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.specularMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.specularMap = source.specularMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tmatcap: new THREE.Texture( <Image> ),\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshMatcapMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'MATCAP': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshMatcapMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.matcap = null;\n\t\t\tthis.map = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.flatShading = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.defines = {\n\t\t\t\t'MATCAP': ''\n\t\t\t};\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.matcap = source.matcap;\n\t\t\tthis.map = source.map;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tlinewidth: <float>,\n\t *\n\t *\tscale: <float>,\n\t *\tdashSize: <float>,\n\t *\tgapSize: <float>\n\t * }\n\t */\n\n\tclass LineDashedMaterial extends LineBasicMaterial {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineDashedMaterial';\n\t\t\tthis.scale = 1;\n\t\t\tthis.dashSize = 3;\n\t\t\tthis.gapSize = 1;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.scale = source.scale;\n\t\t\tthis.dashSize = source.dashSize;\n\t\t\tthis.gapSize = source.gapSize;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n\tvar Materials = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tShadowMaterial: ShadowMaterial,\n\t\tSpriteMaterial: SpriteMaterial,\n\t\tRawShaderMaterial: RawShaderMaterial,\n\t\tShaderMaterial: ShaderMaterial,\n\t\tPointsMaterial: PointsMaterial,\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\t\tMeshStandardMaterial: MeshStandardMaterial,\n\t\tMeshPhongMaterial: MeshPhongMaterial,\n\t\tMeshToonMaterial: MeshToonMaterial,\n\t\tMeshNormalMaterial: MeshNormalMaterial,\n\t\tMeshLambertMaterial: MeshLambertMaterial,\n\t\tMeshDepthMaterial: MeshDepthMaterial,\n\t\tMeshDistanceMaterial: MeshDistanceMaterial,\n\t\tMeshBasicMaterial: MeshBasicMaterial,\n\t\tMeshMatcapMaterial: MeshMatcapMaterial,\n\t\tLineDashedMaterial: LineDashedMaterial,\n\t\tLineBasicMaterial: LineBasicMaterial,\n\t\tMaterial: Material\n\t});\n\n\tconst AnimationUtils = {\n\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\tarraySlice: function (array, from, to) {\n\t\t\tif (AnimationUtils.isTypedArray(array)) {\n\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\t\treturn new array.constructor(array.subarray(from, to !== undefined ? to : array.length));\n\t\t\t}\n\n\t\t\treturn array.slice(from, to);\n\t\t},\n\t\t// converts an array to a specific type\n\t\tconvertArray: function (array, type, forceClone) {\n\t\t\tif (!array || // let 'undefined' and 'null' pass\n\t\t\t!forceClone && array.constructor === type) return array;\n\n\t\t\tif (typeof type.BYTES_PER_ELEMENT === 'number') {\n\t\t\t\treturn new type(array); // create typed array\n\t\t\t}\n\n\t\t\treturn Array.prototype.slice.call(array); // create Array\n\t\t},\n\t\tisTypedArray: function (object) {\n\t\t\treturn ArrayBuffer.isView(object) && !(object instanceof DataView);\n\t\t},\n\t\t// returns an array by which times and values can be sorted\n\t\tgetKeyframeOrder: function (times) {\n\t\t\tfunction compareTime(i, j) {\n\t\t\t\treturn times[i] - times[j];\n\t\t\t}\n\n\t\t\tconst n = times.length;\n\t\t\tconst result = new Array(n);\n\n\t\t\tfor (let i = 0; i !== n; ++i) result[i] = i;\n\n\t\t\tresult.sort(compareTime);\n\t\t\treturn result;\n\t\t},\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\tsortedArray: function (values, stride, order) {\n\t\t\tconst nValues = values.length;\n\t\t\tconst result = new values.constructor(nValues);\n\n\t\t\tfor (let i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\n\t\t\t\tconst srcOffset = order[i] * stride;\n\n\t\t\t\tfor (let j = 0; j !== stride; ++j) {\n\t\t\t\t\tresult[dstOffset++] = values[srcOffset + j];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\t\t// function for parsing AOS keyframe formats\n\t\tflattenJSON: function (jsonKeys, times, values, valuePropertyName) {\n\t\t\tlet i = 1,\n\t\t\t\t\tkey = jsonKeys[0];\n\n\t\t\twhile (key !== undefined && key[valuePropertyName] === undefined) {\n\t\t\t\tkey = jsonKeys[i++];\n\t\t\t}\n\n\t\t\tif (key === undefined) return; // no data\n\n\t\t\tlet value = key[valuePropertyName];\n\t\t\tif (value === undefined) return; // no data\n\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tdo {\n\t\t\t\t\tvalue = key[valuePropertyName];\n\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\ttimes.push(key.time);\n\t\t\t\t\t\tvalues.push.apply(values, value); // push all elements\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[i++];\n\t\t\t\t} while (key !== undefined);\n\t\t\t} else if (value.toArray !== undefined) {\n\t\t\t\t// ...assume THREE.Math-ish\n\t\t\t\tdo {\n\t\t\t\t\tvalue = key[valuePropertyName];\n\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\ttimes.push(key.time);\n\t\t\t\t\t\tvalue.toArray(values, values.length);\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[i++];\n\t\t\t\t} while (key !== undefined);\n\t\t\t} else {\n\t\t\t\t// otherwise push as-is\n\t\t\t\tdo {\n\t\t\t\t\tvalue = key[valuePropertyName];\n\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\ttimes.push(key.time);\n\t\t\t\t\t\tvalues.push(value);\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[i++];\n\t\t\t\t} while (key !== undefined);\n\t\t\t}\n\t\t},\n\t\tsubclip: function (sourceClip, name, startFrame, endFrame, fps = 30) {\n\t\t\tconst clip = sourceClip.clone();\n\t\t\tclip.name = name;\n\t\t\tconst tracks = [];\n\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\n\t\t\t\tconst track = clip.tracks[i];\n\t\t\t\tconst valueSize = track.getValueSize();\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tfor (let j = 0; j < track.times.length; ++j) {\n\t\t\t\t\tconst frame = track.times[j] * fps;\n\t\t\t\t\tif (frame < startFrame || frame >= endFrame) continue;\n\t\t\t\t\ttimes.push(track.times[j]);\n\n\t\t\t\t\tfor (let k = 0; k < valueSize; ++k) {\n\t\t\t\t\t\tvalues.push(track.values[j * valueSize + k]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (times.length === 0) continue;\n\t\t\t\ttrack.times = AnimationUtils.convertArray(times, track.times.constructor);\n\t\t\t\ttrack.values = AnimationUtils.convertArray(values, track.values.constructor);\n\t\t\t\ttracks.push(track);\n\t\t\t}\n\n\t\t\tclip.tracks = tracks; // find minimum .times value across all tracks in the trimmed clip\n\n\t\t\tlet minStartTime = Infinity;\n\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\n\t\t\t\tif (minStartTime > clip.tracks[i].times[0]) {\n\t\t\t\t\tminStartTime = clip.tracks[i].times[0];\n\t\t\t\t}\n\t\t\t} // shift all tracks such that clip begins at t=0\n\n\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\n\t\t\t\tclip.tracks[i].shift(-1 * minStartTime);\n\t\t\t}\n\n\t\t\tclip.resetDuration();\n\t\t\treturn clip;\n\t\t},\n\t\tmakeClipAdditive: function (targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30) {\n\t\t\tif (fps <= 0) fps = 30;\n\t\t\tconst numTracks = referenceClip.tracks.length;\n\t\t\tconst referenceTime = referenceFrame / fps; // Make each track's values relative to the values at the reference frame\n\n\t\t\tfor (let i = 0; i < numTracks; ++i) {\n\t\t\t\tconst referenceTrack = referenceClip.tracks[i];\n\t\t\t\tconst referenceTrackType = referenceTrack.ValueTypeName; // Skip this track if it's non-numeric\n\n\t\t\t\tif (referenceTrackType === 'bool' || referenceTrackType === 'string') continue; // Find the track in the target clip whose name and type matches the reference track\n\n\t\t\t\tconst targetTrack = targetClip.tracks.find(function (track) {\n\t\t\t\t\treturn track.name === referenceTrack.name && track.ValueTypeName === referenceTrackType;\n\t\t\t\t});\n\t\t\t\tif (targetTrack === undefined) continue;\n\t\t\t\tlet referenceOffset = 0;\n\t\t\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\t\t\tif (referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n\t\t\t\t\treferenceOffset = referenceValueSize / 3;\n\t\t\t\t}\n\n\t\t\t\tlet targetOffset = 0;\n\t\t\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\t\t\tif (targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n\t\t\t\t\ttargetOffset = targetValueSize / 3;\n\t\t\t\t}\n\n\t\t\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\t\t\tlet referenceValue; // Find the value to subtract out of the track\n\n\t\t\t\tif (referenceTime <= referenceTrack.times[0]) {\n\t\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(referenceTrack.values, startIndex, endIndex);\n\t\t\t\t} else if (referenceTime >= referenceTrack.times[lastIndex]) {\n\t\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(referenceTrack.values, startIndex, endIndex);\n\t\t\t\t} else {\n\t\t\t\t\t// Interpolate to the reference value\n\t\t\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\t\tinterpolant.evaluate(referenceTime);\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(interpolant.resultBuffer, startIndex, endIndex);\n\t\t\t\t} // Conjugate the quaternion\n\n\n\t\t\t\tif (referenceTrackType === 'quaternion') {\n\t\t\t\t\tconst referenceQuat = new Quaternion().fromArray(referenceValue).normalize().conjugate();\n\t\t\t\t\treferenceQuat.toArray(referenceValue);\n\t\t\t\t} // Subtract the reference value from all of the track values\n\n\n\t\t\t\tconst numTimes = targetTrack.times.length;\n\n\t\t\t\tfor (let j = 0; j < numTimes; ++j) {\n\t\t\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\t\t\tif (referenceTrackType === 'quaternion') {\n\t\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(targetTrack.values, valueStart, referenceValue, 0, targetTrack.values, valueStart);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2; // Subtract each value for all other numeric track types\n\n\t\t\t\t\t\tfor (let k = 0; k < valueEnd; ++k) {\n\t\t\t\t\t\t\ttargetTrack.values[valueStart + k] -= referenceValue[k];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\t\t\treturn targetClip;\n\t\t}\n\t};\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t */\n\tclass Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tthis.parameterPositions = parameterPositions;\n\t\t\tthis._cachedIndex = 0;\n\t\t\tthis.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\n\t\t\tthis.sampleValues = sampleValues;\n\t\t\tthis.valueSize = sampleSize;\n\t\t\tthis.settings = null;\n\t\t\tthis.DefaultSettings_ = {};\n\t\t}\n\n\t\tevaluate(t) {\n\t\t\tconst pp = this.parameterPositions;\n\t\t\tlet i1 = this._cachedIndex,\n\t\t\t\t\tt1 = pp[i1],\n\t\t\t\t\tt0 = pp[i1 - 1];\n\n\t\t\tvalidate_interval: {\n\t\t\t\tseek: {\n\t\t\t\t\tlet right;\n\n\t\t\t\t\tlinear_scan: {\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if (!(t < t1)) {\n\t\t\t\t\t\t\tfor (let giveUpAt = i1 + 2;;) {\n\t\t\t\t\t\t\t\tif (t1 === undefined) {\n\t\t\t\t\t\t\t\t\tif (t < t0) break forward_scan; // after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_(i1 - 1, t, t0);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (i1 === giveUpAt) break; // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[++i1];\n\n\t\t\t\t\t\t\t\tif (t < t1) {\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} // prepare binary search on the right side of the index\n\n\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\t\t\t\t\t\t} //- slower code:\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\n\n\t\t\t\t\t\tif (!(t >= t0)) {\n\t\t\t\t\t\t\t// looping?\n\t\t\t\t\t\t\tconst t1global = pp[1];\n\n\t\t\t\t\t\t\tif (t < t1global) {\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\n\t\t\t\t\t\t\t\tt0 = t1global;\n\t\t\t\t\t\t\t} // linear reverse scan\n\n\n\t\t\t\t\t\t\tfor (let giveUpAt = i1 - 2;;) {\n\t\t\t\t\t\t\t\tif (t0 === undefined) {\n\t\t\t\t\t\t\t\t\t// before start\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_(0, t, t1);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (i1 === giveUpAt) break; // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[--i1 - 1];\n\n\t\t\t\t\t\t\t\tif (t >= t0) {\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} // prepare binary search on the left side of the index\n\n\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\t\t\t\t\t\t} // the interval is valid\n\n\n\t\t\t\t\t\tbreak validate_interval;\n\t\t\t\t\t} // linear scan\n\t\t\t\t\t// binary search\n\n\n\t\t\t\t\twhile (i1 < right) {\n\t\t\t\t\t\tconst mid = i1 + right >>> 1;\n\n\t\t\t\t\t\tif (t < pp[mid]) {\n\t\t\t\t\t\t\tright = mid;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ti1 = mid + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[i1];\n\t\t\t\t\tt0 = pp[i1 - 1]; // check boundary cases, again\n\n\t\t\t\t\tif (t0 === undefined) {\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.beforeStart_(0, t, t1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (t1 === undefined) {\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.afterEnd_(i1 - 1, t0, t);\n\t\t\t\t\t}\n\t\t\t\t} // seek\n\n\n\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\tthis.intervalChanged_(i1, t0, t1);\n\t\t\t} // validate_interval\n\n\n\t\t\treturn this.interpolate_(i1, t0, t, t1);\n\t\t}\n\n\t\tgetSettings_() {\n\t\t\treturn this.settings || this.DefaultSettings_;\n\t\t}\n\n\t\tcopySampleValue_(index) {\n\t\t\t// copies a sample value to the result buffer\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset = index * stride;\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tresult[i] = values[offset + i];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} // Template methods for derived classes:\n\n\n\t\tinterpolate_() {\n\t\t\tthrow new Error('call to abstract method'); // implementations shall return this.resultBuffer\n\t\t}\n\n\t\tintervalChanged_() {// empty\n\t\t}\n\n\t} // ALIAS DEFINITIONS\n\n\n\tInterpolant.prototype.beforeStart_ = Interpolant.prototype.copySampleValue_;\n\tInterpolant.prototype.afterEnd_ = Interpolant.prototype.copySampleValue_;\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t */\n\n\tclass CubicInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t\tthis._weightPrev = -0;\n\t\t\tthis._offsetPrev = -0;\n\t\t\tthis._weightNext = -0;\n\t\t\tthis._offsetNext = -0;\n\t\t\tthis.DefaultSettings_ = {\n\t\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t\t};\n\t\t}\n\n\t\tintervalChanged_(i1, t0, t1) {\n\t\t\tconst pp = this.parameterPositions;\n\t\t\tlet iPrev = i1 - 2,\n\t\t\t\t\tiNext = i1 + 1,\n\t\t\t\t\ttPrev = pp[iPrev],\n\t\t\t\t\ttNext = pp[iNext];\n\n\t\t\tif (tPrev === undefined) {\n\t\t\t\tswitch (this.getSettings_().endingStart) {\n\t\t\t\t\tcase ZeroSlopeEnding:\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[iPrev] - pp[iPrev + 1];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// ZeroCurvatureEnding\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tNext === undefined) {\n\t\t\t\tswitch (this.getSettings_().endingEnd) {\n\t\t\t\t\tcase ZeroSlopeEnding:\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[1] - pp[0];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// ZeroCurvatureEnding\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst halfDt = (t1 - t0) * 0.5,\n\t\t\t\t\t\tstride = this.valueSize;\n\t\t\tthis._weightPrev = halfDt / (t0 - tPrev);\n\t\t\tthis._weightNext = halfDt / (tNext - t1);\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\t\t}\n\n\t\tinterpolate_(i1, t0, t, t1) {\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\to1 = i1 * stride,\n\t\t\t\t\t\to0 = o1 - stride,\n\t\t\t\t\t\toP = this._offsetPrev,\n\t\t\t\t\t\toN = this._offsetNext,\n\t\t\t\t\t\twP = this._weightPrev,\n\t\t\t\t\t\twN = this._weightNext,\n\t\t\t\t\t\tp = (t - t0) / (t1 - t0),\n\t\t\t\t\t\tpp = p * p,\n\t\t\t\t\t\tppp = pp * p; // evaluate polynomials\n\n\t\t\tconst sP = -wP * ppp + 2 * wP * pp - wP * p;\n\t\t\tconst s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n\t\t\tconst s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n\t\t\tconst sN = wN * ppp - wN * pp; // combine data linearly\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tresult[i] = sP * values[oP + i] + s0 * values[o0 + i] + s1 * values[o1 + i] + sN * values[oN + i];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t}\n\n\tclass LinearInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t}\n\n\t\tinterpolate_(i1, t0, t, t1) {\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset1 = i1 * stride,\n\t\t\t\t\t\toffset0 = offset1 - stride,\n\t\t\t\t\t\tweight1 = (t - t0) / (t1 - t0),\n\t\t\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tresult[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t */\n\n\tclass DiscreteInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t}\n\n\t\tinterpolate_(i1\n\t\t/*, t0, t, t1 */\n\t\t) {\n\t\t\treturn this.copySampleValue_(i1 - 1);\n\t\t}\n\n\t}\n\n\tclass KeyframeTrack {\n\t\tconstructor(name, times, values, interpolation) {\n\t\t\tif (name === undefined) throw new Error('THREE.KeyframeTrack: track name is undefined');\n\t\t\tif (times === undefined || times.length === 0) throw new Error('THREE.KeyframeTrack: no keyframes in track named ' + name);\n\t\t\tthis.name = name;\n\t\t\tthis.times = AnimationUtils.convertArray(times, this.TimeBufferType);\n\t\t\tthis.values = AnimationUtils.convertArray(values, this.ValueBufferType);\n\t\t\tthis.setInterpolation(interpolation || this.DefaultInterpolation);\n\t\t} // Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\n\n\t\tstatic toJSON(track) {\n\t\t\tconst trackType = track.constructor;\n\t\t\tlet json; // derived classes can define a static toJSON method\n\n\t\t\tif (trackType.toJSON !== this.toJSON) {\n\t\t\t\tjson = trackType.toJSON(track);\n\t\t\t} else {\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': AnimationUtils.convertArray(track.times, Array),\n\t\t\t\t\t'values': AnimationUtils.convertArray(track.values, Array)\n\t\t\t\t};\n\t\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\t\tif (interpolation !== track.DefaultInterpolation) {\n\t\t\t\t\tjson.interpolation = interpolation;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\t\t}\n\n\t\tInterpolantFactoryMethodDiscrete(result) {\n\t\t\treturn new DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t\tInterpolantFactoryMethodLinear(result) {\n\t\t\treturn new LinearInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t\tInterpolantFactoryMethodSmooth(result) {\n\t\t\treturn new CubicInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t\tsetInterpolation(interpolation) {\n\t\t\tlet factoryMethod;\n\n\t\t\tswitch (interpolation) {\n\t\t\t\tcase InterpolateDiscrete:\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateLinear:\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateSmooth:\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (factoryMethod === undefined) {\n\t\t\t\tconst message = 'unsupported interpolation for ' + this.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\t\tif (this.createInterpolant === undefined) {\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif (interpolation !== this.DefaultInterpolation) {\n\t\t\t\t\t\tthis.setInterpolation(this.DefaultInterpolation);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(message); // fatal, in this case\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconsole.warn('THREE.KeyframeTrack:', message);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetInterpolation() {\n\t\t\tswitch (this.createInterpolant) {\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\t\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\t\t\t\t\treturn InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\t\t\t\t\treturn InterpolateSmooth;\n\t\t\t}\n\t\t}\n\n\t\tgetValueSize() {\n\t\t\treturn this.values.length / this.times.length;\n\t\t} // move all keyframes either forwards or backwards in time\n\n\n\t\tshift(timeOffset) {\n\t\t\tif (timeOffset !== 0.0) {\n\t\t\t\tconst times = this.times;\n\n\t\t\t\tfor (let i = 0, n = times.length; i !== n; ++i) {\n\t\t\t\t\ttimes[i] += timeOffset;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\n\n\t\tscale(timeScale) {\n\t\t\tif (timeScale !== 1.0) {\n\t\t\t\tconst times = this.times;\n\n\t\t\t\tfor (let i = 0, n = times.length; i !== n; ++i) {\n\t\t\t\t\ttimes[i] *= timeScale;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\n\n\t\ttrim(startTime, endTime) {\n\t\t\tconst times = this.times,\n\t\t\t\t\t\tnKeys = times.length;\n\t\t\tlet from = 0,\n\t\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile (from !== nKeys && times[from] < startTime) {\n\t\t\t\t++from;\n\t\t\t}\n\n\t\t\twhile (to !== -1 && times[to] > endTime) {\n\t\t\t\t--to;\n\t\t\t}\n\n\t\t\t++to; // inclusive -> exclusive bound\n\n\t\t\tif (from !== 0 || to !== nKeys) {\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif (from >= to) {\n\t\t\t\t\tto = Math.max(to, 1);\n\t\t\t\t\tfrom = to - 1;\n\t\t\t\t}\n\n\t\t\t\tconst stride = this.getValueSize();\n\t\t\t\tthis.times = AnimationUtils.arraySlice(times, from, to);\n\t\t\t\tthis.values = AnimationUtils.arraySlice(this.values, from * stride, to * stride);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\n\n\t\tvalidate() {\n\t\t\tlet valid = true;\n\t\t\tconst valueSize = this.getValueSize();\n\n\t\t\tif (valueSize - Math.floor(valueSize) !== 0) {\n\t\t\t\tconsole.error('THREE.KeyframeTrack: Invalid value size in track.', this);\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tconst times = this.times,\n\t\t\t\t\t\tvalues = this.values,\n\t\t\t\t\t\tnKeys = times.length;\n\n\t\t\tif (nKeys === 0) {\n\t\t\t\tconsole.error('THREE.KeyframeTrack: Track is empty.', this);\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tlet prevTime = null;\n\n\t\t\tfor (let i = 0; i !== nKeys; i++) {\n\t\t\t\tconst currTime = times[i];\n\n\t\t\t\tif (typeof currTime === 'number' && isNaN(currTime)) {\n\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime);\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (prevTime !== null && prevTime > currTime) {\n\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime);\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\t\t\t}\n\n\t\t\tif (values !== undefined) {\n\t\t\t\tif (AnimationUtils.isTypedArray(values)) {\n\t\t\t\t\tfor (let i = 0, n = values.length; i !== n; ++i) {\n\t\t\t\t\t\tconst value = values[i];\n\n\t\t\t\t\t\tif (isNaN(value)) {\n\t\t\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Value is not a valid number.', this, i, value);\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn valid;\n\t\t} // removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\n\n\t\toptimize() {\n\t\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\t\tconst times = AnimationUtils.arraySlice(this.times),\n\t\t\t\t\t\tvalues = AnimationUtils.arraySlice(this.values),\n\t\t\t\t\t\tstride = this.getValueSize(),\n\t\t\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\t\t\t\t\t\tlastIndex = times.length - 1;\n\t\t\tlet writeIndex = 1;\n\n\t\t\tfor (let i = 1; i < lastIndex; ++i) {\n\t\t\t\tlet keep = false;\n\t\t\t\tconst time = times[i];\n\t\t\t\tconst timeNext = times[i + 1]; // remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif (time !== timeNext && (i !== 1 || time !== times[0])) {\n\t\t\t\t\tif (!smoothInterpolation) {\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\t\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\t\tfor (let j = 0; j !== stride; ++j) {\n\t\t\t\t\t\t\tconst value = values[offset + j];\n\n\t\t\t\t\t\t\tif (value !== values[offsetP + j] || value !== values[offsetN + j]) {\n\t\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t}\n\t\t\t\t} // in-place compaction\n\n\n\t\t\t\tif (keep) {\n\t\t\t\t\tif (i !== writeIndex) {\n\t\t\t\t\t\ttimes[writeIndex] = times[i];\n\t\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor (let j = 0; j !== stride; ++j) {\n\t\t\t\t\t\t\tvalues[writeOffset + j] = values[readOffset + j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t++writeIndex;\n\t\t\t\t}\n\t\t\t} // flush last keyframe (compaction looks ahead)\n\n\n\t\t\tif (lastIndex > 0) {\n\t\t\t\ttimes[writeIndex] = times[lastIndex];\n\n\t\t\t\tfor (let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++j) {\n\t\t\t\t\tvalues[writeOffset + j] = values[readOffset + j];\n\t\t\t\t}\n\n\t\t\t\t++writeIndex;\n\t\t\t}\n\n\t\t\tif (writeIndex !== times.length) {\n\t\t\t\tthis.times = AnimationUtils.arraySlice(times, 0, writeIndex);\n\t\t\t\tthis.values = AnimationUtils.arraySlice(values, 0, writeIndex * stride);\n\t\t\t} else {\n\t\t\t\tthis.times = times;\n\t\t\t\tthis.values = values;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\tconst times = AnimationUtils.arraySlice(this.times, 0);\n\t\t\tconst values = AnimationUtils.arraySlice(this.values, 0);\n\t\t\tconst TypedKeyframeTrack = this.constructor;\n\t\t\tconst track = new TypedKeyframeTrack(this.name, times, values); // Interpolant argument to constructor is not saved, so copy the factory method directly.\n\n\t\t\ttrack.createInterpolant = this.createInterpolant;\n\t\t\treturn track;\n\t\t}\n\n\t}\n\n\tKeyframeTrack.prototype.TimeBufferType = Float32Array;\n\tKeyframeTrack.prototype.ValueBufferType = Float32Array;\n\tKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n\t/**\n\t * A Track of Boolean keyframe values.\n\t */\n\n\tclass BooleanKeyframeTrack extends KeyframeTrack {}\n\n\tBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\n\tBooleanKeyframeTrack.prototype.ValueBufferType = Array;\n\tBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\n\tBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\n\tBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined; // Note: Actually this track could have a optimized / compressed\n\n\t/**\n\t * A Track of keyframe values that represent color.\n\t */\n\n\tclass ColorKeyframeTrack extends KeyframeTrack {}\n\n\tColorKeyframeTrack.prototype.ValueTypeName = 'color'; // ValueBufferType is inherited\n\n\t/**\n\t * A Track of numeric keyframe values.\n\t */\n\n\tclass NumberKeyframeTrack extends KeyframeTrack {}\n\n\tNumberKeyframeTrack.prototype.ValueTypeName = 'number'; // ValueBufferType is inherited\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t */\n\n\tclass QuaternionLinearInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t}\n\n\t\tinterpolate_(i1, t0, t, t1) {\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\talpha = (t - t0) / (t1 - t0);\n\t\t\tlet offset = i1 * stride;\n\n\t\t\tfor (let end = offset + stride; offset !== end; offset += 4) {\n\t\t\t\tQuaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t}\n\n\t/**\n\t * A Track of quaternion keyframe values.\n\t */\n\n\tclass QuaternionKeyframeTrack extends KeyframeTrack {\n\t\tInterpolantFactoryMethodLinear(result) {\n\t\t\treturn new QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t}\n\n\tQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion'; // ValueBufferType is inherited\n\n\tQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\tQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n\t/**\n\t * A Track that interpolates Strings\n\t */\n\n\tclass StringKeyframeTrack extends KeyframeTrack {}\n\n\tStringKeyframeTrack.prototype.ValueTypeName = 'string';\n\tStringKeyframeTrack.prototype.ValueBufferType = Array;\n\tStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\n\tStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\n\tStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n\t/**\n\t * A Track of vectored keyframe values.\n\t */\n\n\tclass VectorKeyframeTrack extends KeyframeTrack {}\n\n\tVectorKeyframeTrack.prototype.ValueTypeName = 'vector'; // ValueBufferType is inherited\n\n\tclass AnimationClip {\n\t\tconstructor(name, duration = -1, tracks, blendMode = NormalAnimationBlendMode) {\n\t\t\tthis.name = name;\n\t\t\tthis.tracks = tracks;\n\t\t\tthis.duration = duration;\n\t\t\tthis.blendMode = blendMode;\n\t\t\tthis.uuid = generateUUID(); // this means it should figure out its duration by scanning the tracks\n\n\t\t\tif (this.duration < 0) {\n\t\t\t\tthis.resetDuration();\n\t\t\t}\n\t\t}\n\n\t\tstatic parse(json) {\n\t\t\tconst tracks = [],\n\t\t\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\t\t\tframeTime = 1.0 / (json.fps || 1.0);\n\n\t\t\tfor (let i = 0, n = jsonTracks.length; i !== n; ++i) {\n\t\t\t\ttracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));\n\t\t\t}\n\n\t\t\tconst clip = new this(json.name, json.duration, tracks, json.blendMode);\n\t\t\tclip.uuid = json.uuid;\n\t\t\treturn clip;\n\t\t}\n\n\t\tstatic toJSON(clip) {\n\t\t\tconst tracks = [],\n\t\t\t\t\t\tclipTracks = clip.tracks;\n\t\t\tconst json = {\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks,\n\t\t\t\t'uuid': clip.uuid,\n\t\t\t\t'blendMode': clip.blendMode\n\t\t\t};\n\n\t\t\tfor (let i = 0, n = clipTracks.length; i !== n; ++i) {\n\t\t\t\ttracks.push(KeyframeTrack.toJSON(clipTracks[i]));\n\t\t\t}\n\n\t\t\treturn json;\n\t\t}\n\n\t\tstatic CreateFromMorphTargetSequence(name, morphTargetSequence, fps, noLoop) {\n\t\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\t\tconst tracks = [];\n\n\t\t\tfor (let i = 0; i < numMorphTargets; i++) {\n\t\t\t\tlet times = [];\n\t\t\t\tlet values = [];\n\t\t\t\ttimes.push((i + numMorphTargets - 1) % numMorphTargets, i, (i + 1) % numMorphTargets);\n\t\t\t\tvalues.push(0, 1, 0);\n\t\t\t\tconst order = AnimationUtils.getKeyframeOrder(times);\n\t\t\t\ttimes = AnimationUtils.sortedArray(times, 1, order);\n\t\t\t\tvalues = AnimationUtils.sortedArray(values, 1, order); // if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\n\t\t\t\tif (!noLoop && times[0] === 0) {\n\t\t\t\t\ttimes.push(numMorphTargets);\n\t\t\t\t\tvalues.push(values[0]);\n\t\t\t\t}\n\n\t\t\t\ttracks.push(new NumberKeyframeTrack('.morphTargetInfluences[' + morphTargetSequence[i].name + ']', times, values).scale(1.0 / fps));\n\t\t\t}\n\n\t\t\treturn new this(name, -1, tracks);\n\t\t}\n\n\t\tstatic findByName(objectOrClipArray, name) {\n\t\t\tlet clipArray = objectOrClipArray;\n\n\t\t\tif (!Array.isArray(objectOrClipArray)) {\n\t\t\t\tconst o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < clipArray.length; i++) {\n\t\t\t\tif (clipArray[i].name === name) {\n\t\t\t\t\treturn clipArray[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\tstatic CreateClipsFromMorphTargetSequences(morphTargets, fps, noLoop) {\n\t\t\tconst animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\n\t\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/; // sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\n\t\t\tfor (let i = 0, il = morphTargets.length; i < il; i++) {\n\t\t\t\tconst morphTarget = morphTargets[i];\n\t\t\t\tconst parts = morphTarget.name.match(pattern);\n\n\t\t\t\tif (parts && parts.length > 1) {\n\t\t\t\t\tconst name = parts[1];\n\t\t\t\t\tlet animationMorphTargets = animationToMorphTargets[name];\n\n\t\t\t\t\tif (!animationMorphTargets) {\n\t\t\t\t\t\tanimationToMorphTargets[name] = animationMorphTargets = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push(morphTarget);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst clips = [];\n\n\t\t\tfor (const name in animationToMorphTargets) {\n\t\t\t\tclips.push(this.CreateFromMorphTargetSequence(name, animationToMorphTargets[name], fps, noLoop));\n\t\t\t}\n\n\t\t\treturn clips;\n\t\t} // parse the animation.hierarchy format\n\n\n\t\tstatic parseAnimation(animation, bones) {\n\t\t\tif (!animation) {\n\t\t\t\tconsole.error('THREE.AnimationClip: No animation in JSONLoader data.');\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst addNonemptyTrack = function (trackType, trackName, animationKeys, propertyName, destTracks) {\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif (animationKeys.length !== 0) {\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\t\t\t\t\tAnimationUtils.flattenJSON(animationKeys, times, values, propertyName); // empty keys are filtered out, so check again\n\n\t\t\t\t\tif (times.length !== 0) {\n\t\t\t\t\t\tdestTracks.push(new trackType(trackName, times, values));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst tracks = [];\n\t\t\tconst clipName = animation.name || 'default';\n\t\t\tconst fps = animation.fps || 30;\n\t\t\tconst blendMode = animation.blendMode; // automatic length determination in AnimationClip.\n\n\t\t\tlet duration = animation.length || -1;\n\t\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor (let h = 0; h < hierarchyTracks.length; h++) {\n\t\t\t\tconst animationKeys = hierarchyTracks[h].keys; // skip empty tracks\n\n\t\t\t\tif (!animationKeys || animationKeys.length === 0) continue; // process morph targets\n\n\t\t\t\tif (animationKeys[0].morphTargets) {\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tconst morphTargetNames = {};\n\t\t\t\t\tlet k;\n\n\t\t\t\t\tfor (k = 0; k < animationKeys.length; k++) {\n\t\t\t\t\t\tif (animationKeys[k].morphTargets) {\n\t\t\t\t\t\t\tfor (let m = 0; m < animationKeys[k].morphTargets.length; m++) {\n\t\t\t\t\t\t\t\tmorphTargetNames[animationKeys[k].morphTargets[m]] = -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} // create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\n\n\t\t\t\t\tfor (const morphTargetName in morphTargetNames) {\n\t\t\t\t\t\tconst times = [];\n\t\t\t\t\t\tconst values = [];\n\n\t\t\t\t\t\tfor (let m = 0; m !== animationKeys[k].morphTargets.length; ++m) {\n\t\t\t\t\t\t\tconst animationKey = animationKeys[k];\n\t\t\t\t\t\t\ttimes.push(animationKey.time);\n\t\t\t\t\t\t\tvalues.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push(new NumberKeyframeTrack('.morphTargetInfluence[' + morphTargetName + ']', times, values));\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * (fps || 1.0);\n\t\t\t\t} else {\n\t\t\t\t\t// ...assume skeletal animation\n\t\t\t\t\tconst boneName = '.bones[' + bones[h].name + ']';\n\t\t\t\t\taddNonemptyTrack(VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks);\n\t\t\t\t\taddNonemptyTrack(QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks);\n\t\t\t\t\taddNonemptyTrack(VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tracks.length === 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst clip = new this(clipName, duration, tracks, blendMode);\n\t\t\treturn clip;\n\t\t}\n\n\t\tresetDuration() {\n\t\t\tconst tracks = this.tracks;\n\t\t\tlet duration = 0;\n\n\t\t\tfor (let i = 0, n = tracks.length; i !== n; ++i) {\n\t\t\t\tconst track = this.tracks[i];\n\t\t\t\tduration = Math.max(duration, track.times[track.times.length - 1]);\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\t\t\treturn this;\n\t\t}\n\n\t\ttrim() {\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\tthis.tracks[i].trim(0, this.duration);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tvalidate() {\n\t\t\tlet valid = true;\n\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\tvalid = valid && this.tracks[i].validate();\n\t\t\t}\n\n\t\t\treturn valid;\n\t\t}\n\n\t\toptimize() {\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\tthis.tracks[i].optimize();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\tconst tracks = [];\n\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\ttracks.push(this.tracks[i].clone());\n\t\t\t}\n\n\t\t\treturn new this.constructor(this.name, this.duration, tracks, this.blendMode);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn this.constructor.toJSON(this);\n\t\t}\n\n\t}\n\n\tfunction getTrackTypeForValueTypeName(typeName) {\n\t\tswitch (typeName.toLowerCase()) {\n\t\t\tcase 'scalar':\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase 'vector':\n\t\t\tcase 'vector2':\n\t\t\tcase 'vector3':\n\t\t\tcase 'vector4':\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase 'color':\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase 'quaternion':\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase 'bool':\n\t\t\tcase 'boolean':\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase 'string':\n\t\t\t\treturn StringKeyframeTrack;\n\t\t}\n\n\t\tthrow new Error('THREE.KeyframeTrack: Unsupported typeName: ' + typeName);\n\t}\n\n\tfunction parseKeyframeTrack(json) {\n\t\tif (json.type === undefined) {\n\t\t\tthrow new Error('THREE.KeyframeTrack: track type undefined, can not parse');\n\t\t}\n\n\t\tconst trackType = getTrackTypeForValueTypeName(json.type);\n\n\t\tif (json.times === undefined) {\n\t\t\tconst times = [],\n\t\t\t\t\t\tvalues = [];\n\t\t\tAnimationUtils.flattenJSON(json.keys, times, values, 'value');\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\t\t} // derived classes can define a static parse method\n\n\n\t\tif (trackType.parse !== undefined) {\n\t\t\treturn trackType.parse(json);\n\t\t} else {\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType(json.name, json.times, json.values, json.interpolation);\n\t\t}\n\t}\n\n\tconst Cache = {\n\t\tenabled: false,\n\t\tfiles: {},\n\t\tadd: function (key, file) {\n\t\t\tif (this.enabled === false) return; // console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[key] = file;\n\t\t},\n\t\tget: function (key) {\n\t\t\tif (this.enabled === false) return; // console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[key];\n\t\t},\n\t\tremove: function (key) {\n\t\t\tdelete this.files[key];\n\t\t},\n\t\tclear: function () {\n\t\t\tthis.files = {};\n\t\t}\n\t};\n\n\tclass LoadingManager {\n\t\tconstructor(onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tlet isLoading = false;\n\t\t\tlet itemsLoaded = 0;\n\t\t\tlet itemsTotal = 0;\n\t\t\tlet urlModifier = undefined;\n\t\t\tconst handlers = []; // Refer to #5689 for the reason why we don't set .onStart\n\t\t\t// in the constructor\n\n\t\t\tthis.onStart = undefined;\n\t\t\tthis.onLoad = onLoad;\n\t\t\tthis.onProgress = onProgress;\n\t\t\tthis.onError = onError;\n\n\t\t\tthis.itemStart = function (url) {\n\t\t\t\titemsTotal++;\n\n\t\t\t\tif (isLoading === false) {\n\t\t\t\t\tif (scope.onStart !== undefined) {\n\t\t\t\t\t\tscope.onStart(url, itemsLoaded, itemsTotal);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tisLoading = true;\n\t\t\t};\n\n\t\t\tthis.itemEnd = function (url) {\n\t\t\t\titemsLoaded++;\n\n\t\t\t\tif (scope.onProgress !== undefined) {\n\t\t\t\t\tscope.onProgress(url, itemsLoaded, itemsTotal);\n\t\t\t\t}\n\n\t\t\t\tif (itemsLoaded === itemsTotal) {\n\t\t\t\t\tisLoading = false;\n\n\t\t\t\t\tif (scope.onLoad !== undefined) {\n\t\t\t\t\t\tscope.onLoad();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.itemError = function (url) {\n\t\t\t\tif (scope.onError !== undefined) {\n\t\t\t\t\tscope.onError(url);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.resolveURL = function (url) {\n\t\t\t\tif (urlModifier) {\n\t\t\t\t\treturn urlModifier(url);\n\t\t\t\t}\n\n\t\t\t\treturn url;\n\t\t\t};\n\n\t\t\tthis.setURLModifier = function (transform) {\n\t\t\t\turlModifier = transform;\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\tthis.addHandler = function (regex, loader) {\n\t\t\t\thandlers.push(regex, loader);\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\tthis.removeHandler = function (regex) {\n\t\t\t\tconst index = handlers.indexOf(regex);\n\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\thandlers.splice(index, 2);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\tthis.getHandler = function (file) {\n\t\t\t\tfor (let i = 0, l = handlers.length; i < l; i += 2) {\n\t\t\t\t\tconst regex = handlers[i];\n\t\t\t\t\tconst loader = handlers[i + 1];\n\t\t\t\t\tif (regex.global) regex.lastIndex = 0; // see #17920\n\n\t\t\t\t\tif (regex.test(file)) {\n\t\t\t\t\t\treturn loader;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t};\n\t\t}\n\n\t}\n\n\tconst DefaultLoadingManager = new LoadingManager();\n\n\tclass Loader {\n\t\tconstructor(manager) {\n\t\t\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\t\t\tthis.crossOrigin = 'anonymous';\n\t\t\tthis.withCredentials = false;\n\t\t\tthis.path = '';\n\t\t\tthis.resourcePath = '';\n\t\t\tthis.requestHeader = {};\n\t\t}\n\n\t\tload() {}\n\n\t\tloadAsync(url, onProgress) {\n\t\t\tconst scope = this;\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tscope.load(url, resolve, onProgress, reject);\n\t\t\t});\n\t\t}\n\n\t\tparse() {}\n\n\t\tsetCrossOrigin(crossOrigin) {\n\t\t\tthis.crossOrigin = crossOrigin;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetWithCredentials(value) {\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetPath(path) {\n\t\t\tthis.path = path;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetResourcePath(resourcePath) {\n\t\t\tthis.resourcePath = resourcePath;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetRequestHeader(requestHeader) {\n\t\t\tthis.requestHeader = requestHeader;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tconst loading = {};\n\n\tclass FileLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tif (url === undefined) url = '';\n\t\t\tif (this.path !== undefined) url = this.path + url;\n\t\t\turl = this.manager.resolveURL(url);\n\t\t\tconst cached = Cache.get(url);\n\n\t\t\tif (cached !== undefined) {\n\t\t\t\tthis.manager.itemStart(url);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (onLoad) onLoad(cached);\n\t\t\t\t\tthis.manager.itemEnd(url);\n\t\t\t\t}, 0);\n\t\t\t\treturn cached;\n\t\t\t} // Check if request is duplicate\n\n\n\t\t\tif (loading[url] !== undefined) {\n\t\t\t\tloading[url].push({\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t} // Initialise array for duplicate requests\n\n\n\t\t\tloading[url] = [];\n\t\t\tloading[url].push({\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\t\t\t}); // create request\n\n\t\t\tconst req = new Request(url, {\n\t\t\t\theaders: new Headers(this.requestHeader),\n\t\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin' // An abort controller could be added within a future PR\n\n\t\t\t}); // record states ( avoid data race )\n\n\t\t\tconst mimeType = this.mimeType;\n\t\t\tconst responseType = this.responseType; // start the fetch\n\n\t\t\tfetch(req).then(response => {\n\t\t\t\tif (response.status === 200 || response.status === 0) {\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\t\t\t\t\tif (response.status === 0) {\n\t\t\t\t\t\tconsole.warn('THREE.FileLoader: HTTP Status 0 received.');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof ReadableStream === 'undefined' || response.body.getReader === undefined) {\n\t\t\t\t\t\treturn response;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[url];\n\t\t\t\t\tconst reader = response.body.getReader();\n\t\t\t\t\tconst contentLength = response.headers.get('Content-Length');\n\t\t\t\t\tconst total = contentLength ? parseInt(contentLength) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0; // periodically read data into the new stream tracking while download progress\n\n\t\t\t\t\tconst stream = new ReadableStream({\n\t\t\t\t\t\tstart(controller) {\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\t\t\t\t\t\t\t\treader.read().then(({\n\t\t\t\t\t\t\t\t\tdone,\n\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t}) => {\n\t\t\t\t\t\t\t\t\tif (done) {\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent('progress', {\n\t\t\t\t\t\t\t\t\t\t\tlengthComputable,\n\t\t\t\t\t\t\t\t\t\t\tloaded,\n\t\t\t\t\t\t\t\t\t\t\ttotal\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\t\t\t\t\t\t\tif (callback.onProgress) callback.onProgress(event);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue(value);\n\t\t\t\t\t\t\t\t\t\treadData();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\t\t\t\t\treturn new Response(stream);\n\t\t\t\t} else {\n\t\t\t\t\tthrow Error(`fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`);\n\t\t\t\t}\n\t\t\t}).then(response => {\n\t\t\t\tswitch (responseType) {\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\t\t\t\t\t\treturn response.text().then(text => {\n\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\treturn parser.parseFromString(text, mimeType);\n\t\t\t\t\t\t});\n\n\t\t\t\t\tcase 'json':\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (mimeType === undefined) {\n\t\t\t\t\t\t\treturn response.text();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec(mimeType);\n\t\t\t\t\t\t\tconst label = exec && exec[1] ? exec[1].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder(label);\n\t\t\t\t\t\t\treturn response.arrayBuffer().then(ab => decoder.decode(ab));\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}).then(data => {\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add(url, data);\n\t\t\t\tconst callbacks = loading[url];\n\t\t\t\tdelete loading[url];\n\n\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\tif (callback.onLoad) callback.onLoad(data);\n\t\t\t\t}\n\t\t\t}).catch(err => {\n\t\t\t\t// Abort errors and other errors are handled the same\n\t\t\t\tconst callbacks = loading[url];\n\n\t\t\t\tif (callbacks === undefined) {\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError(url);\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\n\t\t\t\tdelete loading[url];\n\n\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\tif (callback.onError) callback.onError(err);\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError(url);\n\t\t\t}).finally(() => {\n\t\t\t\tthis.manager.itemEnd(url);\n\t\t\t});\n\t\t\tthis.manager.itemStart(url);\n\t\t}\n\n\t\tsetResponseType(value) {\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetMimeType(value) {\n\t\t\tthis.mimeType = value;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass AnimationLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\ttry {\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tparse(json) {\n\t\t\tconst animations = [];\n\n\t\t\tfor (let i = 0; i < json.length; i++) {\n\t\t\t\tconst clip = AnimationClip.parse(json[i]);\n\t\t\t\tanimations.push(clip);\n\t\t\t}\n\n\t\t\treturn animations;\n\t\t}\n\n\t}\n\n\t/**\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tclass CompressedTextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst images = [];\n\t\t\tconst texture = new CompressedTexture();\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tlet loaded = 0;\n\n\t\t\tfunction loadTexture(i) {\n\t\t\t\tloader.load(url[i], function (buffer) {\n\t\t\t\t\tconst texDatas = scope.parse(buffer, true);\n\t\t\t\t\timages[i] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif (loaded === 6) {\n\t\t\t\t\t\tif (texDatas.mipmapCount === 1) texture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.image = images;\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t\t\t}\n\t\t\t\t}, onProgress, onError);\n\t\t\t}\n\n\t\t\tif (Array.isArray(url)) {\n\t\t\t\tfor (let i = 0, il = url.length; i < il; ++i) {\n\t\t\t\t\tloadTexture(i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\t\t\t\tloader.load(url, function (buffer) {\n\t\t\t\t\tconst texDatas = scope.parse(buffer, true);\n\n\t\t\t\t\tif (texDatas.isCubemap) {\n\t\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor (let f = 0; f < faces; f++) {\n\t\t\t\t\t\t\timages[f] = {\n\t\t\t\t\t\t\t\tmipmaps: []\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tfor (let i = 0; i < texDatas.mipmapCount; i++) {\n\t\t\t\t\t\t\t\timages[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + i]);\n\t\t\t\t\t\t\t\timages[f].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[f].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[f].height = texDatas.height;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttexture.image = images;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (texDatas.mipmapCount === 1) {\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t\t}, onProgress, onError);\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\tclass ImageLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tif (this.path !== undefined) url = this.path + url;\n\t\t\turl = this.manager.resolveURL(url);\n\t\t\tconst scope = this;\n\t\t\tconst cached = Cache.get(url);\n\n\t\t\tif (cached !== undefined) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (onLoad) onLoad(cached);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, 0);\n\t\t\t\treturn cached;\n\t\t\t}\n\n\t\t\tconst image = createElementNS('img');\n\n\t\t\tfunction onImageLoad() {\n\t\t\t\tremoveEventListeners();\n\t\t\t\tCache.add(url, this);\n\t\t\t\tif (onLoad) onLoad(this);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t}\n\n\t\t\tfunction onImageError(event) {\n\t\t\t\tremoveEventListeners();\n\t\t\t\tif (onError) onError(event);\n\t\t\t\tscope.manager.itemError(url);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t}\n\n\t\t\tfunction removeEventListeners() {\n\t\t\t\timage.removeEventListener('load', onImageLoad, false);\n\t\t\t\timage.removeEventListener('error', onImageError, false);\n\t\t\t}\n\n\t\t\timage.addEventListener('load', onImageLoad, false);\n\t\t\timage.addEventListener('error', onImageError, false);\n\n\t\t\tif (url.substr(0, 5) !== 'data:') {\n\t\t\t\tif (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\n\t\t\t}\n\n\t\t\tscope.manager.itemStart(url);\n\t\t\timage.src = url;\n\t\t\treturn image;\n\t\t}\n\n\t}\n\n\tclass CubeTextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(urls, onLoad, onProgress, onError) {\n\t\t\tconst texture = new CubeTexture();\n\t\t\tconst loader = new ImageLoader(this.manager);\n\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\t\tloader.setPath(this.path);\n\t\t\tlet loaded = 0;\n\n\t\t\tfunction loadTexture(i) {\n\t\t\t\tloader.load(urls[i], function (image) {\n\t\t\t\t\ttexture.images[i] = image;\n\t\t\t\t\tloaded++;\n\n\t\t\t\t\tif (loaded === 6) {\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t\t\t}\n\t\t\t\t}, undefined, onError);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < urls.length; ++i) {\n\t\t\t\tloadTexture(i);\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\t/**\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tclass DataTextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst texture = new DataTexture();\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (buffer) {\n\t\t\t\tconst texData = scope.parse(buffer);\n\t\t\t\tif (!texData) return;\n\n\t\t\t\tif (texData.image !== undefined) {\n\t\t\t\t\ttexture.image = texData.image;\n\t\t\t\t} else if (texData.data !== undefined) {\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\t\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\t\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\t\tif (texData.encoding !== undefined) {\n\t\t\t\t\ttexture.encoding = texData.encoding;\n\t\t\t\t}\n\n\t\t\t\tif (texData.flipY !== undefined) {\n\t\t\t\t\ttexture.flipY = texData.flipY;\n\t\t\t\t}\n\n\t\t\t\tif (texData.format !== undefined) {\n\t\t\t\t\ttexture.format = texData.format;\n\t\t\t\t}\n\n\t\t\t\tif (texData.type !== undefined) {\n\t\t\t\t\ttexture.type = texData.type;\n\t\t\t\t}\n\n\t\t\t\tif (texData.mipmaps !== undefined) {\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\t\t\t\t}\n\n\t\t\t\tif (texData.mipmapCount === 1) {\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t}\n\n\t\t\t\tif (texData.generateMipmaps !== undefined) {\n\t\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\tif (onLoad) onLoad(texture, texData);\n\t\t\t}, onProgress, onError);\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\tclass TextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst texture = new Texture();\n\t\t\tconst loader = new ImageLoader(this.manager);\n\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.load(url, function (image) {\n\t\t\t\ttexture.image = image;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif (onLoad !== undefined) {\n\t\t\t\t\tonLoad(texture);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\tclass Light extends Object3D {\n\t\tconstructor(color, intensity = 1) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Light';\n\t\t\tthis.color = new Color(color);\n\t\t\tthis.intensity = intensity;\n\t\t}\n\n\t\tdispose() {// Empty here in base class; some subclasses override.\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.intensity = source.intensity;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\t\t\tif (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n\t\t\tif (this.distance !== undefined) data.object.distance = this.distance;\n\t\t\tif (this.angle !== undefined) data.object.angle = this.angle;\n\t\t\tif (this.decay !== undefined) data.object.decay = this.decay;\n\t\t\tif (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n\t\t\tif (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tLight.prototype.isLight = true;\n\n\tclass HemisphereLight extends Light {\n\t\tconstructor(skyColor, groundColor, intensity) {\n\t\t\tsuper(skyColor, intensity);\n\t\t\tthis.type = 'HemisphereLight';\n\t\t\tthis.position.copy(Object3D.DefaultUp);\n\t\t\tthis.updateMatrix();\n\t\t\tthis.groundColor = new Color(groundColor);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tLight.prototype.copy.call(this, source);\n\t\t\tthis.groundColor.copy(source.groundColor);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tHemisphereLight.prototype.isHemisphereLight = true;\n\n\tconst _projScreenMatrix$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _lightPositionWorld$1 = /*@__PURE__*/new Vector3();\n\n\tconst _lookTarget$1 = /*@__PURE__*/new Vector3();\n\n\tclass LightShadow {\n\t\tconstructor(camera) {\n\t\t\tthis.camera = camera;\n\t\t\tthis.bias = 0;\n\t\t\tthis.normalBias = 0;\n\t\t\tthis.radius = 1;\n\t\t\tthis.blurSamples = 8;\n\t\t\tthis.mapSize = new Vector2(512, 512);\n\t\t\tthis.map = null;\n\t\t\tthis.mapPass = null;\n\t\t\tthis.matrix = new Matrix4();\n\t\t\tthis.autoUpdate = true;\n\t\t\tthis.needsUpdate = false;\n\t\t\tthis._frustum = new Frustum();\n\t\t\tthis._frameExtents = new Vector2(1, 1);\n\t\t\tthis._viewportCount = 1;\n\t\t\tthis._viewports = [new Vector4(0, 0, 1, 1)];\n\t\t}\n\n\t\tgetViewportCount() {\n\t\t\treturn this._viewportCount;\n\t\t}\n\n\t\tgetFrustum() {\n\t\t\treturn this._frustum;\n\t\t}\n\n\t\tupdateMatrices(light) {\n\t\t\tconst shadowCamera = this.camera;\n\t\t\tconst shadowMatrix = this.matrix;\n\n\t\t\t_lightPositionWorld$1.setFromMatrixPosition(light.matrixWorld);\n\n\t\t\tshadowCamera.position.copy(_lightPositionWorld$1);\n\n\t\t\t_lookTarget$1.setFromMatrixPosition(light.target.matrixWorld);\n\n\t\t\tshadowCamera.lookAt(_lookTarget$1);\n\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t_projScreenMatrix$1.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n\t\t\tthis._frustum.setFromProjectionMatrix(_projScreenMatrix$1);\n\n\t\t\tshadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n\t\t\tshadowMatrix.multiply(shadowCamera.projectionMatrix);\n\t\t\tshadowMatrix.multiply(shadowCamera.matrixWorldInverse);\n\t\t}\n\n\t\tgetViewport(viewportIndex) {\n\t\t\treturn this._viewports[viewportIndex];\n\t\t}\n\n\t\tgetFrameExtents() {\n\t\t\treturn this._frameExtents;\n\t\t}\n\n\t\tdispose() {\n\t\t\tif (this.map) {\n\t\t\t\tthis.map.dispose();\n\t\t\t}\n\n\t\t\tif (this.mapPass) {\n\t\t\t\tthis.mapPass.dispose();\n\t\t\t}\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.camera = source.camera.clone();\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\t\t\tthis.mapSize.copy(source.mapSize);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst object = {};\n\t\t\tif (this.bias !== 0) object.bias = this.bias;\n\t\t\tif (this.normalBias !== 0) object.normalBias = this.normalBias;\n\t\t\tif (this.radius !== 1) object.radius = this.radius;\n\t\t\tif (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\n\t\t\tobject.camera = this.camera.toJSON(false).object;\n\t\t\tdelete object.camera.matrix;\n\t\t\treturn object;\n\t\t}\n\n\t}\n\n\tclass SpotLightShadow extends LightShadow {\n\t\tconstructor() {\n\t\t\tsuper(new PerspectiveCamera(50, 1, 0.5, 500));\n\t\t\tthis.focus = 1;\n\t\t}\n\n\t\tupdateMatrices(light) {\n\t\t\tconst camera = this.camera;\n\t\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tconst far = light.distance || camera.far;\n\n\t\t\tif (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\t\t\t}\n\n\t\t\tsuper.updateMatrices(light);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.focus = source.focus;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSpotLightShadow.prototype.isSpotLightShadow = true;\n\n\tclass SpotLight extends Light {\n\t\tconstructor(color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'SpotLight';\n\t\t\tthis.position.copy(Object3D.DefaultUp);\n\t\t\tthis.updateMatrix();\n\t\t\tthis.target = new Object3D();\n\t\t\tthis.distance = distance;\n\t\t\tthis.angle = angle;\n\t\t\tthis.penumbra = penumbra;\n\t\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\t\tthis.shadow = new SpotLightShadow();\n\t\t}\n\n\t\tget power() {\n\t\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\t\treturn this.intensity * Math.PI;\n\t\t}\n\n\t\tset power(power) {\n\t\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\t\tthis.intensity = power / Math.PI;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.shadow.dispose();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\t\t\tthis.target = source.target.clone();\n\t\t\tthis.shadow = source.shadow.clone();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSpotLight.prototype.isSpotLight = true;\n\n\tconst _projScreenMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _lightPositionWorld = /*@__PURE__*/new Vector3();\n\n\tconst _lookTarget = /*@__PURE__*/new Vector3();\n\n\tclass PointLightShadow extends LightShadow {\n\t\tconstructor() {\n\t\t\tsuper(new PerspectiveCamera(90, 1, 0.5, 500));\n\t\t\tthis._frameExtents = new Vector2(4, 2);\n\t\t\tthis._viewportCount = 6;\n\t\t\tthis._viewports = [// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//\txzXZ\n\t\t\t//\t y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\t\t\t// positive X\n\t\t\tnew Vector4(2, 1, 1, 1), // negative X\n\t\t\tnew Vector4(0, 1, 1, 1), // positive Z\n\t\t\tnew Vector4(3, 1, 1, 1), // negative Z\n\t\t\tnew Vector4(1, 1, 1, 1), // positive Y\n\t\t\tnew Vector4(3, 0, 1, 1), // negative Y\n\t\t\tnew Vector4(1, 0, 1, 1)];\n\t\t\tthis._cubeDirections = [new Vector3(1, 0, 0), new Vector3(-1, 0, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1), new Vector3(0, 1, 0), new Vector3(0, -1, 0)];\n\t\t\tthis._cubeUps = [new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1)];\n\t\t}\n\n\t\tupdateMatrices(light, viewportIndex = 0) {\n\t\t\tconst camera = this.camera;\n\t\t\tconst shadowMatrix = this.matrix;\n\t\t\tconst far = light.distance || camera.far;\n\n\t\t\tif (far !== camera.far) {\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\t\t\t}\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n\n\t\t\tcamera.position.copy(_lightPositionWorld);\n\n\t\t\t_lookTarget.copy(camera.position);\n\n\t\t\t_lookTarget.add(this._cubeDirections[viewportIndex]);\n\n\t\t\tcamera.up.copy(this._cubeUps[viewportIndex]);\n\t\t\tcamera.lookAt(_lookTarget);\n\t\t\tcamera.updateMatrixWorld();\n\t\t\tshadowMatrix.makeTranslation(-_lightPositionWorld.x, -_lightPositionWorld.y, -_lightPositionWorld.z);\n\n\t\t\t_projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n\t\t\tthis._frustum.setFromProjectionMatrix(_projScreenMatrix);\n\t\t}\n\n\t}\n\n\tPointLightShadow.prototype.isPointLightShadow = true;\n\n\tclass PointLight extends Light {\n\t\tconstructor(color, intensity, distance = 0, decay = 1) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'PointLight';\n\t\t\tthis.distance = distance;\n\t\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\t\tthis.shadow = new PointLightShadow();\n\t\t}\n\n\t\tget power() {\n\t\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\t\treturn this.intensity * 4 * Math.PI;\n\t\t}\n\n\t\tset power(power) {\n\t\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\t\tthis.intensity = power / (4 * Math.PI);\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.shadow.dispose();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\t\t\tthis.shadow = source.shadow.clone();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tPointLight.prototype.isPointLight = true;\n\n\tclass DirectionalLightShadow extends LightShadow {\n\t\tconstructor() {\n\t\t\tsuper(new OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\n\t\t}\n\n\t}\n\n\tDirectionalLightShadow.prototype.isDirectionalLightShadow = true;\n\n\tclass DirectionalLight extends Light {\n\t\tconstructor(color, intensity) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'DirectionalLight';\n\t\t\tthis.position.copy(Object3D.DefaultUp);\n\t\t\tthis.updateMatrix();\n\t\t\tthis.target = new Object3D();\n\t\t\tthis.shadow = new DirectionalLightShadow();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.shadow.dispose();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.target = source.target.clone();\n\t\t\tthis.shadow = source.shadow.clone();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tDirectionalLight.prototype.isDirectionalLight = true;\n\n\tclass AmbientLight extends Light {\n\t\tconstructor(color, intensity) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'AmbientLight';\n\t\t}\n\n\t}\n\n\tAmbientLight.prototype.isAmbientLight = true;\n\n\tclass RectAreaLight extends Light {\n\t\tconstructor(color, intensity, width = 10, height = 10) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'RectAreaLight';\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t}\n\n\t\tget power() {\n\t\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\t\treturn this.intensity * this.width * this.height * Math.PI;\n\t\t}\n\n\t\tset power(power) {\n\t\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\t\tthis.intensity = power / (this.width * this.height * Math.PI);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.width = this.width;\n\t\t\tdata.object.height = this.height;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tRectAreaLight.prototype.isRectAreaLight = true;\n\n\t/**\n\t * Primary reference:\n\t *\t https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\t *\n\t * Secondary reference:\n\t *\t https://www.ppsloan.org/publications/StupidSH36.pdf\n\t */\n\t// 3-band SH defined by 9 coefficients\n\n\tclass SphericalHarmonics3 {\n\t\tconstructor() {\n\t\t\tthis.coefficients = [];\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients.push(new Vector3());\n\t\t\t}\n\t\t}\n\n\t\tset(coefficients) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].copy(coefficients[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tzero() {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].set(0, 0, 0);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // get the radiance in the direction of the normal\n\t\t// target is a Vector3\n\n\n\t\tgetAt(normal, target) {\n\t\t\t// normal is assumed to be unit length\n\t\t\tconst x = normal.x,\n\t\t\t\t\t\ty = normal.y,\n\t\t\t\t\t\tz = normal.z;\n\t\t\tconst coeff = this.coefficients; // band 0\n\n\t\t\ttarget.copy(coeff[0]).multiplyScalar(0.282095); // band 1\n\n\t\t\ttarget.addScaledVector(coeff[1], 0.488603 * y);\n\t\t\ttarget.addScaledVector(coeff[2], 0.488603 * z);\n\t\t\ttarget.addScaledVector(coeff[3], 0.488603 * x); // band 2\n\n\t\t\ttarget.addScaledVector(coeff[4], 1.092548 * (x * y));\n\t\t\ttarget.addScaledVector(coeff[5], 1.092548 * (y * z));\n\t\t\ttarget.addScaledVector(coeff[6], 0.315392 * (3.0 * z * z - 1.0));\n\t\t\ttarget.addScaledVector(coeff[7], 1.092548 * (x * z));\n\t\t\ttarget.addScaledVector(coeff[8], 0.546274 * (x * x - y * y));\n\t\t\treturn target;\n\t\t} // get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t\t// target is a Vector3\n\t\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\n\n\t\tgetIrradianceAt(normal, target) {\n\t\t\t// normal is assumed to be unit length\n\t\t\tconst x = normal.x,\n\t\t\t\t\t\ty = normal.y,\n\t\t\t\t\t\tz = normal.z;\n\t\t\tconst coeff = this.coefficients; // band 0\n\n\t\t\ttarget.copy(coeff[0]).multiplyScalar(0.886227); // π * 0.282095\n\t\t\t// band 1\n\n\t\t\ttarget.addScaledVector(coeff[1], 2.0 * 0.511664 * y); // ( 2 * π / 3 ) * 0.488603\n\n\t\t\ttarget.addScaledVector(coeff[2], 2.0 * 0.511664 * z);\n\t\t\ttarget.addScaledVector(coeff[3], 2.0 * 0.511664 * x); // band 2\n\n\t\t\ttarget.addScaledVector(coeff[4], 2.0 * 0.429043 * x * y); // ( π / 4 ) * 1.092548\n\n\t\t\ttarget.addScaledVector(coeff[5], 2.0 * 0.429043 * y * z);\n\t\t\ttarget.addScaledVector(coeff[6], 0.743125 * z * z - 0.247708); // ( π / 4 ) * 0.315392 * 3\n\n\t\t\ttarget.addScaledVector(coeff[7], 2.0 * 0.429043 * x * z);\n\t\t\ttarget.addScaledVector(coeff[8], 0.429043 * (x * x - y * y)); // ( π / 4 ) * 0.546274\n\n\t\t\treturn target;\n\t\t}\n\n\t\tadd(sh) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].add(sh.coefficients[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledSH(sh, s) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].addScaledVector(sh.coefficients[i], s);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(s) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].multiplyScalar(s);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tlerp(sh, alpha) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].lerp(sh.coefficients[i], alpha);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(sh) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tif (!this.coefficients[i].equals(sh.coefficients[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tcopy(sh) {\n\t\t\treturn this.set(sh.coefficients);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tconst coefficients = this.coefficients;\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tcoefficients[i].fromArray(array, offset + i * 3);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tconst coefficients = this.coefficients;\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tcoefficients[i].toArray(array, offset + i * 3);\n\t\t\t}\n\n\t\t\treturn array;\n\t\t} // evaluate the basis functions\n\t\t// shBasis is an Array[ 9 ]\n\n\n\t\tstatic getBasisAt(normal, shBasis) {\n\t\t\t// normal is assumed to be unit length\n\t\t\tconst x = normal.x,\n\t\t\t\t\t\ty = normal.y,\n\t\t\t\t\t\tz = normal.z; // band 0\n\n\t\t\tshBasis[0] = 0.282095; // band 1\n\n\t\t\tshBasis[1] = 0.488603 * y;\n\t\t\tshBasis[2] = 0.488603 * z;\n\t\t\tshBasis[3] = 0.488603 * x; // band 2\n\n\t\t\tshBasis[4] = 1.092548 * x * y;\n\t\t\tshBasis[5] = 1.092548 * y * z;\n\t\t\tshBasis[6] = 0.315392 * (3 * z * z - 1);\n\t\t\tshBasis[7] = 1.092548 * x * z;\n\t\t\tshBasis[8] = 0.546274 * (x * x - y * y);\n\t\t}\n\n\t}\n\n\tSphericalHarmonics3.prototype.isSphericalHarmonics3 = true;\n\n\tclass LightProbe extends Light {\n\t\tconstructor(sh = new SphericalHarmonics3(), intensity = 1) {\n\t\t\tsuper(undefined, intensity);\n\t\t\tthis.sh = sh;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.sh.copy(source.sh);\n\t\t\treturn this;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\n\t\t\tthis.sh.fromArray(json.sh);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.sh = this.sh.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tLightProbe.prototype.isLightProbe = true;\n\n\tclass MaterialLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t\tthis.textures = {};\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(scope.manager);\n\t\t\tloader.setPath(scope.path);\n\t\t\tloader.setRequestHeader(scope.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\ttry {\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tparse(json) {\n\t\t\tconst textures = this.textures;\n\n\t\t\tfunction getTexture(name) {\n\t\t\t\tif (textures[name] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.MaterialLoader: Undefined texture', name);\n\t\t\t\t}\n\n\t\t\t\treturn textures[name];\n\t\t\t}\n\n\t\t\tconst material = new Materials[json.type]();\n\t\t\tif (json.uuid !== undefined) material.uuid = json.uuid;\n\t\t\tif (json.name !== undefined) material.name = json.name;\n\t\t\tif (json.color !== undefined && material.color !== undefined) material.color.setHex(json.color);\n\t\t\tif (json.roughness !== undefined) material.roughness = json.roughness;\n\t\t\tif (json.metalness !== undefined) material.metalness = json.metalness;\n\t\t\tif (json.sheen !== undefined) material.sheen = json.sheen;\n\t\t\tif (json.sheenColor !== undefined) material.sheenColor = new Color().setHex(json.sheenColor);\n\t\t\tif (json.sheenRoughness !== undefined) material.sheenRoughness = json.sheenRoughness;\n\t\t\tif (json.emissive !== undefined && material.emissive !== undefined) material.emissive.setHex(json.emissive);\n\t\t\tif (json.specular !== undefined && material.specular !== undefined) material.specular.setHex(json.specular);\n\t\t\tif (json.specularIntensity !== undefined) material.specularIntensity = json.specularIntensity;\n\t\t\tif (json.specularColor !== undefined && material.specularColor !== undefined) material.specularColor.setHex(json.specularColor);\n\t\t\tif (json.shininess !== undefined) material.shininess = json.shininess;\n\t\t\tif (json.clearcoat !== undefined) material.clearcoat = json.clearcoat;\n\t\t\tif (json.clearcoatRoughness !== undefined) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\t\tif (json.transmission !== undefined) material.transmission = json.transmission;\n\t\t\tif (json.thickness !== undefined) material.thickness = json.thickness;\n\t\t\tif (json.attenuationDistance !== undefined) material.attenuationDistance = json.attenuationDistance;\n\t\t\tif (json.attenuationColor !== undefined && material.attenuationColor !== undefined) material.attenuationColor.setHex(json.attenuationColor);\n\t\t\tif (json.fog !== undefined) material.fog = json.fog;\n\t\t\tif (json.flatShading !== undefined) material.flatShading = json.flatShading;\n\t\t\tif (json.blending !== undefined) material.blending = json.blending;\n\t\t\tif (json.combine !== undefined) material.combine = json.combine;\n\t\t\tif (json.side !== undefined) material.side = json.side;\n\t\t\tif (json.shadowSide !== undefined) material.shadowSide = json.shadowSide;\n\t\t\tif (json.opacity !== undefined) material.opacity = json.opacity;\n\t\t\tif (json.transparent !== undefined) material.transparent = json.transparent;\n\t\t\tif (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n\t\t\tif (json.depthTest !== undefined) material.depthTest = json.depthTest;\n\t\t\tif (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n\t\t\tif (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n\t\t\tif (json.stencilWrite !== undefined) material.stencilWrite = json.stencilWrite;\n\t\t\tif (json.stencilWriteMask !== undefined) material.stencilWriteMask = json.stencilWriteMask;\n\t\t\tif (json.stencilFunc !== undefined) material.stencilFunc = json.stencilFunc;\n\t\t\tif (json.stencilRef !== undefined) material.stencilRef = json.stencilRef;\n\t\t\tif (json.stencilFuncMask !== undefined) material.stencilFuncMask = json.stencilFuncMask;\n\t\t\tif (json.stencilFail !== undefined) material.stencilFail = json.stencilFail;\n\t\t\tif (json.stencilZFail !== undefined) material.stencilZFail = json.stencilZFail;\n\t\t\tif (json.stencilZPass !== undefined) material.stencilZPass = json.stencilZPass;\n\t\t\tif (json.wireframe !== undefined) material.wireframe = json.wireframe;\n\t\t\tif (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\t\tif (json.wireframeLinecap !== undefined) material.wireframeLinecap = json.wireframeLinecap;\n\t\t\tif (json.wireframeLinejoin !== undefined) material.wireframeLinejoin = json.wireframeLinejoin;\n\t\t\tif (json.rotation !== undefined) material.rotation = json.rotation;\n\t\t\tif (json.linewidth !== 1) material.linewidth = json.linewidth;\n\t\t\tif (json.dashSize !== undefined) material.dashSize = json.dashSize;\n\t\t\tif (json.gapSize !== undefined) material.gapSize = json.gapSize;\n\t\t\tif (json.scale !== undefined) material.scale = json.scale;\n\t\t\tif (json.polygonOffset !== undefined) material.polygonOffset = json.polygonOffset;\n\t\t\tif (json.polygonOffsetFactor !== undefined) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\t\tif (json.polygonOffsetUnits !== undefined) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\t\t\tif (json.dithering !== undefined) material.dithering = json.dithering;\n\t\t\tif (json.alphaToCoverage !== undefined) material.alphaToCoverage = json.alphaToCoverage;\n\t\t\tif (json.premultipliedAlpha !== undefined) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\t\tif (json.visible !== undefined) material.visible = json.visible;\n\t\t\tif (json.toneMapped !== undefined) material.toneMapped = json.toneMapped;\n\t\t\tif (json.userData !== undefined) material.userData = json.userData;\n\n\t\t\tif (json.vertexColors !== undefined) {\n\t\t\t\tif (typeof json.vertexColors === 'number') {\n\t\t\t\t\tmaterial.vertexColors = json.vertexColors > 0 ? true : false;\n\t\t\t\t} else {\n\t\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\t\t\t\t}\n\t\t\t} // Shader Material\n\n\n\t\t\tif (json.uniforms !== undefined) {\n\t\t\t\tfor (const name in json.uniforms) {\n\t\t\t\t\tconst uniform = json.uniforms[name];\n\t\t\t\t\tmaterial.uniforms[name] = {};\n\n\t\t\t\t\tswitch (uniform.type) {\n\t\t\t\t\t\tcase 't':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = getTexture(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Color().setHex(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector2().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector3().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector4().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Matrix3().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Matrix4().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = uniform.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (json.defines !== undefined) material.defines = json.defines;\n\t\t\tif (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n\t\t\tif (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n\n\t\t\tif (json.extensions !== undefined) {\n\t\t\t\tfor (const key in json.extensions) {\n\t\t\t\t\tmaterial.extensions[key] = json.extensions[key];\n\t\t\t\t}\n\t\t\t} // Deprecated\n\n\n\t\t\tif (json.shading !== undefined) material.flatShading = json.shading === 1; // THREE.FlatShading\n\t\t\t// for PointsMaterial\n\n\t\t\tif (json.size !== undefined) material.size = json.size;\n\t\t\tif (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\n\n\t\t\tif (json.map !== undefined) material.map = getTexture(json.map);\n\t\t\tif (json.matcap !== undefined) material.matcap = getTexture(json.matcap);\n\t\t\tif (json.alphaMap !== undefined) material.alphaMap = getTexture(json.alphaMap);\n\t\t\tif (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\n\t\t\tif (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n\t\t\tif (json.normalMap !== undefined) material.normalMap = getTexture(json.normalMap);\n\t\t\tif (json.normalMapType !== undefined) material.normalMapType = json.normalMapType;\n\n\t\t\tif (json.normalScale !== undefined) {\n\t\t\t\tlet normalScale = json.normalScale;\n\n\t\t\t\tif (Array.isArray(normalScale) === false) {\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\t\t\t\t\tnormalScale = [normalScale, normalScale];\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray(normalScale);\n\t\t\t}\n\n\t\t\tif (json.displacementMap !== undefined) material.displacementMap = getTexture(json.displacementMap);\n\t\t\tif (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n\t\t\tif (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n\t\t\tif (json.roughnessMap !== undefined) material.roughnessMap = getTexture(json.roughnessMap);\n\t\t\tif (json.metalnessMap !== undefined) material.metalnessMap = getTexture(json.metalnessMap);\n\t\t\tif (json.emissiveMap !== undefined) material.emissiveMap = getTexture(json.emissiveMap);\n\t\t\tif (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\n\t\t\tif (json.specularMap !== undefined) material.specularMap = getTexture(json.specularMap);\n\t\t\tif (json.specularIntensityMap !== undefined) material.specularIntensityMap = getTexture(json.specularIntensityMap);\n\t\t\tif (json.specularColorMap !== undefined) material.specularColorMap = getTexture(json.specularColorMap);\n\t\t\tif (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\n\t\t\tif (json.envMapIntensity !== undefined) material.envMapIntensity = json.envMapIntensity;\n\t\t\tif (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\n\t\t\tif (json.refractionRatio !== undefined) material.refractionRatio = json.refractionRatio;\n\t\t\tif (json.lightMap !== undefined) material.lightMap = getTexture(json.lightMap);\n\t\t\tif (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n\t\t\tif (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\n\t\t\tif (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity;\n\t\t\tif (json.gradientMap !== undefined) material.gradientMap = getTexture(json.gradientMap);\n\t\t\tif (json.clearcoatMap !== undefined) material.clearcoatMap = getTexture(json.clearcoatMap);\n\t\t\tif (json.clearcoatRoughnessMap !== undefined) material.clearcoatRoughnessMap = getTexture(json.clearcoatRoughnessMap);\n\t\t\tif (json.clearcoatNormalMap !== undefined) material.clearcoatNormalMap = getTexture(json.clearcoatNormalMap);\n\t\t\tif (json.clearcoatNormalScale !== undefined) material.clearcoatNormalScale = new Vector2().fromArray(json.clearcoatNormalScale);\n\t\t\tif (json.transmissionMap !== undefined) material.transmissionMap = getTexture(json.transmissionMap);\n\t\t\tif (json.thicknessMap !== undefined) material.thicknessMap = getTexture(json.thicknessMap);\n\t\t\tif (json.sheenColorMap !== undefined) material.sheenColorMap = getTexture(json.sheenColorMap);\n\t\t\tif (json.sheenRoughnessMap !== undefined) material.sheenRoughnessMap = getTexture(json.sheenRoughnessMap);\n\t\t\treturn material;\n\t\t}\n\n\t\tsetTextures(value) {\n\t\t\tthis.textures = value;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass LoaderUtils {\n\t\tstatic decodeText(array) {\n\t\t\tif (typeof TextDecoder !== 'undefined') {\n\t\t\t\treturn new TextDecoder().decode(array);\n\t\t\t} // Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\n\t\t\tlet s = '';\n\n\t\t\tfor (let i = 0, il = array.length; i < il; i++) {\n\t\t\t\t// Implicitly assumes little-endian.\n\t\t\t\ts += String.fromCharCode(array[i]);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// merges multi-byte utf-8 characters.\n\t\t\t\treturn decodeURIComponent(escape(s));\n\t\t\t} catch (e) {\n\t\t\t\t// see #16358\n\t\t\t\treturn s;\n\t\t\t}\n\t\t}\n\n\t\tstatic extractUrlBase(url) {\n\t\t\tconst index = url.lastIndexOf('/');\n\t\t\tif (index === -1) return './';\n\t\t\treturn url.substr(0, index + 1);\n\t\t}\n\n\t\tstatic resolveURL(url, path) {\n\t\t\t// Invalid URL\n\t\t\tif (typeof url !== 'string' || url === '') return ''; // Host Relative URL\n\n\t\t\tif (/^https?:\\/\\//i.test(path) && /^\\//.test(url)) {\n\t\t\t\tpath = path.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n\t\t\t} // Absolute URL http://,https://,//\n\n\n\t\t\tif (/^(https?:)?\\/\\//i.test(url)) return url; // Data URI\n\n\t\t\tif (/^data:.*,.*$/i.test(url)) return url; // Blob URL\n\n\t\t\tif (/^blob:.*$/i.test(url)) return url; // Relative URL\n\n\t\t\treturn path + url;\n\t\t}\n\n\t}\n\n\tclass InstancedBufferGeometry extends BufferGeometry {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'InstancedBufferGeometry';\n\t\t\tthis.instanceCount = Infinity;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.instanceCount = source.instanceCount;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON(this);\n\t\t\tdata.instanceCount = this.instanceCount;\n\t\t\tdata.isInstancedBufferGeometry = true;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tInstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\n\n\tclass BufferGeometryLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(scope.manager);\n\t\t\tloader.setPath(scope.path);\n\t\t\tloader.setRequestHeader(scope.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\ttry {\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tparse(json) {\n\t\t\tconst interleavedBufferMap = {};\n\t\t\tconst arrayBufferMap = {};\n\n\t\t\tfunction getInterleavedBuffer(json, uuid) {\n\t\t\t\tif (interleavedBufferMap[uuid] !== undefined) return interleavedBufferMap[uuid];\n\t\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\t\tconst interleavedBuffer = interleavedBuffers[uuid];\n\t\t\t\tconst buffer = getArrayBuffer(json, interleavedBuffer.buffer);\n\t\t\t\tconst array = getTypedArray(interleavedBuffer.type, buffer);\n\t\t\t\tconst ib = new InterleavedBuffer(array, interleavedBuffer.stride);\n\t\t\t\tib.uuid = interleavedBuffer.uuid;\n\t\t\t\tinterleavedBufferMap[uuid] = ib;\n\t\t\t\treturn ib;\n\t\t\t}\n\n\t\t\tfunction getArrayBuffer(json, uuid) {\n\t\t\t\tif (arrayBufferMap[uuid] !== undefined) return arrayBufferMap[uuid];\n\t\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\t\tconst arrayBuffer = arrayBuffers[uuid];\n\t\t\t\tconst ab = new Uint32Array(arrayBuffer).buffer;\n\t\t\t\tarrayBufferMap[uuid] = ab;\n\t\t\t\treturn ab;\n\t\t\t}\n\n\t\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\t\t\tconst index = json.data.index;\n\n\t\t\tif (index !== undefined) {\n\t\t\t\tconst typedArray = getTypedArray(index.type, index.array);\n\t\t\t\tgeometry.setIndex(new BufferAttribute(typedArray, 1));\n\t\t\t}\n\n\t\t\tconst attributes = json.data.attributes;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tconst attribute = attributes[key];\n\t\t\t\tlet bufferAttribute;\n\n\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\n\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\n\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\n\t\t\t\t} else {\n\t\t\t\t\tconst typedArray = getTypedArray(attribute.type, attribute.array);\n\t\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\t\tbufferAttribute = new bufferAttributeConstr(typedArray, attribute.itemSize, attribute.normalized);\n\t\t\t\t}\n\n\t\t\t\tif (attribute.name !== undefined) bufferAttribute.name = attribute.name;\n\t\t\t\tif (attribute.usage !== undefined) bufferAttribute.setUsage(attribute.usage);\n\n\t\t\t\tif (attribute.updateRange !== undefined) {\n\t\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute(key, bufferAttribute);\n\t\t\t}\n\n\t\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\t\tif (morphAttributes) {\n\t\t\t\tfor (const key in morphAttributes) {\n\t\t\t\t\tconst attributeArray = morphAttributes[key];\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor (let i = 0, il = attributeArray.length; i < il; i++) {\n\t\t\t\t\t\tconst attribute = attributeArray[i];\n\t\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\n\t\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\n\t\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst typedArray = getTypedArray(attribute.type, attribute.array);\n\t\t\t\t\t\t\tbufferAttribute = new BufferAttribute(typedArray, attribute.itemSize, attribute.normalized);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (attribute.name !== undefined) bufferAttribute.name = attribute.name;\n\t\t\t\t\t\tarray.push(bufferAttribute);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.morphAttributes[key] = array;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\t\tif (morphTargetsRelative) {\n\t\t\t\tgeometry.morphTargetsRelative = true;\n\t\t\t}\n\n\t\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif (groups !== undefined) {\n\t\t\t\tfor (let i = 0, n = groups.length; i !== n; ++i) {\n\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\tgeometry.addGroup(group.start, group.count, group.materialIndex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\t\tif (boundingSphere !== undefined) {\n\t\t\t\tconst center = new Vector3();\n\n\t\t\t\tif (boundingSphere.center !== undefined) {\n\t\t\t\t\tcenter.fromArray(boundingSphere.center);\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new Sphere(center, boundingSphere.radius);\n\t\t\t}\n\n\t\t\tif (json.name) geometry.name = json.name;\n\t\t\tif (json.userData) geometry.userData = json.userData;\n\t\t\treturn geometry;\n\t\t}\n\n\t}\n\n\tclass ObjectLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\n\t\t\tthis.resourcePath = this.resourcePath || path;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\tlet json = null;\n\n\t\t\t\ttry {\n\t\t\t\t\tjson = JSON.parse(text);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (onError !== undefined) onError(error);\n\t\t\t\t\tconsole.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst metadata = json.metadata;\n\n\t\t\t\tif (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n\t\t\t\t\tconsole.error('THREE.ObjectLoader: Can\\'t load ' + url);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tscope.parse(json, onLoad);\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tasync loadAsync(url, onProgress) {\n\t\t\tconst scope = this;\n\t\t\tconst path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\n\t\t\tthis.resourcePath = this.resourcePath || path;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tconst text = await loader.loadAsync(url, onProgress);\n\t\t\tconst json = JSON.parse(text);\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n\t\t\t\tthrow new Error('THREE.ObjectLoader: Can\\'t load ' + url);\n\t\t\t}\n\n\t\t\treturn await scope.parseAsync(json);\n\t\t}\n\n\t\tparse(json, onLoad) {\n\t\t\tconst animations = this.parseAnimations(json.animations);\n\t\t\tconst shapes = this.parseShapes(json.shapes);\n\t\t\tconst geometries = this.parseGeometries(json.geometries, shapes);\n\t\t\tconst images = this.parseImages(json.images, function () {\n\t\t\t\tif (onLoad !== undefined) onLoad(object);\n\t\t\t});\n\t\t\tconst textures = this.parseTextures(json.textures, images);\n\t\t\tconst materials = this.parseMaterials(json.materials, textures);\n\t\t\tconst object = this.parseObject(json.object, geometries, materials, textures, animations);\n\t\t\tconst skeletons = this.parseSkeletons(json.skeletons, object);\n\t\t\tthis.bindSkeletons(object, skeletons); //\n\n\t\t\tif (onLoad !== undefined) {\n\t\t\t\tlet hasImages = false;\n\n\t\t\t\tfor (const uuid in images) {\n\t\t\t\t\tif (images[uuid] instanceof HTMLImageElement) {\n\t\t\t\t\t\thasImages = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (hasImages === false) onLoad(object);\n\t\t\t}\n\n\t\t\treturn object;\n\t\t}\n\n\t\tasync parseAsync(json) {\n\t\t\tconst animations = this.parseAnimations(json.animations);\n\t\t\tconst shapes = this.parseShapes(json.shapes);\n\t\t\tconst geometries = this.parseGeometries(json.geometries, shapes);\n\t\t\tconst images = await this.parseImagesAsync(json.images);\n\t\t\tconst textures = this.parseTextures(json.textures, images);\n\t\t\tconst materials = this.parseMaterials(json.materials, textures);\n\t\t\tconst object = this.parseObject(json.object, geometries, materials, textures, animations);\n\t\t\tconst skeletons = this.parseSkeletons(json.skeletons, object);\n\t\t\tthis.bindSkeletons(object, skeletons);\n\t\t\treturn object;\n\t\t}\n\n\t\tparseShapes(json) {\n\t\t\tconst shapes = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst shape = new Shape().fromJSON(json[i]);\n\t\t\t\t\tshapes[shape.uuid] = shape;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn shapes;\n\t\t}\n\n\t\tparseSkeletons(json, object) {\n\t\t\tconst skeletons = {};\n\t\t\tconst bones = {}; // generate bone lookup table\n\n\t\t\tobject.traverse(function (child) {\n\t\t\t\tif (child.isBone) bones[child.uuid] = child;\n\t\t\t}); // create skeletons\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst skeleton = new Skeleton().fromJSON(json[i], bones);\n\t\t\t\t\tskeletons[skeleton.uuid] = skeleton;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn skeletons;\n\t\t}\n\n\t\tparseGeometries(json, shapes) {\n\t\t\tconst geometries = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tlet geometry;\n\t\t\t\t\tconst data = json[i];\n\n\t\t\t\t\tswitch (data.type) {\n\t\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\t\tcase 'InstancedBufferGeometry':\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse(data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Geometry':\n\t\t\t\t\t\t\tconsole.error('THREE.ObjectLoader: The legacy Geometry type is no longer supported.');\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif (data.type in Geometries) {\n\t\t\t\t\t\t\t\tgeometry = Geometries[data.type].fromJSON(data, shapes);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.warn(`THREE.ObjectLoader: Unsupported geometry type \"${data.type}\"`);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\t\t\t\t\tif (data.name !== undefined) geometry.name = data.name;\n\t\t\t\t\tif (geometry.isBufferGeometry === true && data.userData !== undefined) geometry.userData = data.userData;\n\t\t\t\t\tgeometries[data.uuid] = geometry;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn geometries;\n\t\t}\n\n\t\tparseMaterials(json, textures) {\n\t\t\tconst cache = {}; // MultiMaterial\n\n\t\t\tconst materials = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tconst loader = new MaterialLoader();\n\t\t\t\tloader.setTextures(textures);\n\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst data = json[i];\n\n\t\t\t\t\tif (data.type === 'MultiMaterial') {\n\t\t\t\t\t\t// Deprecated\n\t\t\t\t\t\tconst array = [];\n\n\t\t\t\t\t\tfor (let j = 0; j < data.materials.length; j++) {\n\t\t\t\t\t\t\tconst material = data.materials[j];\n\n\t\t\t\t\t\t\tif (cache[material.uuid] === undefined) {\n\t\t\t\t\t\t\t\tcache[material.uuid] = loader.parse(material);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tarray.push(cache[material.uuid]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[data.uuid] = array;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (cache[data.uuid] === undefined) {\n\t\t\t\t\t\t\tcache[data.uuid] = loader.parse(data);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[data.uuid] = cache[data.uuid];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn materials;\n\t\t}\n\n\t\tparseAnimations(json) {\n\t\t\tconst animations = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0; i < json.length; i++) {\n\t\t\t\t\tconst data = json[i];\n\t\t\t\t\tconst clip = AnimationClip.parse(data);\n\t\t\t\t\tanimations[clip.uuid] = clip;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn animations;\n\t\t}\n\n\t\tparseImages(json, onLoad) {\n\t\t\tconst scope = this;\n\t\t\tconst images = {};\n\t\t\tlet loader;\n\n\t\t\tfunction loadImage(url) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\treturn loader.load(url, function () {\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, undefined, function () {\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction deserializeImage(image) {\n\t\t\t\tif (typeof image === 'string') {\n\t\t\t\t\tconst url = image;\n\t\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url) ? url : scope.resourcePath + url;\n\t\t\t\t\treturn loadImage(path);\n\t\t\t\t} else {\n\t\t\t\t\tif (image.data) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tdata: getTypedArray(image.type, image.data),\n\t\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\t\theight: image.height\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (json !== undefined && json.length > 0) {\n\t\t\t\tconst manager = new LoadingManager(onLoad);\n\t\t\t\tloader = new ImageLoader(manager);\n\t\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\n\t\t\t\tfor (let i = 0, il = json.length; i < il; i++) {\n\t\t\t\t\tconst image = json[i];\n\t\t\t\t\tconst url = image.url;\n\n\t\t\t\t\tif (Array.isArray(url)) {\n\t\t\t\t\t\t// load array of images e.g CubeTexture\n\t\t\t\t\t\timages[image.uuid] = [];\n\n\t\t\t\t\t\tfor (let j = 0, jl = url.length; j < jl; j++) {\n\t\t\t\t\t\t\tconst currentUrl = url[j];\n\t\t\t\t\t\t\tconst deserializedImage = deserializeImage(currentUrl);\n\n\t\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\t\tif (deserializedImage instanceof HTMLImageElement) {\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(deserializedImage);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// load single image\n\t\t\t\t\t\tconst deserializedImage = deserializeImage(image.url);\n\n\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\timages[image.uuid] = deserializedImage;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn images;\n\t\t}\n\n\t\tasync parseImagesAsync(json) {\n\t\t\tconst scope = this;\n\t\t\tconst images = {};\n\t\t\tlet loader;\n\n\t\t\tasync function deserializeImage(image) {\n\t\t\t\tif (typeof image === 'string') {\n\t\t\t\t\tconst url = image;\n\t\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url) ? url : scope.resourcePath + url;\n\t\t\t\t\treturn await loader.loadAsync(path);\n\t\t\t\t} else {\n\t\t\t\t\tif (image.data) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tdata: getTypedArray(image.type, image.data),\n\t\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\t\theight: image.height\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (json !== undefined && json.length > 0) {\n\t\t\t\tloader = new ImageLoader(this.manager);\n\t\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\n\t\t\t\tfor (let i = 0, il = json.length; i < il; i++) {\n\t\t\t\t\tconst image = json[i];\n\t\t\t\t\tconst url = image.url;\n\n\t\t\t\t\tif (Array.isArray(url)) {\n\t\t\t\t\t\t// load array of images e.g CubeTexture\n\t\t\t\t\t\timages[image.uuid] = [];\n\n\t\t\t\t\t\tfor (let j = 0, jl = url.length; j < jl; j++) {\n\t\t\t\t\t\t\tconst currentUrl = url[j];\n\t\t\t\t\t\t\tconst deserializedImage = await deserializeImage(currentUrl);\n\n\t\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\t\tif (deserializedImage instanceof HTMLImageElement) {\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(deserializedImage);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// load single image\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage(image.url);\n\n\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\timages[image.uuid] = deserializedImage;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn images;\n\t\t}\n\n\t\tparseTextures(json, images) {\n\t\t\tfunction parseConstant(value, type) {\n\t\t\t\tif (typeof value === 'number') return value;\n\t\t\t\tconsole.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n\t\t\t\treturn type[value];\n\t\t\t}\n\n\t\t\tconst textures = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst data = json[i];\n\n\t\t\t\t\tif (data.image === undefined) {\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (images[data.image] === undefined) {\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined image', data.image);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet texture;\n\t\t\t\t\tconst image = images[data.image];\n\n\t\t\t\t\tif (Array.isArray(image)) {\n\t\t\t\t\t\ttexture = new CubeTexture(image);\n\t\t\t\t\t\tif (image.length === 6) texture.needsUpdate = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (image && image.data) {\n\t\t\t\t\t\t\ttexture = new DataTexture(image.data, image.width, image.height);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttexture = new Texture(image);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (image) texture.needsUpdate = true; // textures can have undefined image data\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\t\t\t\t\tif (data.name !== undefined) texture.name = data.name;\n\t\t\t\t\tif (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n\t\t\t\t\tif (data.offset !== undefined) texture.offset.fromArray(data.offset);\n\t\t\t\t\tif (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n\t\t\t\t\tif (data.center !== undefined) texture.center.fromArray(data.center);\n\t\t\t\t\tif (data.rotation !== undefined) texture.rotation = data.rotation;\n\n\t\t\t\t\tif (data.wrap !== undefined) {\n\t\t\t\t\t\ttexture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n\t\t\t\t\t\ttexture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.format !== undefined) texture.format = data.format;\n\t\t\t\t\tif (data.type !== undefined) texture.type = data.type;\n\t\t\t\t\tif (data.encoding !== undefined) texture.encoding = data.encoding;\n\t\t\t\t\tif (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n\t\t\t\t\tif (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n\t\t\t\t\tif (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n\t\t\t\t\tif (data.flipY !== undefined) texture.flipY = data.flipY;\n\t\t\t\t\tif (data.premultiplyAlpha !== undefined) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\t\tif (data.unpackAlignment !== undefined) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\t\tif (data.userData !== undefined) texture.userData = data.userData;\n\t\t\t\t\ttextures[data.uuid] = texture;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn textures;\n\t\t}\n\n\t\tparseObject(data, geometries, materials, textures, animations) {\n\t\t\tlet object;\n\n\t\t\tfunction getGeometry(name) {\n\t\t\t\tif (geometries[name] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined geometry', name);\n\t\t\t\t}\n\n\t\t\t\treturn geometries[name];\n\t\t\t}\n\n\t\t\tfunction getMaterial(name) {\n\t\t\t\tif (name === undefined) return undefined;\n\n\t\t\t\tif (Array.isArray(name)) {\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor (let i = 0, l = name.length; i < l; i++) {\n\t\t\t\t\t\tconst uuid = name[i];\n\n\t\t\t\t\t\tif (materials[uuid] === undefined) {\n\t\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined material', uuid);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push(materials[uuid]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn array;\n\t\t\t\t}\n\n\t\t\t\tif (materials[name] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined material', name);\n\t\t\t\t}\n\n\t\t\t\treturn materials[name];\n\t\t\t}\n\n\t\t\tfunction getTexture(uuid) {\n\t\t\t\tif (textures[uuid] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined texture', uuid);\n\t\t\t\t}\n\n\t\t\t\treturn textures[uuid];\n\t\t\t}\n\n\t\t\tlet geometry, material;\n\n\t\t\tswitch (data.type) {\n\t\t\t\tcase 'Scene':\n\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\tif (data.background !== undefined) {\n\t\t\t\t\t\tif (Number.isInteger(data.background)) {\n\t\t\t\t\t\t\tobject.background = new Color(data.background);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tobject.background = getTexture(data.background);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.environment !== undefined) {\n\t\t\t\t\t\tobject.environment = getTexture(data.environment);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.fog !== undefined) {\n\t\t\t\t\t\tif (data.fog.type === 'Fog') {\n\t\t\t\t\t\t\tobject.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\n\t\t\t\t\t\t} else if (data.fog.type === 'FogExp2') {\n\t\t\t\t\t\t\tobject.fog = new FogExp2(data.fog.color, data.fog.density);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PerspectiveCamera':\n\t\t\t\t\tobject = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n\t\t\t\t\tif (data.focus !== undefined) object.focus = data.focus;\n\t\t\t\t\tif (data.zoom !== undefined) object.zoom = data.zoom;\n\t\t\t\t\tif (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\n\t\t\t\t\tif (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\n\t\t\t\t\tif (data.view !== undefined) object.view = Object.assign({}, data.view);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'OrthographicCamera':\n\t\t\t\t\tobject = new OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n\t\t\t\t\tif (data.zoom !== undefined) object.zoom = data.zoom;\n\t\t\t\t\tif (data.view !== undefined) object.view = Object.assign({}, data.view);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientLight':\n\t\t\t\t\tobject = new AmbientLight(data.color, data.intensity);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tobject = new DirectionalLight(data.color, data.intensity);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tobject = new PointLight(data.color, data.intensity, data.distance, data.decay);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tobject = new RectAreaLight(data.color, data.intensity, data.width, data.height);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tobject = new SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tobject = new HemisphereLight(data.color, data.groundColor, data.intensity);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LightProbe':\n\t\t\t\t\tobject = new LightProbe().fromJSON(data);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SkinnedMesh':\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\n\t\t\t\t\tmaterial = getMaterial(data.material);\n\t\t\t\t\tobject = new SkinnedMesh(geometry, material);\n\t\t\t\t\tif (data.bindMode !== undefined) object.bindMode = data.bindMode;\n\t\t\t\t\tif (data.bindMatrix !== undefined) object.bindMatrix.fromArray(data.bindMatrix);\n\t\t\t\t\tif (data.skeleton !== undefined) object.skeleton = data.skeleton;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Mesh':\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\n\t\t\t\t\tmaterial = getMaterial(data.material);\n\t\t\t\t\tobject = new Mesh(geometry, material);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'InstancedMesh':\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\n\t\t\t\t\tmaterial = getMaterial(data.material);\n\t\t\t\t\tconst count = data.count;\n\t\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\t\tconst instanceColor = data.instanceColor;\n\t\t\t\t\tobject = new InstancedMesh(geometry, material, count);\n\t\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute(new Float32Array(instanceMatrix.array), 16);\n\t\t\t\t\tif (instanceColor !== undefined) object.instanceColor = new InstancedBufferAttribute(new Float32Array(instanceColor.array), instanceColor.itemSize);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LOD':\n\t\t\t\t\tobject = new LOD();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Line':\n\t\t\t\t\tobject = new Line(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineLoop':\n\t\t\t\t\tobject = new LineLoop(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineSegments':\n\t\t\t\t\tobject = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointCloud':\n\t\t\t\tcase 'Points':\n\t\t\t\t\tobject = new Points(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Sprite':\n\t\t\t\t\tobject = new Sprite(getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Group':\n\t\t\t\t\tobject = new Group();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Bone':\n\t\t\t\t\tobject = new Bone();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tobject = new Object3D();\n\t\t\t}\n\n\t\t\tobject.uuid = data.uuid;\n\t\t\tif (data.name !== undefined) object.name = data.name;\n\n\t\t\tif (data.matrix !== undefined) {\n\t\t\t\tobject.matrix.fromArray(data.matrix);\n\t\t\t\tif (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\t\tif (object.matrixAutoUpdate) object.matrix.decompose(object.position, object.quaternion, object.scale);\n\t\t\t} else {\n\t\t\t\tif (data.position !== undefined) object.position.fromArray(data.position);\n\t\t\t\tif (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n\t\t\t\tif (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n\t\t\t\tif (data.scale !== undefined) object.scale.fromArray(data.scale);\n\t\t\t}\n\n\t\t\tif (data.castShadow !== undefined) object.castShadow = data.castShadow;\n\t\t\tif (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n\n\t\t\tif (data.shadow) {\n\t\t\t\tif (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\n\t\t\t\tif (data.shadow.normalBias !== undefined) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\t\tif (data.shadow.radius !== undefined) object.shadow.radius = data.shadow.radius;\n\t\t\t\tif (data.shadow.mapSize !== undefined) object.shadow.mapSize.fromArray(data.shadow.mapSize);\n\t\t\t\tif (data.shadow.camera !== undefined) object.shadow.camera = this.parseObject(data.shadow.camera);\n\t\t\t}\n\n\t\t\tif (data.visible !== undefined) object.visible = data.visible;\n\t\t\tif (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\n\t\t\tif (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\n\t\t\tif (data.userData !== undefined) object.userData = data.userData;\n\t\t\tif (data.layers !== undefined) object.layers.mask = data.layers;\n\n\t\t\tif (data.children !== undefined) {\n\t\t\t\tconst children = data.children;\n\n\t\t\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\t\t\tobject.add(this.parseObject(children[i], geometries, materials, textures, animations));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.animations !== undefined) {\n\t\t\t\tconst objectAnimations = data.animations;\n\n\t\t\t\tfor (let i = 0; i < objectAnimations.length; i++) {\n\t\t\t\t\tconst uuid = objectAnimations[i];\n\t\t\t\t\tobject.animations.push(animations[uuid]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.type === 'LOD') {\n\t\t\t\tif (data.autoUpdate !== undefined) object.autoUpdate = data.autoUpdate;\n\t\t\t\tconst levels = data.levels;\n\n\t\t\t\tfor (let l = 0; l < levels.length; l++) {\n\t\t\t\t\tconst level = levels[l];\n\t\t\t\t\tconst child = object.getObjectByProperty('uuid', level.object);\n\n\t\t\t\t\tif (child !== undefined) {\n\t\t\t\t\t\tobject.addLevel(child, level.distance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn object;\n\t\t}\n\n\t\tbindSkeletons(object, skeletons) {\n\t\t\tif (Object.keys(skeletons).length === 0) return;\n\t\t\tobject.traverse(function (child) {\n\t\t\t\tif (child.isSkinnedMesh === true && child.skeleton !== undefined) {\n\t\t\t\t\tconst skeleton = skeletons[child.skeleton];\n\n\t\t\t\t\tif (skeleton === undefined) {\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchild.bind(skeleton, child.bindMatrix);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t/* DEPRECATED */\n\n\n\t\tsetTexturePath(value) {\n\t\t\tconsole.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');\n\t\t\treturn this.setResourcePath(value);\n\t\t}\n\n\t}\n\n\tconst TEXTURE_MAPPING = {\n\t\tUVMapping: UVMapping,\n\t\tCubeReflectionMapping: CubeReflectionMapping,\n\t\tCubeRefractionMapping: CubeRefractionMapping,\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\n\t};\n\tconst TEXTURE_WRAPPING = {\n\t\tRepeatWrapping: RepeatWrapping,\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\n\t};\n\tconst TEXTURE_FILTER = {\n\t\tNearestFilter: NearestFilter,\n\t\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\t\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\t\tLinearFilter: LinearFilter,\n\t\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\t\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n\t};\n\n\tclass ImageBitmapLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\n\t\t\tif (typeof createImageBitmap === 'undefined') {\n\t\t\t\tconsole.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');\n\t\t\t}\n\n\t\t\tif (typeof fetch === 'undefined') {\n\t\t\t\tconsole.warn('THREE.ImageBitmapLoader: fetch() not supported.');\n\t\t\t}\n\n\t\t\tthis.options = {\n\t\t\t\tpremultiplyAlpha: 'none'\n\t\t\t};\n\t\t}\n\n\t\tsetOptions(options) {\n\t\t\tthis.options = options;\n\t\t\treturn this;\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tif (url === undefined) url = '';\n\t\t\tif (this.path !== undefined) url = this.path + url;\n\t\t\turl = this.manager.resolveURL(url);\n\t\t\tconst scope = this;\n\t\t\tconst cached = Cache.get(url);\n\n\t\t\tif (cached !== undefined) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (onLoad) onLoad(cached);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, 0);\n\t\t\t\treturn cached;\n\t\t\t}\n\n\t\t\tconst fetchOptions = {};\n\t\t\tfetchOptions.credentials = this.crossOrigin === 'anonymous' ? 'same-origin' : 'include';\n\t\t\tfetchOptions.headers = this.requestHeader;\n\t\t\tfetch(url, fetchOptions).then(function (res) {\n\t\t\t\treturn res.blob();\n\t\t\t}).then(function (blob) {\n\t\t\t\treturn createImageBitmap(blob, Object.assign(scope.options, {\n\t\t\t\t\tcolorSpaceConversion: 'none'\n\t\t\t\t}));\n\t\t\t}).then(function (imageBitmap) {\n\t\t\t\tCache.add(url, imageBitmap);\n\t\t\t\tif (onLoad) onLoad(imageBitmap);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t}).catch(function (e) {\n\t\t\t\tif (onError) onError(e);\n\t\t\t\tscope.manager.itemError(url);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t});\n\t\t\tscope.manager.itemStart(url);\n\t\t}\n\n\t}\n\n\tImageBitmapLoader.prototype.isImageBitmapLoader = true;\n\n\tlet _context;\n\n\tconst AudioContext = {\n\t\tgetContext: function () {\n\t\t\tif (_context === undefined) {\n\t\t\t\t_context = new (window.AudioContext || window.webkitAudioContext)();\n\t\t\t}\n\n\t\t\treturn _context;\n\t\t},\n\t\tsetContext: function (value) {\n\t\t\t_context = value;\n\t\t}\n\t};\n\n\tclass AudioLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tloader.load(url, function (buffer) {\n\t\t\t\ttry {\n\t\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\t\tconst bufferCopy = buffer.slice(0);\n\t\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\t\tcontext.decodeAudioData(bufferCopy, function (audioBuffer) {\n\t\t\t\t\t\tonLoad(audioBuffer);\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t}\n\n\tclass HemisphereLightProbe extends LightProbe {\n\t\tconstructor(skyColor, groundColor, intensity = 1) {\n\t\t\tsuper(undefined, intensity);\n\t\t\tconst color1 = new Color().set(skyColor);\n\t\t\tconst color2 = new Color().set(groundColor);\n\t\t\tconst sky = new Vector3(color1.r, color1.g, color1.b);\n\t\t\tconst ground = new Vector3(color2.r, color2.g, color2.b); // without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\n\t\t\tconst c0 = Math.sqrt(Math.PI);\n\t\t\tconst c1 = c0 * Math.sqrt(0.75);\n\t\t\tthis.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);\n\t\t\tthis.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);\n\t\t}\n\n\t}\n\n\tHemisphereLightProbe.prototype.isHemisphereLightProbe = true;\n\n\tclass AmbientLightProbe extends LightProbe {\n\t\tconstructor(color, intensity = 1) {\n\t\t\tsuper(undefined, intensity);\n\t\t\tconst color1 = new Color().set(color); // without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\n\t\t\tthis.sh.coefficients[0].set(color1.r, color1.g, color1.b).multiplyScalar(2 * Math.sqrt(Math.PI));\n\t\t}\n\n\t}\n\n\tAmbientLightProbe.prototype.isAmbientLightProbe = true;\n\n\tconst _eyeRight = /*@__PURE__*/new Matrix4();\n\n\tconst _eyeLeft = /*@__PURE__*/new Matrix4();\n\n\tconst _projectionMatrix = /*@__PURE__*/new Matrix4();\n\n\tclass StereoCamera {\n\t\tconstructor() {\n\t\t\tthis.type = 'StereoCamera';\n\t\t\tthis.aspect = 1;\n\t\t\tthis.eyeSep = 0.064;\n\t\t\tthis.cameraL = new PerspectiveCamera();\n\t\t\tthis.cameraL.layers.enable(1);\n\t\t\tthis.cameraL.matrixAutoUpdate = false;\n\t\t\tthis.cameraR = new PerspectiveCamera();\n\t\t\tthis.cameraR.layers.enable(2);\n\t\t\tthis.cameraR.matrixAutoUpdate = false;\n\t\t\tthis._cache = {\n\t\t\t\tfocus: null,\n\t\t\t\tfov: null,\n\t\t\t\taspect: null,\n\t\t\t\tnear: null,\n\t\t\t\tfar: null,\n\t\t\t\tzoom: null,\n\t\t\t\teyeSep: null\n\t\t\t};\n\t\t}\n\n\t\tupdate(camera) {\n\t\t\tconst cache = this._cache;\n\t\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov || cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near || cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\t\tif (needsUpdate) {\n\t\t\t\tcache.focus = camera.focus;\n\t\t\t\tcache.fov = camera.fov;\n\t\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\t\tcache.near = camera.near;\n\t\t\t\tcache.far = camera.far;\n\t\t\t\tcache.zoom = camera.zoom;\n\t\t\t\tcache.eyeSep = this.eyeSep; // Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\t_projectionMatrix.copy(camera.projectionMatrix);\n\n\t\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\t\tconst ymax = cache.near * Math.tan(DEG2RAD * cache.fov * 0.5) / cache.zoom;\n\t\t\t\tlet xmin, xmax; // translate xOffset\n\n\t\t\t\t_eyeLeft.elements[12] = -eyeSepHalf;\n\t\t\t\t_eyeRight.elements[12] = eyeSepHalf; // for left eye\n\n\t\t\t\txmin = -ymax * cache.aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\t\t\t\t_projectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n\t\t\t\t_projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n\t\t\t\tthis.cameraL.projectionMatrix.copy(_projectionMatrix); // for right eye\n\n\t\t\t\txmin = -ymax * cache.aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\t\t\t\t_projectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n\t\t\t\t_projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n\t\t\t\tthis.cameraR.projectionMatrix.copy(_projectionMatrix);\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);\n\t\t\tthis.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);\n\t\t}\n\n\t}\n\n\tclass Clock {\n\t\tconstructor(autoStart = true) {\n\t\t\tthis.autoStart = autoStart;\n\t\t\tthis.startTime = 0;\n\t\t\tthis.oldTime = 0;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = false;\n\t\t}\n\n\t\tstart() {\n\t\t\tthis.startTime = now();\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = true;\n\t\t}\n\n\t\tstop() {\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\t\t\tthis.autoStart = false;\n\t\t}\n\n\t\tgetElapsedTime() {\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\t\t}\n\n\t\tgetDelta() {\n\t\t\tlet diff = 0;\n\n\t\t\tif (this.autoStart && !this.running) {\n\t\t\t\tthis.start();\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (this.running) {\n\t\t\t\tconst newTime = now();\n\t\t\t\tdiff = (newTime - this.oldTime) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\t\t\t\tthis.elapsedTime += diff;\n\t\t\t}\n\n\t\t\treturn diff;\n\t\t}\n\n\t}\n\n\tfunction now() {\n\t\treturn (typeof performance === 'undefined' ? Date : performance).now(); // see #10732\n\t}\n\n\tconst _position$1 = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion$1 = /*@__PURE__*/new Quaternion();\n\n\tconst _scale$1 = /*@__PURE__*/new Vector3();\n\n\tconst _orientation$1 = /*@__PURE__*/new Vector3();\n\n\tclass AudioListener extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'AudioListener';\n\t\t\tthis.context = AudioContext.getContext();\n\t\t\tthis.gain = this.context.createGain();\n\t\t\tthis.gain.connect(this.context.destination);\n\t\t\tthis.filter = null;\n\t\t\tthis.timeDelta = 0; // private\n\n\t\t\tthis._clock = new Clock();\n\t\t}\n\n\t\tgetInput() {\n\t\t\treturn this.gain;\n\t\t}\n\n\t\tremoveFilter() {\n\t\t\tif (this.filter !== null) {\n\t\t\t\tthis.gain.disconnect(this.filter);\n\t\t\t\tthis.filter.disconnect(this.context.destination);\n\t\t\t\tthis.gain.connect(this.context.destination);\n\t\t\t\tthis.filter = null;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetFilter() {\n\t\t\treturn this.filter;\n\t\t}\n\n\t\tsetFilter(value) {\n\t\t\tif (this.filter !== null) {\n\t\t\t\tthis.gain.disconnect(this.filter);\n\t\t\t\tthis.filter.disconnect(this.context.destination);\n\t\t\t} else {\n\t\t\t\tthis.gain.disconnect(this.context.destination);\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect(this.filter);\n\t\t\tthis.filter.connect(this.context.destination);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetMasterVolume() {\n\t\t\treturn this.gain.gain.value;\n\t\t}\n\n\t\tsetMasterVolume(value) {\n\t\t\tthis.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n\t\t\treturn this;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t\tconst listener = this.context.listener;\n\t\t\tconst up = this.up;\n\t\t\tthis.timeDelta = this._clock.getDelta();\n\t\t\tthis.matrixWorld.decompose(_position$1, _quaternion$1, _scale$1);\n\n\t\t\t_orientation$1.set(0, 0, -1).applyQuaternion(_quaternion$1);\n\n\t\t\tif (listener.positionX) {\n\t\t\t\t// code path for Chrome (see #14393)\n\t\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\t\t\t\tlistener.positionX.linearRampToValueAtTime(_position$1.x, endTime);\n\t\t\t\tlistener.positionY.linearRampToValueAtTime(_position$1.y, endTime);\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime(_position$1.z, endTime);\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime(_orientation$1.x, endTime);\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime(_orientation$1.y, endTime);\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime(_orientation$1.z, endTime);\n\t\t\t\tlistener.upX.linearRampToValueAtTime(up.x, endTime);\n\t\t\t\tlistener.upY.linearRampToValueAtTime(up.y, endTime);\n\t\t\t\tlistener.upZ.linearRampToValueAtTime(up.z, endTime);\n\t\t\t} else {\n\t\t\t\tlistener.setPosition(_position$1.x, _position$1.y, _position$1.z);\n\t\t\t\tlistener.setOrientation(_orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tclass Audio extends Object3D {\n\t\tconstructor(listener) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Audio';\n\t\t\tthis.listener = listener;\n\t\t\tthis.context = listener.context;\n\t\t\tthis.gain = this.context.createGain();\n\t\t\tthis.gain.connect(listener.getInput());\n\t\t\tthis.autoplay = false;\n\t\t\tthis.buffer = null;\n\t\t\tthis.detune = 0;\n\t\t\tthis.loop = false;\n\t\t\tthis.loopStart = 0;\n\t\t\tthis.loopEnd = 0;\n\t\t\tthis.offset = 0;\n\t\t\tthis.duration = undefined;\n\t\t\tthis.playbackRate = 1;\n\t\t\tthis.isPlaying = false;\n\t\t\tthis.hasPlaybackControl = true;\n\t\t\tthis.source = null;\n\t\t\tthis.sourceType = 'empty';\n\t\t\tthis._startedAt = 0;\n\t\t\tthis._progress = 0;\n\t\t\tthis._connected = false;\n\t\t\tthis.filters = [];\n\t\t}\n\n\t\tgetOutput() {\n\t\t\treturn this.gain;\n\t\t}\n\n\t\tsetNodeSource(audioNode) {\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetMediaElementSource(mediaElement) {\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaNode';\n\t\t\tthis.source = this.context.createMediaElementSource(mediaElement);\n\t\t\tthis.connect();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetMediaStreamSource(mediaStream) {\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaStreamNode';\n\t\t\tthis.source = this.context.createMediaStreamSource(mediaStream);\n\t\t\tthis.connect();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetBuffer(audioBuffer) {\n\t\t\tthis.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\t\t\tif (this.autoplay) this.play();\n\t\t\treturn this;\n\t\t}\n\n\t\tplay(delay = 0) {\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tconsole.warn('THREE.Audio: Audio is already playing.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._startedAt = this.context.currentTime + delay;\n\t\t\tconst source = this.context.createBufferSource();\n\t\t\tsource.buffer = this.buffer;\n\t\t\tsource.loop = this.loop;\n\t\t\tsource.loopStart = this.loopStart;\n\t\t\tsource.loopEnd = this.loopEnd;\n\t\t\tsource.onended = this.onEnded.bind(this);\n\t\t\tsource.start(this._startedAt, this._progress + this.offset, this.duration);\n\t\t\tthis.isPlaying = true;\n\t\t\tthis.source = source;\n\t\t\tthis.setDetune(this.detune);\n\t\t\tthis.setPlaybackRate(this.playbackRate);\n\t\t\treturn this.connect();\n\t\t}\n\n\t\tpause() {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\t// update current progress\n\t\t\t\tthis._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate;\n\n\t\t\t\tif (this.loop === true) {\n\t\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\t\t\t\t\tthis._progress = this._progress % (this.duration || this.buffer.duration);\n\t\t\t\t}\n\n\t\t\t\tthis.source.stop();\n\t\t\t\tthis.source.onended = null;\n\t\t\t\tthis.isPlaying = false;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tstop() {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._progress = 0;\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.isPlaying = false;\n\t\t\treturn this;\n\t\t}\n\n\t\tconnect() {\n\t\t\tif (this.filters.length > 0) {\n\t\t\t\tthis.source.connect(this.filters[0]);\n\n\t\t\t\tfor (let i = 1, l = this.filters.length; i < l; i++) {\n\t\t\t\t\tthis.filters[i - 1].connect(this.filters[i]);\n\t\t\t\t}\n\n\t\t\t\tthis.filters[this.filters.length - 1].connect(this.getOutput());\n\t\t\t} else {\n\t\t\t\tthis.source.connect(this.getOutput());\n\t\t\t}\n\n\t\t\tthis._connected = true;\n\t\t\treturn this;\n\t\t}\n\n\t\tdisconnect() {\n\t\t\tif (this.filters.length > 0) {\n\t\t\t\tthis.source.disconnect(this.filters[0]);\n\n\t\t\t\tfor (let i = 1, l = this.filters.length; i < l; i++) {\n\t\t\t\t\tthis.filters[i - 1].disconnect(this.filters[i]);\n\t\t\t\t}\n\n\t\t\t\tthis.filters[this.filters.length - 1].disconnect(this.getOutput());\n\t\t\t} else {\n\t\t\t\tthis.source.disconnect(this.getOutput());\n\t\t\t}\n\n\t\t\tthis._connected = false;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetFilters() {\n\t\t\treturn this.filters;\n\t\t}\n\n\t\tsetFilters(value) {\n\t\t\tif (!value) value = [];\n\n\t\t\tif (this._connected === true) {\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value.slice();\n\t\t\t\tthis.connect();\n\t\t\t} else {\n\t\t\t\tthis.filters = value.slice();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetDetune(value) {\n\t\t\tthis.detune = value;\n\t\t\tif (this.source.detune === undefined) return; // only set detune when available\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tthis.source.detune.setTargetAtTime(this.detune, this.context.currentTime, 0.01);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetDetune() {\n\t\t\treturn this.detune;\n\t\t}\n\n\t\tgetFilter() {\n\t\t\treturn this.getFilters()[0];\n\t\t}\n\n\t\tsetFilter(filter) {\n\t\t\treturn this.setFilters(filter ? [filter] : []);\n\t\t}\n\n\t\tsetPlaybackRate(value) {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tthis.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, 0.01);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetPlaybackRate() {\n\t\t\treturn this.playbackRate;\n\t\t}\n\n\t\tonEnded() {\n\t\t\tthis.isPlaying = false;\n\t\t}\n\n\t\tgetLoop() {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn this.loop;\n\t\t}\n\n\t\tsetLoop(value) {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.loop = value;\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tthis.source.loop = this.loop;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetLoopStart(value) {\n\t\t\tthis.loopStart = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetLoopEnd(value) {\n\t\t\tthis.loopEnd = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetVolume() {\n\t\t\treturn this.gain.gain.value;\n\t\t}\n\n\t\tsetVolume(value) {\n\t\t\tthis.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tconst _position = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion = /*@__PURE__*/new Quaternion();\n\n\tconst _scale = /*@__PURE__*/new Vector3();\n\n\tconst _orientation = /*@__PURE__*/new Vector3();\n\n\tclass PositionalAudio extends Audio {\n\t\tconstructor(listener) {\n\t\t\tsuper(listener);\n\t\t\tthis.panner = this.context.createPanner();\n\t\t\tthis.panner.panningModel = 'HRTF';\n\t\t\tthis.panner.connect(this.gain);\n\t\t}\n\n\t\tgetOutput() {\n\t\t\treturn this.panner;\n\t\t}\n\n\t\tgetRefDistance() {\n\t\t\treturn this.panner.refDistance;\n\t\t}\n\n\t\tsetRefDistance(value) {\n\t\t\tthis.panner.refDistance = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetRolloffFactor() {\n\t\t\treturn this.panner.rolloffFactor;\n\t\t}\n\n\t\tsetRolloffFactor(value) {\n\t\t\tthis.panner.rolloffFactor = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetDistanceModel() {\n\t\t\treturn this.panner.distanceModel;\n\t\t}\n\n\t\tsetDistanceModel(value) {\n\t\t\tthis.panner.distanceModel = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetMaxDistance() {\n\t\t\treturn this.panner.maxDistance;\n\t\t}\n\n\t\tsetMaxDistance(value) {\n\t\t\tthis.panner.maxDistance = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetDirectionalCone(coneInnerAngle, coneOuterAngle, coneOuterGain) {\n\t\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\t\tthis.panner.coneOuterGain = coneOuterGain;\n\t\t\treturn this;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t\tif (this.hasPlaybackControl === true && this.isPlaying === false) return;\n\t\t\tthis.matrixWorld.decompose(_position, _quaternion, _scale);\n\n\t\t\t_orientation.set(0, 0, 1).applyQuaternion(_quaternion);\n\n\t\t\tconst panner = this.panner;\n\n\t\t\tif (panner.positionX) {\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\n\t\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\t\t\t\tpanner.positionX.linearRampToValueAtTime(_position.x, endTime);\n\t\t\t\tpanner.positionY.linearRampToValueAtTime(_position.y, endTime);\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime(_position.z, endTime);\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime(_orientation.x, endTime);\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime(_orientation.y, endTime);\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime(_orientation.z, endTime);\n\t\t\t} else {\n\t\t\t\tpanner.setPosition(_position.x, _position.y, _position.z);\n\t\t\t\tpanner.setOrientation(_orientation.x, _orientation.y, _orientation.z);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tclass AudioAnalyser {\n\t\tconstructor(audio, fftSize = 2048) {\n\t\t\tthis.analyser = audio.context.createAnalyser();\n\t\t\tthis.analyser.fftSize = fftSize;\n\t\t\tthis.data = new Uint8Array(this.analyser.frequencyBinCount);\n\t\t\taudio.getOutput().connect(this.analyser);\n\t\t}\n\n\t\tgetFrequencyData() {\n\t\t\tthis.analyser.getByteFrequencyData(this.data);\n\t\t\treturn this.data;\n\t\t}\n\n\t\tgetAverageFrequency() {\n\t\t\tlet value = 0;\n\t\t\tconst data = this.getFrequencyData();\n\n\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\tvalue += data[i];\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\t\t}\n\n\t}\n\n\tclass PropertyMixer {\n\t\tconstructor(binding, typeName, valueSize) {\n\t\t\tthis.binding = binding;\n\t\t\tthis.valueSize = valueSize;\n\t\t\tlet mixFunction, mixFunctionAdditive, setIdentity; // buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t\t//\n\t\t\t// interpolators can use .buffer as their .result\n\t\t\t// the data then goes to 'incoming'\n\t\t\t//\n\t\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t\t// the cumulative result and are compared to detect\n\t\t\t// changes\n\t\t\t//\n\t\t\t// 'orig' stores the original state of the property\n\t\t\t//\n\t\t\t// 'add' is used for additive cumulative results\n\t\t\t//\n\t\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t\t// to store intermediate quaternion multiplication results\n\n\t\t\tswitch (typeName) {\n\t\t\t\tcase 'quaternion':\n\t\t\t\t\tmixFunction = this._slerp;\n\t\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\t\t\t\t\tthis.buffer = new Float64Array(valueSize * 6);\n\t\t\t\t\tthis._workIndex = 5;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'string':\n\t\t\t\tcase 'bool':\n\t\t\t\t\tmixFunction = this._select; // Use the regular mix function and for additive on these types,\n\t\t\t\t\t// additive is not relevant for non-numeric types\n\n\t\t\t\t\tmixFunctionAdditive = this._select;\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\t\t\t\t\tthis.buffer = new Array(valueSize * 5);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tmixFunction = this._lerp;\n\t\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\t\t\t\t\tthis.buffer = new Float64Array(valueSize * 5);\n\t\t\t}\n\n\t\t\tthis._mixBufferRegion = mixFunction;\n\t\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\t\tthis._setIdentity = setIdentity;\n\t\t\tthis._origIndex = 3;\n\t\t\tthis._addIndex = 4;\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\t\t\tthis.useCount = 0;\n\t\t\tthis.referenceCount = 0;\n\t\t} // accumulate data in the 'incoming' region into 'accu<i>'\n\n\n\t\taccumulate(accuIndex, weight) {\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\t\t\tconst buffer = this.buffer,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset = accuIndex * stride + stride;\n\t\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\t\tif (currentWeight === 0) {\n\t\t\t\t// accuN := incoming * weight\n\t\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\t\tbuffer[offset + i] = buffer[i];\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\t\t\t} else {\n\t\t\t\t// accuN := accuN + incoming * weight\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tconst mix = weight / currentWeight;\n\n\t\t\t\tthis._mixBufferRegion(buffer, offset, 0, mix, stride);\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\t\t} // accumulate data in the 'incoming' region into 'add'\n\n\n\t\taccumulateAdditive(weight) {\n\t\t\tconst buffer = this.buffer,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset = stride * this._addIndex;\n\n\t\t\tif (this.cumulativeWeightAdditive === 0) {\n\t\t\t\t// add = identity\n\t\t\t\tthis._setIdentity();\n\t\t\t} // add := add + incoming * weight\n\n\n\t\t\tthis._mixBufferRegionAdditive(buffer, offset, 0, weight, stride);\n\n\t\t\tthis.cumulativeWeightAdditive += weight;\n\t\t} // apply the state of 'accu<i>' to the binding when accus differ\n\n\n\t\tapply(accuIndex) {\n\t\t\tconst stride = this.valueSize,\n\t\t\t\t\t\tbuffer = this.buffer,\n\t\t\t\t\t\toffset = accuIndex * stride + stride,\n\t\t\t\t\t\tweight = this.cumulativeWeight,\n\t\t\t\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\t\t\t\t\t\tbinding = this.binding;\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\t\tif (weight < 1) {\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\t\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\t\tthis._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\n\t\t\t}\n\n\t\t\tif (weightAdditive > 0) {\n\t\t\t\t// accuN := accuN + additive accuN\n\t\t\t\tthis._mixBufferRegionAdditive(buffer, offset, this._addIndex * stride, 1, stride);\n\t\t\t}\n\n\t\t\tfor (let i = stride, e = stride + stride; i !== e; ++i) {\n\t\t\t\tif (buffer[i] !== buffer[i + stride]) {\n\t\t\t\t\t// value has changed -> update scene graph\n\t\t\t\t\tbinding.setValue(buffer, offset);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} // remember the state of the bound property and copy it to both accus\n\n\n\t\tsaveOriginalState() {\n\t\t\tconst binding = this.binding;\n\t\t\tconst buffer = this.buffer,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toriginalValueOffset = stride * this._origIndex;\n\t\t\tbinding.getValue(buffer, originalValueOffset); // accu[0..1] := orig -- initially detect changes against the original\n\n\t\t\tfor (let i = stride, e = originalValueOffset; i !== e; ++i) {\n\t\t\t\tbuffer[i] = buffer[originalValueOffset + i % stride];\n\t\t\t} // Add to identity for additive\n\n\n\t\t\tthis._setIdentity();\n\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\t\t} // apply the state previously taken via 'saveOriginalState' to the binding\n\n\n\t\trestoreOriginalState() {\n\t\t\tconst originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue(this.buffer, originalValueOffset);\n\t\t}\n\n\t\t_setAdditiveIdentityNumeric() {\n\t\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tthis.buffer[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t_setAdditiveIdentityQuaternion() {\n\t\t\tthis._setAdditiveIdentityNumeric();\n\n\t\t\tthis.buffer[this._addIndex * this.valueSize + 3] = 1;\n\t\t}\n\n\t\t_setAdditiveIdentityOther() {\n\t\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\t\tfor (let i = 0; i < this.valueSize; i++) {\n\t\t\t\tthis.buffer[targetIndex + i] = this.buffer[startIndex + i];\n\t\t\t}\n\t\t} // mix functions\n\n\n\t\t_select(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tif (t >= 0.5) {\n\t\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\t\tbuffer[dstOffset + i] = buffer[srcOffset + i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_slerp(buffer, dstOffset, srcOffset, t) {\n\t\t\tQuaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\n\t\t}\n\n\t\t_slerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tconst workOffset = this._workIndex * stride; // Store result in intermediate buffer offset\n\n\t\t\tQuaternion.multiplyQuaternionsFlat(buffer, workOffset, buffer, dstOffset, buffer, srcOffset); // Slerp to the intermediate result\n\n\t\t\tQuaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t);\n\t\t}\n\n\t\t_lerp(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tconst s = 1 - t;\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tconst j = dstOffset + i;\n\t\t\t\tbuffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\n\t\t\t}\n\t\t}\n\n\t\t_lerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tconst j = dstOffset + i;\n\t\t\t\tbuffer[j] = buffer[j] + buffer[srcOffset + i] * t;\n\t\t\t}\n\t\t}\n\n\t}\n\n\t// Characters [].:/ are reserved for track binding syntax.\n\tconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\n\tconst _reservedRe = new RegExp('[' + _RESERVED_CHARS_RE + ']', 'g'); // Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t// instead, we exclude reserved characters and match everything else.\n\n\n\tconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\n\n\tconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace('\\\\.', '') + ']'; // Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t// be matched to parse the rest of the track name.\n\n\n\tconst _directoryRe = /((?:WC+[\\/:])*)/.source.replace('WC', _wordChar); // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\n\n\tconst _nodeRe = /(WCOD+)?/.source.replace('WCOD', _wordCharOrDot); // Object on target node, and accessor. May not contain reserved\n\t// characters. Accessor may contain any character except closing bracket.\n\n\n\tconst _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC', _wordChar); // Property and accessor. May not contain reserved characters. Accessor may\n\t// contain any non-bracket characters.\n\n\n\tconst _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC', _wordChar);\n\n\tconst _trackRe = new RegExp('' + '^' + _directoryRe + _nodeRe + _objectRe + _propertyRe + '$');\n\n\tconst _supportedObjectNames = ['material', 'materials', 'bones'];\n\n\tclass Composite {\n\t\tconstructor(targetGroup, path, optionalParsedPath) {\n\t\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName(path);\n\t\t\tthis._targetGroup = targetGroup;\n\t\t\tthis._bindings = targetGroup.subscribe_(path, parsedPath);\n\t\t}\n\n\t\tgetValue(array, offset) {\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t\tbinding = this._bindings[firstValidIndex]; // and only call .getValue on the first\n\n\t\t\tif (binding !== undefined) binding.getValue(array, offset);\n\t\t}\n\n\t\tsetValue(array, offset) {\n\t\t\tconst bindings = this._bindings;\n\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n\t\t\t\tbindings[i].setValue(array, offset);\n\t\t\t}\n\t\t}\n\n\t\tbind() {\n\t\t\tconst bindings = this._bindings;\n\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n\t\t\t\tbindings[i].bind();\n\t\t\t}\n\t\t}\n\n\t\tunbind() {\n\t\t\tconst bindings = this._bindings;\n\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n\t\t\t\tbindings[i].unbind();\n\t\t\t}\n\t\t}\n\n\t} // Note: This class uses a State pattern on a per-method basis:\n\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t// prototype version of these methods with one that represents\n\t// the bound state. When the property is not found, the methods\n\t// become no-ops.\n\n\n\tclass PropertyBinding {\n\t\tconstructor(rootNode, path, parsedPath) {\n\t\t\tthis.path = path;\n\t\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName(path);\n\t\t\tthis.node = PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\n\t\t\tthis.rootNode = rootNode; // initial state of these methods that calls 'bind'\n\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\t\t}\n\n\t\tstatic create(root, path, parsedPath) {\n\t\t\tif (!(root && root.isAnimationObjectGroup)) {\n\t\t\t\treturn new PropertyBinding(root, path, parsedPath);\n\t\t\t} else {\n\t\t\t\treturn new PropertyBinding.Composite(root, path, parsedPath);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Replaces spaces with underscores and removes unsupported characters from\n\t\t * node names, to ensure compatibility with parseTrackName().\n\t\t *\n\t\t * @param {string} name Node name to be sanitized.\n\t\t * @return {string}\n\t\t */\n\n\n\t\tstatic sanitizeNodeName(name) {\n\t\t\treturn name.replace(/\\s/g, '_').replace(_reservedRe, '');\n\t\t}\n\n\t\tstatic parseTrackName(trackName) {\n\t\t\tconst matches = _trackRe.exec(trackName);\n\n\t\t\tif (!matches) {\n\t\t\t\tthrow new Error('PropertyBinding: Cannot parse trackName: ' + trackName);\n\t\t\t}\n\n\t\t\tconst results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[2],\n\t\t\t\tobjectName: matches[3],\n\t\t\t\tobjectIndex: matches[4],\n\t\t\t\tpropertyName: matches[5],\n\t\t\t\t// required\n\t\t\t\tpropertyIndex: matches[6]\n\t\t\t};\n\t\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf('.');\n\n\t\t\tif (lastDot !== undefined && lastDot !== -1) {\n\t\t\t\tconst objectName = results.nodeName.substring(lastDot + 1); // Object names must be checked against an allowlist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\n\t\t\t\tif (_supportedObjectNames.indexOf(objectName) !== -1) {\n\t\t\t\t\tresults.nodeName = results.nodeName.substring(0, lastDot);\n\t\t\t\t\tresults.objectName = objectName;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (results.propertyName === null || results.propertyName.length === 0) {\n\t\t\t\tthrow new Error('PropertyBinding: can not parse propertyName from trackName: ' + trackName);\n\t\t\t}\n\n\t\t\treturn results;\n\t\t}\n\n\t\tstatic findNode(root, nodeName) {\n\t\t\tif (!nodeName || nodeName === '' || nodeName === '.' || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\n\t\t\t\treturn root;\n\t\t\t} // search into skeleton bones.\n\n\n\t\t\tif (root.skeleton) {\n\t\t\t\tconst bone = root.skeleton.getBoneByName(nodeName);\n\n\t\t\t\tif (bone !== undefined) {\n\t\t\t\t\treturn bone;\n\t\t\t\t}\n\t\t\t} // search into node subtree.\n\n\n\t\t\tif (root.children) {\n\t\t\t\tconst searchNodeSubtree = function (children) {\n\t\t\t\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\t\t\t\tconst childNode = children[i];\n\n\t\t\t\t\t\tif (childNode.name === nodeName || childNode.uuid === nodeName) {\n\t\t\t\t\t\t\treturn childNode;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst result = searchNodeSubtree(childNode.children);\n\t\t\t\t\t\tif (result) return result;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t};\n\n\t\t\t\tconst subTreeNode = searchNodeSubtree(root.children);\n\n\t\t\t\tif (subTreeNode) {\n\t\t\t\t\treturn subTreeNode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t} // these are used to \"bind\" a nonexistent property\n\n\n\t\t_getValue_unavailable() {}\n\n\t\t_setValue_unavailable() {} // Getters\n\n\n\t\t_getValue_direct(buffer, offset) {\n\t\t\tbuffer[offset] = this.targetObject[this.propertyName];\n\t\t}\n\n\t\t_getValue_array(buffer, offset) {\n\t\t\tconst source = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = source.length; i !== n; ++i) {\n\t\t\t\tbuffer[offset++] = source[i];\n\t\t\t}\n\t\t}\n\n\t\t_getValue_arrayElement(buffer, offset) {\n\t\t\tbuffer[offset] = this.resolvedProperty[this.propertyIndex];\n\t\t}\n\n\t\t_getValue_toArray(buffer, offset) {\n\t\t\tthis.resolvedProperty.toArray(buffer, offset);\n\t\t} // Direct\n\n\n\t\t_setValue_direct(buffer, offset) {\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\n\t\t}\n\n\t\t_setValue_direct_setNeedsUpdate(buffer, offset) {\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t} // EntireArray\n\n\n\t\t_setValue_array(buffer, offset) {\n\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\n\t\t\t\tdest[i] = buffer[offset++];\n\t\t\t}\n\t\t}\n\n\t\t_setValue_array_setNeedsUpdate(buffer, offset) {\n\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\n\t\t\t\tdest[i] = buffer[offset++];\n\t\t\t}\n\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\n\t\t\t\tdest[i] = buffer[offset++];\n\t\t\t}\n\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t} // ArrayElement\n\n\n\t\t_setValue_arrayElement(buffer, offset) {\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\n\t\t}\n\n\t\t_setValue_arrayElement_setNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t} // HasToFromArray\n\n\n\t\t_setValue_fromArray(buffer, offset) {\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\n\t\t}\n\n\t\t_setValue_fromArray_setNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t}\n\n\t\t_getValue_unbound(targetArray, offset) {\n\t\t\tthis.bind();\n\t\t\tthis.getValue(targetArray, offset);\n\t\t}\n\n\t\t_setValue_unbound(sourceArray, offset) {\n\t\t\tthis.bind();\n\t\t\tthis.setValue(sourceArray, offset);\n\t\t} // create getter / setter pair for a property in the scene graph\n\n\n\t\tbind() {\n\t\t\tlet targetObject = this.node;\n\t\t\tconst parsedPath = this.parsedPath;\n\t\t\tconst objectName = parsedPath.objectName;\n\t\t\tconst propertyName = parsedPath.propertyName;\n\t\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif (!targetObject) {\n\t\t\t\ttargetObject = PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) || this.rootNode;\n\t\t\t\tthis.node = targetObject;\n\t\t\t} // set fail state so we can just 'return' on error\n\n\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable; // ensure there is a value node\n\n\t\t\tif (!targetObject) {\n\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (objectName) {\n\t\t\t\tlet objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials....\n\n\t\t\t\tswitch (objectName) {\n\t\t\t\t\tcase 'materials':\n\t\t\t\t\t\tif (!targetObject.material) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!targetObject.material.materials) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\t\t\t\t\t\tif (!targetObject.skeleton) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} // potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices.\n\n\t\t\t\t\t\tfor (let i = 0; i < targetObject.length; i++) {\n\t\t\t\t\t\t\tif (targetObject[i].name === objectIndex) {\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (targetObject[objectName] === undefined) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[objectName];\n\t\t\t\t}\n\n\t\t\t\tif (objectIndex !== undefined) {\n\t\t\t\t\tif (targetObject[objectIndex] === undefined) {\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[objectIndex];\n\t\t\t\t}\n\t\t\t} // resolve property\n\n\n\t\t\tconst nodeProperty = targetObject[propertyName];\n\n\t\t\tif (nodeProperty === undefined) {\n\t\t\t\tconst nodeName = parsedPath.nodeName;\n\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to update property for track: ' + nodeName + '.' + propertyName + ' but it wasn\\'t found.', targetObject);\n\t\t\t\treturn;\n\t\t\t} // determine versioning scheme\n\n\n\t\t\tlet versioning = this.Versioning.None;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t\tif (targetObject.needsUpdate !== undefined) {\n\t\t\t\t// material\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\t} else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\n\t\t\t\t// node transform\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\t} // determine how the property gets bound\n\n\n\t\t\tlet bindingType = this.BindingType.Direct;\n\n\t\t\tif (propertyIndex !== undefined) {\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\t\t\t\tif (propertyName === 'morphTargetInfluences') {\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif (!targetObject.geometry) {\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (targetObject.geometry.isBufferGeometry) {\n\t\t\t\t\t\tif (!targetObject.geometry.morphAttributes) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (targetObject.morphTargetDictionary[propertyIndex] !== undefined) {\n\t\t\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[propertyIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\t\t\t} else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t} else if (Array.isArray(nodeProperty)) {\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t} else {\n\t\t\t\tthis.propertyName = propertyName;\n\t\t\t} // select getter / setter\n\n\n\t\t\tthis.getValue = this.GetterByBindingType[bindingType];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\n\t\t}\n\n\t\tunbind() {\n\t\t\tthis.node = null; // back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\t\t}\n\n\t}\n\n\tPropertyBinding.Composite = Composite;\n\tPropertyBinding.prototype.BindingType = {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t};\n\tPropertyBinding.prototype.Versioning = {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t};\n\tPropertyBinding.prototype.GetterByBindingType = [PropertyBinding.prototype._getValue_direct, PropertyBinding.prototype._getValue_array, PropertyBinding.prototype._getValue_arrayElement, PropertyBinding.prototype._getValue_toArray];\n\tPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [[// Direct\n\tPropertyBinding.prototype._setValue_direct, PropertyBinding.prototype._setValue_direct_setNeedsUpdate, PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate], [// EntireArray\n\tPropertyBinding.prototype._setValue_array, PropertyBinding.prototype._setValue_array_setNeedsUpdate, PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate], [// ArrayElement\n\tPropertyBinding.prototype._setValue_arrayElement, PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate, PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate], [// HasToFromArray\n\tPropertyBinding.prototype._setValue_fromArray, PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate, PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t *\t- Add objects you would otherwise pass as 'root' to the\n\t *\t\tconstructor or the .clipAction method of AnimationMixer.\n\t *\n\t *\t- Instead pass this object as 'root'.\n\t *\n\t *\t- You can also add and remove objects later when the mixer\n\t *\t\tis running.\n\t *\n\t * Note:\n\t *\n\t *\t\tObjects of this class appear as one object to the mixer,\n\t *\t\tso cache control of the individual objects must be done\n\t *\t\ton the group.\n\t *\n\t * Limitation:\n\t *\n\t *\t- The animated properties must be compatible among the\n\t *\t\tall objects in the group.\n\t *\n\t *\t- A single property can either be controlled through a\n\t *\t\ttarget group or directly, but not both.\n\t */\n\n\tclass AnimationObjectGroup {\n\t\tconstructor() {\n\t\t\tthis.uuid = generateUUID(); // cached objects followed by the active ones\n\n\t\t\tthis._objects = Array.prototype.slice.call(arguments);\n\t\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t\t// note: read by PropertyBinding.Composite\n\n\t\t\tconst indices = {};\n\t\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tindices[arguments[i].uuid] = i;\n\t\t\t}\n\n\t\t\tthis._paths = []; // inside: string\n\n\t\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\n\t\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\n\t\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\t\tconst scope = this;\n\t\t\tthis.stats = {\n\t\t\t\tobjects: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._objects.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tget bindingsPerObject() {\n\t\t\t\t\treturn scope._bindings.length;\n\t\t\t\t}\n\n\t\t\t};\n\t\t}\n\n\t\tadd() {\n\t\t\tconst objects = this._objects,\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\t\tpaths = this._paths,\n\t\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\tnBindings = bindings.length;\n\t\t\tlet knownObject = undefined,\n\t\t\t\t\tnObjects = objects.length,\n\t\t\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tconst object = arguments[i],\n\t\t\t\t\t\t\tuuid = object.uuid;\n\t\t\t\tlet index = indicesByUUID[uuid];\n\n\t\t\t\tif (index === undefined) {\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\t\t\t\t\tindex = nObjects++;\n\t\t\t\t\tindicesByUUID[uuid] = index;\n\t\t\t\t\tobjects.push(object); // accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\tbindings[j].push(new PropertyBinding(object, paths[j], parsedPaths[j]));\n\t\t\t\t\t}\n\t\t\t\t} else if (index < nCachedObjects) {\n\t\t\t\t\tknownObject = objects[index]; // move existing object to the ACTIVE region\n\n\t\t\t\t\tconst firstActiveIndex = --nCachedObjects,\n\t\t\t\t\t\t\t\tlastCachedObject = objects[firstActiveIndex];\n\t\t\t\t\tindicesByUUID[lastCachedObject.uuid] = index;\n\t\t\t\t\tobjects[index] = lastCachedObject;\n\t\t\t\t\tindicesByUUID[uuid] = firstActiveIndex;\n\t\t\t\t\tobjects[firstActiveIndex] = object; // accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\tconst bindingsForPath = bindings[j],\n\t\t\t\t\t\t\t\t\tlastCached = bindingsForPath[firstActiveIndex];\n\t\t\t\t\t\tlet binding = bindingsForPath[index];\n\t\t\t\t\t\tbindingsForPath[index] = lastCached;\n\n\t\t\t\t\t\tif (binding === undefined) {\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\t\t\t\t\t\t\tbinding = new PropertyBinding(object, paths[j], parsedPaths[j]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[firstActiveIndex] = binding;\n\t\t\t\t\t}\n\t\t\t\t} else if (objects[index] !== knownObject) {\n\t\t\t\t\tconsole.error('THREE.AnimationObjectGroup: Different objects with the same UUID ' + 'detected. Clean the caches or recreate your infrastructure when reloading scenes.');\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\t}\n\n\t\tremove() {\n\t\t\tconst objects = this._objects,\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\tnBindings = bindings.length;\n\t\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tconst object = arguments[i],\n\t\t\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\t\t\tindex = indicesByUUID[uuid];\n\n\t\t\t\tif (index !== undefined && index >= nCachedObjects) {\n\t\t\t\t\t// move existing object into the CACHED region\n\t\t\t\t\tconst lastCachedIndex = nCachedObjects++,\n\t\t\t\t\t\t\t\tfirstActiveObject = objects[lastCachedIndex];\n\t\t\t\t\tindicesByUUID[firstActiveObject.uuid] = index;\n\t\t\t\t\tobjects[index] = firstActiveObject;\n\t\t\t\t\tindicesByUUID[uuid] = lastCachedIndex;\n\t\t\t\t\tobjects[lastCachedIndex] = object; // accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\tconst bindingsForPath = bindings[j],\n\t\t\t\t\t\t\t\t\tfirstActive = bindingsForPath[lastCachedIndex],\n\t\t\t\t\t\t\t\t\tbinding = bindingsForPath[index];\n\t\t\t\t\t\tbindingsForPath[index] = firstActive;\n\t\t\t\t\t\tbindingsForPath[lastCachedIndex] = binding;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // for arguments\n\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\t} // remove & forget\n\n\n\t\tuncache() {\n\t\t\tconst objects = this._objects,\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\tnBindings = bindings.length;\n\t\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\t\t\tnObjects = objects.length;\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tconst object = arguments[i],\n\t\t\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\t\t\tindex = indicesByUUID[uuid];\n\n\t\t\t\tif (index !== undefined) {\n\t\t\t\t\tdelete indicesByUUID[uuid];\n\n\t\t\t\t\tif (index < nCachedObjects) {\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\t\t\t\t\t\tconst firstActiveIndex = --nCachedObjects,\n\t\t\t\t\t\t\t\t\tlastCachedObject = objects[firstActiveIndex],\n\t\t\t\t\t\t\t\t\tlastIndex = --nObjects,\n\t\t\t\t\t\t\t\t\tlastObject = objects[lastIndex]; // last cached object takes this object's place\n\n\t\t\t\t\t\tindicesByUUID[lastCachedObject.uuid] = index;\n\t\t\t\t\t\tobjects[index] = lastCachedObject; // last object goes to the activated slot and pop\n\n\t\t\t\t\t\tindicesByUUID[lastObject.uuid] = firstActiveIndex;\n\t\t\t\t\t\tobjects[firstActiveIndex] = lastObject;\n\t\t\t\t\t\tobjects.pop(); // accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\t\tconst bindingsForPath = bindings[j],\n\t\t\t\t\t\t\t\t\t\tlastCached = bindingsForPath[firstActiveIndex],\n\t\t\t\t\t\t\t\t\t\tlast = bindingsForPath[lastIndex];\n\t\t\t\t\t\t\tbindingsForPath[index] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[firstActiveIndex] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\t\t\t\t\t\tconst lastIndex = --nObjects,\n\t\t\t\t\t\t\t\t\tlastObject = objects[lastIndex];\n\n\t\t\t\t\t\tif (lastIndex > 0) {\n\t\t\t\t\t\t\tindicesByUUID[lastObject.uuid] = index;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tobjects[index] = lastObject;\n\t\t\t\t\t\tobjects.pop(); // accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\t\tconst bindingsForPath = bindings[j];\n\t\t\t\t\t\t\tbindingsForPath[index] = bindingsForPath[lastIndex];\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\t} // Internal interface used by befriended PropertyBinding.Composite:\n\n\n\t\tsubscribe_(path, parsedPath) {\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\t\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\t\tlet index = indicesByPath[path];\n\t\t\tconst bindings = this._bindings;\n\t\t\tif (index !== undefined) return bindings[index];\n\t\t\tconst paths = this._paths,\n\t\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\t\tobjects = this._objects,\n\t\t\t\t\t\tnObjects = objects.length,\n\t\t\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\t\t\tbindingsForPath = new Array(nObjects);\n\t\t\tindex = bindings.length;\n\t\t\tindicesByPath[path] = index;\n\t\t\tpaths.push(path);\n\t\t\tparsedPaths.push(parsedPath);\n\t\t\tbindings.push(bindingsForPath);\n\n\t\t\tfor (let i = nCachedObjects, n = objects.length; i !== n; ++i) {\n\t\t\t\tconst object = objects[i];\n\t\t\t\tbindingsForPath[i] = new PropertyBinding(object, path, parsedPath);\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\t\t}\n\n\t\tunsubscribe_(path) {\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\t\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\t\t\tindex = indicesByPath[path];\n\n\t\t\tif (index !== undefined) {\n\t\t\t\tconst paths = this._paths,\n\t\t\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\t\t\tlastBindings = bindings[lastBindingsIndex],\n\t\t\t\t\t\t\tlastBindingsPath = path[lastBindingsIndex];\n\t\t\t\tindicesByPath[lastBindingsPath] = index;\n\t\t\t\tbindings[index] = lastBindings;\n\t\t\t\tbindings.pop();\n\t\t\t\tparsedPaths[index] = parsedPaths[lastBindingsIndex];\n\t\t\t\tparsedPaths.pop();\n\t\t\t\tpaths[index] = paths[lastBindingsIndex];\n\t\t\t\tpaths.pop();\n\t\t\t}\n\t\t}\n\n\t}\n\n\tAnimationObjectGroup.prototype.isAnimationObjectGroup = true;\n\n\tclass AnimationAction {\n\t\tconstructor(mixer, clip, localRoot = null, blendMode = clip.blendMode) {\n\t\t\tthis._mixer = mixer;\n\t\t\tthis._clip = clip;\n\t\t\tthis._localRoot = localRoot;\n\t\t\tthis.blendMode = blendMode;\n\t\t\tconst tracks = clip.tracks,\n\t\t\t\t\t\tnTracks = tracks.length,\n\t\t\t\t\t\tinterpolants = new Array(nTracks);\n\t\t\tconst interpolantSettings = {\n\t\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t\t};\n\n\t\t\tfor (let i = 0; i !== nTracks; ++i) {\n\t\t\t\tconst interpolant = tracks[i].createInterpolant(null);\n\t\t\t\tinterpolants[i] = interpolant;\n\t\t\t\tinterpolant.settings = interpolantSettings;\n\t\t\t}\n\n\t\t\tthis._interpolantSettings = interpolantSettings;\n\t\t\tthis._interpolants = interpolants; // bound by the mixer\n\t\t\t// inside: PropertyMixer (managed by the mixer)\n\n\t\t\tthis._propertyBindings = new Array(nTracks);\n\t\t\tthis._cacheIndex = null; // for the memory manager\n\n\t\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis.loop = LoopRepeat;\n\t\t\tthis._loopCount = -1; // global mixer time when the action is to be started\n\t\t\t// it's set back to 'null' upon start of the action\n\n\t\t\tthis._startTime = null; // scaled local time of the action\n\t\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\n\t\t\tthis.time = 0;\n\t\t\tthis.timeScale = 1;\n\t\t\tthis._effectiveTimeScale = 1;\n\t\t\tthis.weight = 1;\n\t\t\tthis._effectiveWeight = 1;\n\t\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\t\tthis.paused = false; // true -> zero effective time scale\n\n\t\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\t\tthis.clampWhenFinished = false; // keep feeding the last frame?\n\n\t\t\tthis.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\n\n\t\t\tthis.zeroSlopeAtEnd = true; // clips for start, loop and end\n\t\t} // State & Scheduling\n\n\n\t\tplay() {\n\t\t\tthis._mixer._activateAction(this);\n\n\t\t\treturn this;\n\t\t}\n\n\t\tstop() {\n\t\t\tthis._mixer._deactivateAction(this);\n\n\t\t\treturn this.reset();\n\t\t}\n\n\t\treset() {\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\t\t\tthis.time = 0; // restart clip\n\n\t\t\tthis._loopCount = -1; // forget previous loops\n\n\t\t\tthis._startTime = null; // forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\t\t}\n\n\t\tisRunning() {\n\t\t\treturn this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);\n\t\t} // return true when play has been called\n\n\n\t\tisScheduled() {\n\t\t\treturn this._mixer._isActiveAction(this);\n\t\t}\n\n\t\tstartAt(time) {\n\t\t\tthis._startTime = time;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetLoop(mode, repetitions) {\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\t\t\treturn this;\n\t\t} // Weight\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\n\n\t\tsetEffectiveWeight(weight) {\n\t\t\tthis.weight = weight; // note: same logic as when updated at runtime\n\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\t\t\treturn this.stopFading();\n\t\t} // return the weight considering fading and .enabled\n\n\n\t\tgetEffectiveWeight() {\n\t\t\treturn this._effectiveWeight;\n\t\t}\n\n\t\tfadeIn(duration) {\n\t\t\treturn this._scheduleFading(duration, 0, 1);\n\t\t}\n\n\t\tfadeOut(duration) {\n\t\t\treturn this._scheduleFading(duration, 1, 0);\n\t\t}\n\n\t\tcrossFadeFrom(fadeOutAction, duration, warp) {\n\t\t\tfadeOutAction.fadeOut(duration);\n\t\t\tthis.fadeIn(duration);\n\n\t\t\tif (warp) {\n\t\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\t\t\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\t\t\t\tfadeOutAction.warp(1.0, startEndRatio, duration);\n\t\t\t\tthis.warp(endStartRatio, 1.0, duration);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcrossFadeTo(fadeInAction, duration, warp) {\n\t\t\treturn fadeInAction.crossFadeFrom(this, duration, warp);\n\t\t}\n\n\t\tstopFading() {\n\t\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\t\tif (weightInterpolant !== null) {\n\t\t\t\tthis._weightInterpolant = null;\n\n\t\t\t\tthis._mixer._takeBackControlInterpolant(weightInterpolant);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // Time Scale Control\n\t\t// set the time scale stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\n\n\t\tsetEffectiveTimeScale(timeScale) {\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\t\t\treturn this.stopWarping();\n\t\t} // return the time scale considering warping and .paused\n\n\n\t\tgetEffectiveTimeScale() {\n\t\t\treturn this._effectiveTimeScale;\n\t\t}\n\n\t\tsetDuration(duration) {\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\t\t\treturn this.stopWarping();\n\t\t}\n\n\t\tsyncWith(action) {\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\t\t\treturn this.stopWarping();\n\t\t}\n\n\t\thalt(duration) {\n\t\t\treturn this.warp(this._effectiveTimeScale, 0, duration);\n\t\t}\n\n\t\twarp(startTimeScale, endTimeScale, duration) {\n\t\t\tconst mixer = this._mixer,\n\t\t\t\t\t\tnow = mixer.time,\n\t\t\t\t\t\ttimeScale = this.timeScale;\n\t\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\t\tif (interpolant === null) {\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\t\t\t}\n\n\t\t\tconst times = interpolant.parameterPositions,\n\t\t\t\t\t\tvalues = interpolant.sampleValues;\n\t\t\ttimes[0] = now;\n\t\t\ttimes[1] = now + duration;\n\t\t\tvalues[0] = startTimeScale / timeScale;\n\t\t\tvalues[1] = endTimeScale / timeScale;\n\t\t\treturn this;\n\t\t}\n\n\t\tstopWarping() {\n\t\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif (timeScaleInterpolant !== null) {\n\t\t\t\tthis._timeScaleInterpolant = null;\n\n\t\t\t\tthis._mixer._takeBackControlInterpolant(timeScaleInterpolant);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // Object Accessors\n\n\n\t\tgetMixer() {\n\t\t\treturn this._mixer;\n\t\t}\n\n\t\tgetClip() {\n\t\t\treturn this._clip;\n\t\t}\n\n\t\tgetRoot() {\n\t\t\treturn this._localRoot || this._mixer._root;\n\t\t} // Interna\n\n\n\t\t_update(time, deltaTime, timeDirection, accuIndex) {\n\t\t\t// called by the mixer\n\t\t\tif (!this.enabled) {\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\t\t\t\tthis._updateWeight(time);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst startTime = this._startTime;\n\n\t\t\tif (startTime !== null) {\n\t\t\t\t// check for scheduled start of action\n\t\t\t\tconst timeRunning = (time - startTime) * timeDirection;\n\n\t\t\t\tif (timeRunning < 0 || timeDirection === 0) {\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\t\t\t\t} // start\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\t\t\t} // apply time scale and advance time\n\n\n\t\t\tdeltaTime *= this._updateTimeScale(time);\n\n\t\t\tconst clipTime = this._updateTime(deltaTime); // note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\n\t\t\tconst weight = this._updateWeight(time);\n\n\t\t\tif (weight > 0) {\n\t\t\t\tconst interpolants = this._interpolants;\n\t\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\t\tswitch (this.blendMode) {\n\t\t\t\t\tcase AdditiveAnimationBlendMode:\n\t\t\t\t\t\tfor (let j = 0, m = interpolants.length; j !== m; ++j) {\n\t\t\t\t\t\t\tinterpolants[j].evaluate(clipTime);\n\t\t\t\t\t\t\tpropertyMixers[j].accumulateAdditive(weight);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tfor (let j = 0, m = interpolants.length; j !== m; ++j) {\n\t\t\t\t\t\t\tinterpolants[j].evaluate(clipTime);\n\t\t\t\t\t\t\tpropertyMixers[j].accumulate(accuIndex, weight);\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_updateWeight(time) {\n\t\t\tlet weight = 0;\n\n\t\t\tif (this.enabled) {\n\t\t\t\tweight = this.weight;\n\t\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\t\tif (interpolant !== null) {\n\t\t\t\t\tconst interpolantValue = interpolant.evaluate(time)[0];\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif (time > interpolant.parameterPositions[1]) {\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif (interpolantValue === 0) {\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\t\t}\n\n\t\t_updateTimeScale(time) {\n\t\t\tlet timeScale = 0;\n\n\t\t\tif (!this.paused) {\n\t\t\t\ttimeScale = this.timeScale;\n\t\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif (interpolant !== null) {\n\t\t\t\t\tconst interpolantValue = interpolant.evaluate(time)[0];\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif (time > interpolant.parameterPositions[1]) {\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif (timeScale === 0) {\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\t\t}\n\n\t\t_updateTime(deltaTime) {\n\t\t\tconst duration = this._clip.duration;\n\t\t\tconst loop = this.loop;\n\t\t\tlet time = this.time + deltaTime;\n\t\t\tlet loopCount = this._loopCount;\n\t\t\tconst pingPong = loop === LoopPingPong;\n\n\t\t\tif (deltaTime === 0) {\n\t\t\t\tif (loopCount === -1) return time;\n\t\t\t\treturn pingPong && (loopCount & 1) === 1 ? duration - time : time;\n\t\t\t}\n\n\t\t\tif (loop === LoopOnce) {\n\t\t\t\tif (loopCount === -1) {\n\t\t\t\t\t// just started\n\t\t\t\t\tthis._loopCount = 0;\n\n\t\t\t\t\tthis._setEndings(true, true, false);\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\t\t\t\t\tif (time >= duration) {\n\t\t\t\t\t\ttime = duration;\n\t\t\t\t\t} else if (time < 0) {\n\t\t\t\t\t\ttime = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.time = time;\n\t\t\t\t\t\tbreak handle_stop;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent({\n\t\t\t\t\t\ttype: 'finished',\n\t\t\t\t\t\taction: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// repetitive Repeat or PingPong\n\t\t\t\tif (loopCount === -1) {\n\t\t\t\t\t// just started\n\t\t\t\t\tif (deltaTime >= 0) {\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings(true, this.repetitions === 0, pingPong);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\t\t\t\t\t\tthis._setEndings(this.repetitions === 0, true, pingPong);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (time >= duration || time < 0) {\n\t\t\t\t\t// wrap around\n\t\t\t\t\tconst loopDelta = Math.floor(time / duration); // signed\n\n\t\t\t\t\ttime -= duration * loopDelta;\n\t\t\t\t\tloopCount += Math.abs(loopDelta);\n\t\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif (pending <= 0) {\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\t\t\t\t\t\tif (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'finished',\n\t\t\t\t\t\t\taction: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// keep running\n\t\t\t\t\t\tif (pending === 1) {\n\t\t\t\t\t\t\t// entering the last round\n\t\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\n\t\t\t\t\t\t\tthis._setEndings(atStart, !atStart, pingPong);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._setEndings(false, false, pingPong);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'loop',\n\t\t\t\t\t\t\taction: this,\n\t\t\t\t\t\t\tloopDelta: loopDelta\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.time = time;\n\t\t\t\t}\n\n\t\t\t\tif (pingPong && (loopCount & 1) === 1) {\n\t\t\t\t\t// invert time for the \"pong round\"\n\t\t\t\t\treturn duration - time;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn time;\n\t\t}\n\n\t\t_setEndings(atStart, atEnd, pingPong) {\n\t\t\tconst settings = this._interpolantSettings;\n\n\t\t\tif (pingPong) {\n\t\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\t\t\t} else {\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\t\t\t\tif (atStart) {\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\t\t\t\t} else {\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\t\t\t\t}\n\n\t\t\t\tif (atEnd) {\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\t\t\t\t} else {\n\t\t\t\t\tsettings.endingEnd = WrapAroundEnding;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_scheduleFading(duration, weightNow, weightThen) {\n\t\t\tconst mixer = this._mixer,\n\t\t\t\t\t\tnow = mixer.time;\n\t\t\tlet interpolant = this._weightInterpolant;\n\n\t\t\tif (interpolant === null) {\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._weightInterpolant = interpolant;\n\t\t\t}\n\n\t\t\tconst times = interpolant.parameterPositions,\n\t\t\t\t\t\tvalues = interpolant.sampleValues;\n\t\t\ttimes[0] = now;\n\t\t\tvalues[0] = weightNow;\n\t\t\ttimes[1] = now + duration;\n\t\t\tvalues[1] = weightThen;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass AnimationMixer extends EventDispatcher {\n\t\tconstructor(root) {\n\t\t\tsuper();\n\t\t\tthis._root = root;\n\n\t\t\tthis._initMemoryManager();\n\n\t\t\tthis._accuIndex = 0;\n\t\t\tthis.time = 0;\n\t\t\tthis.timeScale = 1.0;\n\t\t}\n\n\t\t_bindAction(action, prototypeAction) {\n\t\t\tconst root = action._localRoot || this._root,\n\t\t\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\t\t\tnTracks = tracks.length,\n\t\t\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\t\t\trootUuid = root.uuid,\n\t\t\t\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\t\t\tlet bindingsByName = bindingsByRoot[rootUuid];\n\n\t\t\tif (bindingsByName === undefined) {\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[rootUuid] = bindingsByName;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i !== nTracks; ++i) {\n\t\t\t\tconst track = tracks[i],\n\t\t\t\t\t\t\ttrackName = track.name;\n\t\t\t\tlet binding = bindingsByName[trackName];\n\n\t\t\t\tif (binding !== undefined) {\n\t\t\t\t\t++binding.referenceCount;\n\t\t\t\t\tbindings[i] = binding;\n\t\t\t\t} else {\n\t\t\t\t\tbinding = bindings[i];\n\n\t\t\t\t\tif (binding !== undefined) {\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\t\t\t\t\t\tif (binding._cacheIndex === null) {\n\t\t\t\t\t\t\t++binding.referenceCount;\n\n\t\t\t\t\t\t\tthis._addInactiveBinding(binding, rootUuid, trackName);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst path = prototypeAction && prototypeAction._propertyBindings[i].binding.parsedPath;\n\t\t\t\t\tbinding = new PropertyMixer(PropertyBinding.create(root, trackName, path), track.ValueTypeName, track.getValueSize());\n\t\t\t\t\t++binding.referenceCount;\n\n\t\t\t\t\tthis._addInactiveBinding(binding, rootUuid, trackName);\n\n\t\t\t\t\tbindings[i] = binding;\n\t\t\t\t}\n\n\t\t\t\tinterpolants[i].resultBuffer = binding.buffer;\n\t\t\t}\n\t\t}\n\n\t\t_activateAction(action) {\n\t\t\tif (!this._isActiveAction(action)) {\n\t\t\t\tif (action._cacheIndex === null) {\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\t\t\t\t\tconst rootUuid = (action._localRoot || this._root).uuid,\n\t\t\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\t\t\tactionsForClip = this._actionsByClip[clipUuid];\n\n\t\t\t\t\tthis._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\n\n\t\t\t\t\tthis._addInactiveAction(action, clipUuid, rootUuid);\n\t\t\t\t}\n\n\t\t\t\tconst bindings = action._propertyBindings; // increment reference counts / sort out state\n\n\t\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\n\t\t\t\t\tconst binding = bindings[i];\n\n\t\t\t\t\tif (binding.useCount++ === 0) {\n\t\t\t\t\t\tthis._lendBinding(binding);\n\n\t\t\t\t\t\tbinding.saveOriginalState();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction(action);\n\t\t\t}\n\t\t}\n\n\t\t_deactivateAction(action) {\n\t\t\tif (this._isActiveAction(action)) {\n\t\t\t\tconst bindings = action._propertyBindings; // decrement reference counts / sort out state\n\n\t\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\n\t\t\t\t\tconst binding = bindings[i];\n\n\t\t\t\t\tif (--binding.useCount === 0) {\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\n\t\t\t\t\t\tthis._takeBackBinding(binding);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction(action);\n\t\t\t}\n\t\t} // Memory manager\n\n\n\t\t_initMemoryManager() {\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\n\t\t\tthis._nActiveActions = 0;\n\t\t\tthis._actionsByClip = {}; // inside:\n\t\t\t// {\n\t\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t\t// }\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\n\t\t\tthis._nActiveBindings = 0;\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\n\t\t\tthis._nActiveControlInterpolants = 0;\n\t\t\tconst scope = this;\n\t\t\tthis.stats = {\n\t\t\t\tactions: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._actions.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn scope._nActiveActions;\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._bindings.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn scope._nActiveBindings;\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._controlInterpolants.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t};\n\t\t} // Memory management for AnimationAction objects\n\n\n\t\t_isActiveAction(action) {\n\t\t\tconst index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\t\t}\n\n\t\t_addInactiveAction(action, clipUuid, rootUuid) {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip;\n\t\t\tlet actionsForClip = actionsByClip[clipUuid];\n\n\t\t\tif (actionsForClip === undefined) {\n\t\t\t\tactionsForClip = {\n\t\t\t\t\tknownActions: [action],\n\t\t\t\t\tactionByRoot: {}\n\t\t\t\t};\n\t\t\t\taction._byClipCacheIndex = 0;\n\t\t\t\tactionsByClip[clipUuid] = actionsForClip;\n\t\t\t} else {\n\t\t\t\tconst knownActions = actionsForClip.knownActions;\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push(action);\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push(action);\n\t\t\tactionsForClip.actionByRoot[rootUuid] = action;\n\t\t}\n\n\t\t_removeInactiveAction(action) {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tlastInactiveAction = actions[actions.length - 1],\n\t\t\t\t\t\tcacheIndex = action._cacheIndex;\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[cacheIndex] = lastInactiveAction;\n\t\t\tactions.pop();\n\t\t\taction._cacheIndex = null;\n\t\t\tconst clipUuid = action._clip.uuid,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\t\t\tactionsForClip = actionsByClip[clipUuid],\n\t\t\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\t\t\t\t\t\tlastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\n\t\t\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[byClipCacheIndex] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\t\t\taction._byClipCacheIndex = null;\n\t\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\t\t\trootUuid = (action._localRoot || this._root).uuid;\n\t\t\tdelete actionByRoot[rootUuid];\n\n\t\t\tif (knownActionsForClip.length === 0) {\n\t\t\t\tdelete actionsByClip[clipUuid];\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction(action);\n\t\t}\n\n\t\t_removeInactiveBindingsForAction(action) {\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\n\t\t\t\tconst binding = bindings[i];\n\n\t\t\t\tif (--binding.referenceCount === 0) {\n\t\t\t\t\tthis._removeInactiveBinding(binding);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_lendAction(action) {\n\t\t\t// [ active actions |\tinactive actions\t]\n\t\t\t// [\tactive actions >| inactive actions ]\n\t\t\t//\t\t\t\t\t\t\t\t s\t\t\t\ta\n\t\t\t//\t\t\t\t\t\t\t\t\t<-swap->\n\t\t\t//\t\t\t\t\t\t\t\t a\t\t\t\ts\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tprevIndex = action._cacheIndex,\n\t\t\t\t\t\tlastActiveIndex = this._nActiveActions++,\n\t\t\t\t\t\tfirstInactiveAction = actions[lastActiveIndex];\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[lastActiveIndex] = action;\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[prevIndex] = firstInactiveAction;\n\t\t}\n\n\t\t_takeBackAction(action) {\n\t\t\t// [\tactive actions\t| inactive actions ]\n\t\t\t// [ active actions |< inactive actions\t]\n\t\t\t//\t\t\t\ta\t\t\t\ts\n\t\t\t//\t\t\t\t <-swap->\n\t\t\t//\t\t\t\ts\t\t\t\ta\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tprevIndex = action._cacheIndex,\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveActions,\n\t\t\t\t\t\tlastActiveAction = actions[firstInactiveIndex];\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[firstInactiveIndex] = action;\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[prevIndex] = lastActiveAction;\n\t\t} // Memory management for PropertyMixer objects\n\n\n\t\t_addInactiveBinding(binding, rootUuid, trackName) {\n\t\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\t\tbindings = this._bindings;\n\t\t\tlet bindingByName = bindingsByRoot[rootUuid];\n\n\t\t\tif (bindingByName === undefined) {\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[rootUuid] = bindingByName;\n\t\t\t}\n\n\t\t\tbindingByName[trackName] = binding;\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push(binding);\n\t\t}\n\n\t\t_removeInactiveBinding(binding) {\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tpropBinding = binding.binding,\n\t\t\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\t\t\ttrackName = propBinding.path,\n\t\t\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\t\tbindingByName = bindingsByRoot[rootUuid],\n\t\t\t\t\t\tlastInactiveBinding = bindings[bindings.length - 1],\n\t\t\t\t\t\tcacheIndex = binding._cacheIndex;\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[cacheIndex] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\t\t\tdelete bindingByName[trackName];\n\n\t\t\tif (Object.keys(bindingByName).length === 0) {\n\t\t\t\tdelete bindingsByRoot[rootUuid];\n\t\t\t}\n\t\t}\n\n\t\t_lendBinding(binding) {\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tprevIndex = binding._cacheIndex,\n\t\t\t\t\t\tlastActiveIndex = this._nActiveBindings++,\n\t\t\t\t\t\tfirstInactiveBinding = bindings[lastActiveIndex];\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[lastActiveIndex] = binding;\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[prevIndex] = firstInactiveBinding;\n\t\t}\n\n\t\t_takeBackBinding(binding) {\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tprevIndex = binding._cacheIndex,\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveBindings,\n\t\t\t\t\t\tlastActiveBinding = bindings[firstInactiveIndex];\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[firstInactiveIndex] = binding;\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[prevIndex] = lastActiveBinding;\n\t\t} // Memory management of Interpolants for weight and time scale\n\n\n\t\t_lendControlInterpolant() {\n\t\t\tconst interpolants = this._controlInterpolants,\n\t\t\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants++;\n\t\t\tlet interpolant = interpolants[lastActiveIndex];\n\n\t\t\tif (interpolant === undefined) {\n\t\t\t\tinterpolant = new LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer);\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[lastActiveIndex] = interpolant;\n\t\t\t}\n\n\t\t\treturn interpolant;\n\t\t}\n\n\t\t_takeBackControlInterpolant(interpolant) {\n\t\t\tconst interpolants = this._controlInterpolants,\n\t\t\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveControlInterpolants,\n\t\t\t\t\t\tlastActiveInterpolant = interpolants[firstInactiveIndex];\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[firstInactiveIndex] = interpolant;\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[prevIndex] = lastActiveInterpolant;\n\t\t} // return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\n\n\t\tclipAction(clip, optionalRoot, blendMode) {\n\t\t\tconst root = optionalRoot || this._root,\n\t\t\t\t\t\trootUuid = root.uuid;\n\t\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip;\n\t\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\t\t\tconst actionsForClip = this._actionsByClip[clipUuid];\n\t\t\tlet prototypeAction = null;\n\n\t\t\tif (blendMode === undefined) {\n\t\t\t\tif (clipObject !== null) {\n\t\t\t\t\tblendMode = clipObject.blendMode;\n\t\t\t\t} else {\n\t\t\t\t\tblendMode = NormalAnimationBlendMode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (actionsForClip !== undefined) {\n\t\t\t\tconst existingAction = actionsForClip.actionByRoot[rootUuid];\n\n\t\t\t\tif (existingAction !== undefined && existingAction.blendMode === blendMode) {\n\t\t\t\t\treturn existingAction;\n\t\t\t\t} // we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\n\n\t\t\t\tprototypeAction = actionsForClip.knownActions[0]; // also, take the clip from the prototype action\n\n\t\t\t\tif (clipObject === null) clipObject = prototypeAction._clip;\n\t\t\t} // clip must be known when specified via string\n\n\n\t\t\tif (clipObject === null) return null; // allocate all resources required to run it\n\n\t\t\tconst newAction = new AnimationAction(this, clipObject, optionalRoot, blendMode);\n\n\t\t\tthis._bindAction(newAction, prototypeAction); // and make the action known to the memory manager\n\n\n\t\t\tthis._addInactiveAction(newAction, clipUuid, rootUuid);\n\n\t\t\treturn newAction;\n\t\t} // get an existing action\n\n\n\t\texistingAction(clip, optionalRoot) {\n\t\t\tconst root = optionalRoot || this._root,\n\t\t\t\t\t\trootUuid = root.uuid,\n\t\t\t\t\t\tclipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n\t\t\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[clipUuid];\n\n\t\t\tif (actionsForClip !== undefined) {\n\t\t\t\treturn actionsForClip.actionByRoot[rootUuid] || null;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t} // deactivates all previously scheduled actions\n\n\n\t\tstopAllAction() {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tnActions = this._nActiveActions;\n\n\t\t\tfor (let i = nActions - 1; i >= 0; --i) {\n\t\t\t\tactions[i].stop();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // advance the time and update apply the animation\n\n\n\t\tupdate(deltaTime) {\n\t\t\tdeltaTime *= this.timeScale;\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tnActions = this._nActiveActions,\n\t\t\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\t\t\ttimeDirection = Math.sign(deltaTime),\n\t\t\t\t\t\taccuIndex = this._accuIndex ^= 1; // run active actions\n\n\t\t\tfor (let i = 0; i !== nActions; ++i) {\n\t\t\t\tconst action = actions[i];\n\n\t\t\t\taction._update(time, deltaTime, timeDirection, accuIndex);\n\t\t\t} // update scene graph\n\n\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor (let i = 0; i !== nBindings; ++i) {\n\t\t\t\tbindings[i].apply(accuIndex);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // Allows you to seek to a specific time in an animation.\n\n\n\t\tsetTime(timeInSeconds) {\n\t\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\n\t\t\tfor (let i = 0; i < this._actions.length; i++) {\n\t\t\t\tthis._actions[i].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\t\t\t}\n\n\t\t\treturn this.update(timeInSeconds); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\t\t} // return this mixer's root target object\n\n\n\t\tgetRoot() {\n\t\t\treturn this._root;\n\t\t} // free all resources specific to a particular clip\n\n\n\t\tuncacheClip(clip) {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\t\t\tactionsForClip = actionsByClip[clipUuid];\n\n\t\t\tif (actionsForClip !== undefined) {\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\t\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor (let i = 0, n = actionsToRemove.length; i !== n; ++i) {\n\t\t\t\t\tconst action = actionsToRemove[i];\n\n\t\t\t\t\tthis._deactivateAction(action);\n\n\t\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\t\t\t\tlastInactiveAction = actions[actions.length - 1];\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[cacheIndex] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction(action);\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[clipUuid];\n\t\t\t}\n\t\t} // free all resources specific to a particular root target object\n\n\n\t\tuncacheRoot(root) {\n\t\t\tconst rootUuid = root.uuid,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor (const clipUuid in actionsByClip) {\n\t\t\t\tconst actionByRoot = actionsByClip[clipUuid].actionByRoot,\n\t\t\t\t\t\t\taction = actionByRoot[rootUuid];\n\n\t\t\t\tif (action !== undefined) {\n\t\t\t\t\tthis._deactivateAction(action);\n\n\t\t\t\t\tthis._removeInactiveAction(action);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\t\tbindingByName = bindingsByRoot[rootUuid];\n\n\t\t\tif (bindingByName !== undefined) {\n\t\t\t\tfor (const trackName in bindingByName) {\n\t\t\t\t\tconst binding = bindingByName[trackName];\n\t\t\t\t\tbinding.restoreOriginalState();\n\n\t\t\t\t\tthis._removeInactiveBinding(binding);\n\t\t\t\t}\n\t\t\t}\n\t\t} // remove a targeted clip from the cache\n\n\n\t\tuncacheAction(clip, optionalRoot) {\n\t\t\tconst action = this.existingAction(clip, optionalRoot);\n\n\t\t\tif (action !== null) {\n\t\t\t\tthis._deactivateAction(action);\n\n\t\t\t\tthis._removeInactiveAction(action);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tAnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array(1);\n\n\tclass Uniform {\n\t\tconstructor(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tconsole.warn('THREE.Uniform: Type parameter is no longer needed.');\n\t\t\t\tvalue = arguments[1];\n\t\t\t}\n\n\t\t\tthis.value = value;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Uniform(this.value.clone === undefined ? this.value : this.value.clone());\n\t\t}\n\n\t}\n\n\tclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\t\tconstructor(array, stride, meshPerAttribute = 1) {\n\t\t\tsuper(array, stride);\n\t\t\tthis.meshPerAttribute = meshPerAttribute;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone(data) {\n\t\t\tconst ib = super.clone(data);\n\t\t\tib.meshPerAttribute = this.meshPerAttribute;\n\t\t\treturn ib;\n\t\t}\n\n\t\ttoJSON(data) {\n\t\t\tconst json = super.toJSON(data);\n\t\t\tjson.isInstancedInterleavedBuffer = true;\n\t\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\t\t\treturn json;\n\t\t}\n\n\t}\n\n\tInstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\n\n\tclass GLBufferAttribute {\n\t\tconstructor(buffer, type, itemSize, elementSize, count) {\n\t\t\tthis.buffer = buffer;\n\t\t\tthis.type = type;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.elementSize = elementSize;\n\t\t\tthis.count = count;\n\t\t\tthis.version = 0;\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t\tsetBuffer(buffer) {\n\t\t\tthis.buffer = buffer;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetType(type, elementSize) {\n\t\t\tthis.type = type;\n\t\t\tthis.elementSize = elementSize;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetItemSize(itemSize) {\n\t\t\tthis.itemSize = itemSize;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetCount(count) {\n\t\t\tthis.count = count;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tGLBufferAttribute.prototype.isGLBufferAttribute = true;\n\n\tclass Raycaster {\n\t\tconstructor(origin, direction, near = 0, far = Infinity) {\n\t\t\tthis.ray = new Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t\tthis.camera = null;\n\t\t\tthis.layers = new Layers();\n\t\t\tthis.params = {\n\t\t\t\tMesh: {},\n\t\t\t\tLine: {\n\t\t\t\t\tthreshold: 1\n\t\t\t\t},\n\t\t\t\tLOD: {},\n\t\t\t\tPoints: {\n\t\t\t\t\tthreshold: 1\n\t\t\t\t},\n\t\t\t\tSprite: {}\n\t\t\t};\n\t\t}\n\n\t\tset(origin, direction) {\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\t\t\tthis.ray.set(origin, direction);\n\t\t}\n\n\t\tsetFromCamera(coords, camera) {\n\t\t\tif (camera && camera.isPerspectiveCamera) {\n\t\t\t\tthis.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n\t\t\t\tthis.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\n\t\t\t\tthis.camera = camera;\n\t\t\t} else if (camera && camera.isOrthographicCamera) {\n\t\t\t\tthis.ray.origin.set(coords.x, coords.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera); // set origin in plane of camera\n\n\t\t\t\tthis.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n\t\t\t\tthis.camera = camera;\n\t\t\t} else {\n\t\t\t\tconsole.error('THREE.Raycaster: Unsupported camera type: ' + camera.type);\n\t\t\t}\n\t\t}\n\n\t\tintersectObject(object, recursive = true, intersects = []) {\n\t\t\tintersectObject(object, this, intersects, recursive);\n\t\t\tintersects.sort(ascSort);\n\t\t\treturn intersects;\n\t\t}\n\n\t\tintersectObjects(objects, recursive = true, intersects = []) {\n\t\t\tfor (let i = 0, l = objects.length; i < l; i++) {\n\t\t\t\tintersectObject(objects[i], this, intersects, recursive);\n\t\t\t}\n\n\t\t\tintersects.sort(ascSort);\n\t\t\treturn intersects;\n\t\t}\n\n\t}\n\n\tfunction ascSort(a, b) {\n\t\treturn a.distance - b.distance;\n\t}\n\n\tfunction intersectObject(object, raycaster, intersects, recursive) {\n\t\tif (object.layers.test(raycaster.layers)) {\n\t\t\tobject.raycast(raycaster, intersects);\n\t\t}\n\n\t\tif (recursive === true) {\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tintersectObject(children[i], raycaster, intersects, true);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n\t * The azimuthal angle (theta) is measured from the positive z-axis.\n\t */\n\n\tclass Spherical {\n\t\tconstructor(radius = 1, phi = 0, theta = 0) {\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi; // polar angle\n\n\t\t\tthis.theta = theta; // azimuthal angle\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(radius, phi, theta) {\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(other) {\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.phi = other.phi;\n\t\t\tthis.theta = other.theta;\n\t\t\treturn this;\n\t\t} // restrict phi to be betwee EPS and PI-EPS\n\n\n\t\tmakeSafe() {\n\t\t\tconst EPS = 0.000001;\n\t\t\tthis.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromVector3(v) {\n\t\t\treturn this.setFromCartesianCoords(v.x, v.y, v.z);\n\t\t}\n\n\t\tsetFromCartesianCoords(x, y, z) {\n\t\t\tthis.radius = Math.sqrt(x * x + y * y + z * z);\n\n\t\t\tif (this.radius === 0) {\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\t\t\t} else {\n\t\t\t\tthis.theta = Math.atan2(x, z);\n\t\t\t\tthis.phi = Math.acos(clamp(y / this.radius, -1, 1));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\t/**\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n\t */\n\tclass Cylindrical {\n\t\tconstructor(radius = 1, theta = 0, y = 0) {\n\t\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\n\t\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\n\t\t\tthis.y = y; // height above the x-z plane\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(radius, theta, y) {\n\t\t\tthis.radius = radius;\n\t\t\tthis.theta = theta;\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(other) {\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.theta = other.theta;\n\t\t\tthis.y = other.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromVector3(v) {\n\t\t\treturn this.setFromCartesianCoords(v.x, v.y, v.z);\n\t\t}\n\n\t\tsetFromCartesianCoords(x, y, z) {\n\t\t\tthis.radius = Math.sqrt(x * x + z * z);\n\t\t\tthis.theta = Math.atan2(x, z);\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tconst _vector$4 = /*@__PURE__*/new Vector2();\n\n\tclass Box2 {\n\t\tconstructor(min = new Vector2(+Infinity, +Infinity), max = new Vector2(-Infinity, -Infinity)) {\n\t\t\tthis.min = min;\n\t\t\tthis.max = max;\n\t\t}\n\n\t\tset(min, max) {\n\t\t\tthis.min.copy(min);\n\t\t\tthis.max.copy(max);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\n\t\t\t\tthis.expandByPoint(points[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCenterAndSize(center, size) {\n\t\t\tconst halfSize = _vector$4.copy(size).multiplyScalar(0.5);\n\n\t\t\tthis.min.copy(center).sub(halfSize);\n\t\t\tthis.max.copy(center).add(halfSize);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(box) {\n\t\t\tthis.min.copy(box.min);\n\t\t\tthis.max.copy(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeEmpty() {\n\t\t\tthis.min.x = this.min.y = +Infinity;\n\t\t\tthis.max.x = this.max.y = -Infinity;\n\t\t\treturn this;\n\t\t}\n\n\t\tisEmpty() {\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\t\t\treturn this.max.x < this.min.x || this.max.y < this.min.y;\n\t\t}\n\n\t\tgetCenter(target) {\n\t\t\treturn this.isEmpty() ? target.set(0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n\t\t}\n\n\t\tgetSize(target) {\n\t\t\treturn this.isEmpty() ? target.set(0, 0) : target.subVectors(this.max, this.min);\n\t\t}\n\n\t\texpandByPoint(point) {\n\t\t\tthis.min.min(point);\n\t\t\tthis.max.max(point);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByVector(vector) {\n\t\t\tthis.min.sub(vector);\n\t\t\tthis.max.add(vector);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByScalar(scalar) {\n\t\t\tthis.min.addScalar(-scalar);\n\t\t\tthis.max.addScalar(scalar);\n\t\t\treturn this;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y ? false : true;\n\t\t}\n\n\t\tcontainsBox(box) {\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y;\n\t\t}\n\n\t\tgetParameter(point, target) {\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\t\t\treturn target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\t// using 4 splitting planes to rule out intersections\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\t\t}\n\n\t\tclampPoint(point, target) {\n\t\t\treturn target.copy(point).clamp(this.min, this.max);\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\tconst clampedPoint = _vector$4.copy(point).clamp(this.min, this.max);\n\n\t\t\treturn clampedPoint.sub(point).length();\n\t\t}\n\n\t\tintersect(box) {\n\t\t\tthis.min.max(box.min);\n\t\t\tthis.max.min(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tunion(box) {\n\t\t\tthis.min.min(box.min);\n\t\t\tthis.max.max(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.min.add(offset);\n\t\t\tthis.max.add(offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(box) {\n\t\t\treturn box.min.equals(this.min) && box.max.equals(this.max);\n\t\t}\n\n\t}\n\n\tBox2.prototype.isBox2 = true;\n\n\tconst _startP = /*@__PURE__*/new Vector3();\n\n\tconst _startEnd = /*@__PURE__*/new Vector3();\n\n\tclass Line3 {\n\t\tconstructor(start = new Vector3(), end = new Vector3()) {\n\t\t\tthis.start = start;\n\t\t\tthis.end = end;\n\t\t}\n\n\t\tset(start, end) {\n\t\t\tthis.start.copy(start);\n\t\t\tthis.end.copy(end);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(line) {\n\t\t\tthis.start.copy(line.start);\n\t\t\tthis.end.copy(line.end);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetCenter(target) {\n\t\t\treturn target.addVectors(this.start, this.end).multiplyScalar(0.5);\n\t\t}\n\n\t\tdelta(target) {\n\t\t\treturn target.subVectors(this.end, this.start);\n\t\t}\n\n\t\tdistanceSq() {\n\t\t\treturn this.start.distanceToSquared(this.end);\n\t\t}\n\n\t\tdistance() {\n\t\t\treturn this.start.distanceTo(this.end);\n\t\t}\n\n\t\tat(t, target) {\n\t\t\treturn this.delta(target).multiplyScalar(t).add(this.start);\n\t\t}\n\n\t\tclosestPointToPointParameter(point, clampToLine) {\n\t\t\t_startP.subVectors(point, this.start);\n\n\t\t\t_startEnd.subVectors(this.end, this.start);\n\n\t\t\tconst startEnd2 = _startEnd.dot(_startEnd);\n\n\t\t\tconst startEnd_startP = _startEnd.dot(_startP);\n\n\t\t\tlet t = startEnd_startP / startEnd2;\n\n\t\t\tif (clampToLine) {\n\t\t\t\tt = clamp(t, 0, 1);\n\t\t\t}\n\n\t\t\treturn t;\n\t\t}\n\n\t\tclosestPointToPoint(point, clampToLine, target) {\n\t\t\tconst t = this.closestPointToPointParameter(point, clampToLine);\n\t\t\treturn this.delta(target).multiplyScalar(t).add(this.start);\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tthis.start.applyMatrix4(matrix);\n\t\t\tthis.end.applyMatrix4(matrix);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(line) {\n\t\t\treturn line.start.equals(this.start) && line.end.equals(this.end);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tconst _vector$3 = /*@__PURE__*/new Vector3();\n\n\tclass SpotLightHelper extends Object3D {\n\t\tconstructor(light, color) {\n\t\t\tsuper();\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.color = color;\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\n\n\t\t\tfor (let i = 0, j = 1, l = 32; i < l; i++, j++) {\n\t\t\t\tconst p1 = i / l * Math.PI * 2;\n\t\t\t\tconst p2 = j / l * Math.PI * 2;\n\t\t\t\tpositions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\n\t\t\t}\n\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tthis.cone = new LineSegments(geometry, material);\n\t\t\tthis.add(this.cone);\n\t\t\tthis.update();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.cone.geometry.dispose();\n\t\t\tthis.cone.material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\t\tconst coneWidth = coneLength * Math.tan(this.light.angle);\n\t\t\tthis.cone.scale.set(coneWidth, coneWidth, coneLength);\n\n\t\t\t_vector$3.setFromMatrixPosition(this.light.target.matrixWorld);\n\n\t\t\tthis.cone.lookAt(_vector$3);\n\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.cone.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tthis.cone.material.color.copy(this.light.color);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst _vector$2 = /*@__PURE__*/new Vector3();\n\n\tconst _boneMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _matrixWorldInv = /*@__PURE__*/new Matrix4();\n\n\tclass SkeletonHelper extends LineSegments {\n\t\tconstructor(object) {\n\t\t\tconst bones = getBoneList(object);\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst vertices = [];\n\t\t\tconst colors = [];\n\t\t\tconst color1 = new Color(0, 0, 1);\n\t\t\tconst color2 = new Color(0, 1, 0);\n\n\t\t\tfor (let i = 0; i < bones.length; i++) {\n\t\t\t\tconst bone = bones[i];\n\n\t\t\t\tif (bone.parent && bone.parent.isBone) {\n\t\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\t\tcolors.push(color1.r, color1.g, color1.b);\n\t\t\t\t\tcolors.push(color2.r, color2.g, color2.b);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\tdepthTest: false,\n\t\t\t\tdepthWrite: false,\n\t\t\t\ttoneMapped: false,\n\t\t\t\ttransparent: true\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'SkeletonHelper';\n\t\t\tthis.isSkeletonHelper = true;\n\t\t\tthis.root = object;\n\t\t\tthis.bones = bones;\n\t\t\tthis.matrix = object.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tconst bones = this.bones;\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst position = geometry.getAttribute('position');\n\n\t\t\t_matrixWorldInv.copy(this.root.matrixWorld).invert();\n\n\t\t\tfor (let i = 0, j = 0; i < bones.length; i++) {\n\t\t\t\tconst bone = bones[i];\n\n\t\t\t\tif (bone.parent && bone.parent.isBone) {\n\t\t\t\t\t_boneMatrix.multiplyMatrices(_matrixWorldInv, bone.matrixWorld);\n\n\t\t\t\t\t_vector$2.setFromMatrixPosition(_boneMatrix);\n\n\t\t\t\t\tposition.setXYZ(j, _vector$2.x, _vector$2.y, _vector$2.z);\n\n\t\t\t\t\t_boneMatrix.multiplyMatrices(_matrixWorldInv, bone.parent.matrixWorld);\n\n\t\t\t\t\t_vector$2.setFromMatrixPosition(_boneMatrix);\n\n\t\t\t\t\tposition.setXYZ(j + 1, _vector$2.x, _vector$2.y, _vector$2.z);\n\t\t\t\t\tj += 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgeometry.getAttribute('position').needsUpdate = true;\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t}\n\n\t}\n\n\tfunction getBoneList(object) {\n\t\tconst boneList = [];\n\n\t\tif (object && object.isBone) {\n\t\t\tboneList.push(object);\n\t\t}\n\n\t\tfor (let i = 0; i < object.children.length; i++) {\n\t\t\tboneList.push.apply(boneList, getBoneList(object.children[i]));\n\t\t}\n\n\t\treturn boneList;\n\t}\n\n\tclass PointLightHelper extends Mesh {\n\t\tconstructor(light, sphereSize, color) {\n\t\t\tconst geometry = new SphereGeometry(sphereSize, 4, 2);\n\t\t\tconst material = new MeshBasicMaterial({\n\t\t\t\twireframe: true,\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.color = color;\n\t\t\tthis.type = 'PointLightHelper';\n\t\t\tthis.matrix = this.light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.update();\n\t\t\t/*\n\t\t\t// TODO: delete this comment?\n\t\t\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\t\t\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\t\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\t\t\tconst d = light.distance;\n\t\t\tif ( d === 0.0 ) {\n\t\t\t\tthis.lightDistance.visible = false;\n\t\t\t} else {\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\n\t\t\t}\n\t\t\tthis.add( this.lightDistance );\n\t\t\t*/\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tthis.material.color.copy(this.light.color);\n\t\t\t}\n\t\t\t/*\n\t\t\tconst d = this.light.distance;\n\t\t\t\tif ( d === 0.0 ) {\n\t\t\t\t\tthis.lightDistance.visible = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.lightDistance.visible = true;\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\n\t\t\t\t}\n\t\t\t*/\n\n\t\t}\n\n\t}\n\n\tconst _vector$1 = /*@__PURE__*/new Vector3();\n\n\tconst _color1 = /*@__PURE__*/new Color();\n\n\tconst _color2 = /*@__PURE__*/new Color();\n\n\tclass HemisphereLightHelper extends Object3D {\n\t\tconstructor(light, size, color) {\n\t\t\tsuper();\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.color = color;\n\t\t\tconst geometry = new OctahedronGeometry(size);\n\t\t\tgeometry.rotateY(Math.PI * 0.5);\n\t\t\tthis.material = new MeshBasicMaterial({\n\t\t\t\twireframe: true,\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tif (this.color === undefined) this.material.vertexColors = true;\n\t\t\tconst position = geometry.getAttribute('position');\n\t\t\tconst colors = new Float32Array(position.count * 3);\n\t\t\tgeometry.setAttribute('color', new BufferAttribute(colors, 3));\n\t\t\tthis.add(new Mesh(geometry, this.material));\n\t\t\tthis.update();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.children[0].geometry.dispose();\n\t\t\tthis.children[0].material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst mesh = this.children[0];\n\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tconst colors = mesh.geometry.getAttribute('color');\n\n\t\t\t\t_color1.copy(this.light.color);\n\n\t\t\t\t_color2.copy(this.light.groundColor);\n\n\t\t\t\tfor (let i = 0, l = colors.count; i < l; i++) {\n\t\t\t\t\tconst color = i < l / 2 ? _color1 : _color2;\n\t\t\t\t\tcolors.setXYZ(i, color.r, color.g, color.b);\n\t\t\t\t}\n\n\t\t\t\tcolors.needsUpdate = true;\n\t\t\t}\n\n\t\t\tmesh.lookAt(_vector$1.setFromMatrixPosition(this.light.matrixWorld).negate());\n\t\t}\n\n\t}\n\n\tclass GridHelper extends LineSegments {\n\t\tconstructor(size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888) {\n\t\t\tcolor1 = new Color(color1);\n\t\t\tcolor2 = new Color(color2);\n\t\t\tconst center = divisions / 2;\n\t\t\tconst step = size / divisions;\n\t\t\tconst halfSize = size / 2;\n\t\t\tconst vertices = [],\n\t\t\t\t\t\tcolors = [];\n\n\t\t\tfor (let i = 0, j = 0, k = -halfSize; i <= divisions; i++, k += step) {\n\t\t\t\tvertices.push(-halfSize, 0, k, halfSize, 0, k);\n\t\t\t\tvertices.push(k, 0, -halfSize, k, 0, halfSize);\n\t\t\t\tconst color = i === center ? color1 : color2;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t}\n\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'GridHelper';\n\t\t}\n\n\t}\n\n\tclass PolarGridHelper extends LineSegments {\n\t\tconstructor(radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888) {\n\t\t\tcolor1 = new Color(color1);\n\t\t\tcolor2 = new Color(color2);\n\t\t\tconst vertices = [];\n\t\t\tconst colors = []; // create the radials\n\n\t\t\tfor (let i = 0; i <= radials; i++) {\n\t\t\t\tconst v = i / radials * (Math.PI * 2);\n\t\t\t\tconst x = Math.sin(v) * radius;\n\t\t\t\tconst z = Math.cos(v) * radius;\n\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\tvertices.push(x, 0, z);\n\t\t\t\tconst color = i & 1 ? color1 : color2;\n\t\t\t\tcolors.push(color.r, color.g, color.b);\n\t\t\t\tcolors.push(color.r, color.g, color.b);\n\t\t\t} // create the circles\n\n\n\t\t\tfor (let i = 0; i <= circles; i++) {\n\t\t\t\tconst color = i & 1 ? color1 : color2;\n\t\t\t\tconst r = radius - radius / circles * i;\n\n\t\t\t\tfor (let j = 0; j < divisions; j++) {\n\t\t\t\t\t// first vertex\n\t\t\t\t\tlet v = j / divisions * (Math.PI * 2);\n\t\t\t\t\tlet x = Math.sin(v) * r;\n\t\t\t\t\tlet z = Math.cos(v) * r;\n\t\t\t\t\tvertices.push(x, 0, z);\n\t\t\t\t\tcolors.push(color.r, color.g, color.b); // second vertex\n\n\t\t\t\t\tv = (j + 1) / divisions * (Math.PI * 2);\n\t\t\t\t\tx = Math.sin(v) * r;\n\t\t\t\t\tz = Math.cos(v) * r;\n\t\t\t\t\tvertices.push(x, 0, z);\n\t\t\t\t\tcolors.push(color.r, color.g, color.b);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'PolarGridHelper';\n\t\t}\n\n\t}\n\n\tconst _v1 = /*@__PURE__*/new Vector3();\n\n\tconst _v2 = /*@__PURE__*/new Vector3();\n\n\tconst _v3 = /*@__PURE__*/new Vector3();\n\n\tclass DirectionalLightHelper extends Object3D {\n\t\tconstructor(light, size, color) {\n\t\t\tsuper();\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.color = color;\n\t\t\tif (size === undefined) size = 1;\n\t\t\tlet geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tthis.lightPlane = new Line(geometry, material);\n\t\t\tthis.add(this.lightPlane);\n\t\t\tgeometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n\t\t\tthis.targetLine = new Line(geometry, material);\n\t\t\tthis.add(this.targetLine);\n\t\t\tthis.update();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.lightPlane.geometry.dispose();\n\t\t\tthis.lightPlane.material.dispose();\n\t\t\tthis.targetLine.geometry.dispose();\n\t\t\tthis.targetLine.material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\t_v1.setFromMatrixPosition(this.light.matrixWorld);\n\n\t\t\t_v2.setFromMatrixPosition(this.light.target.matrixWorld);\n\n\t\t\t_v3.subVectors(_v2, _v1);\n\n\t\t\tthis.lightPlane.lookAt(_v2);\n\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.lightPlane.material.color.set(this.color);\n\t\t\t\tthis.targetLine.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tthis.lightPlane.material.color.copy(this.light.color);\n\t\t\t\tthis.targetLine.material.color.copy(this.light.color);\n\t\t\t}\n\n\t\t\tthis.targetLine.lookAt(_v2);\n\t\t\tthis.targetLine.scale.z = _v3.length();\n\t\t}\n\n\t}\n\n\tconst _vector = /*@__PURE__*/new Vector3();\n\n\tconst _camera = /*@__PURE__*/new Camera();\n\t/**\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n\t */\n\n\n\tclass CameraHelper extends LineSegments {\n\t\tconstructor(camera) {\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tcolor: 0xffffff,\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tconst vertices = [];\n\t\t\tconst colors = [];\n\t\t\tconst pointMap = {}; // colors\n\n\t\t\tconst colorFrustum = new Color(0xffaa00);\n\t\t\tconst colorCone = new Color(0xff0000);\n\t\t\tconst colorUp = new Color(0x00aaff);\n\t\t\tconst colorTarget = new Color(0xffffff);\n\t\t\tconst colorCross = new Color(0x333333); // near\n\n\t\t\taddLine('n1', 'n2', colorFrustum);\n\t\t\taddLine('n2', 'n4', colorFrustum);\n\t\t\taddLine('n4', 'n3', colorFrustum);\n\t\t\taddLine('n3', 'n1', colorFrustum); // far\n\n\t\t\taddLine('f1', 'f2', colorFrustum);\n\t\t\taddLine('f2', 'f4', colorFrustum);\n\t\t\taddLine('f4', 'f3', colorFrustum);\n\t\t\taddLine('f3', 'f1', colorFrustum); // sides\n\n\t\t\taddLine('n1', 'f1', colorFrustum);\n\t\t\taddLine('n2', 'f2', colorFrustum);\n\t\t\taddLine('n3', 'f3', colorFrustum);\n\t\t\taddLine('n4', 'f4', colorFrustum); // cone\n\n\t\t\taddLine('p', 'n1', colorCone);\n\t\t\taddLine('p', 'n2', colorCone);\n\t\t\taddLine('p', 'n3', colorCone);\n\t\t\taddLine('p', 'n4', colorCone); // up\n\n\t\t\taddLine('u1', 'u2', colorUp);\n\t\t\taddLine('u2', 'u3', colorUp);\n\t\t\taddLine('u3', 'u1', colorUp); // target\n\n\t\t\taddLine('c', 't', colorTarget);\n\t\t\taddLine('p', 'c', colorCross); // cross\n\n\t\t\taddLine('cn1', 'cn2', colorCross);\n\t\t\taddLine('cn3', 'cn4', colorCross);\n\t\t\taddLine('cf1', 'cf2', colorCross);\n\t\t\taddLine('cf3', 'cf4', colorCross);\n\n\t\t\tfunction addLine(a, b, color) {\n\t\t\t\taddPoint(a, color);\n\t\t\t\taddPoint(b, color);\n\t\t\t}\n\n\t\t\tfunction addPoint(id, color) {\n\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\tcolors.push(color.r, color.g, color.b);\n\n\t\t\t\tif (pointMap[id] === undefined) {\n\t\t\t\t\tpointMap[id] = [];\n\t\t\t\t}\n\n\t\t\t\tpointMap[id].push(vertices.length / 3 - 1);\n\t\t\t}\n\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'CameraHelper';\n\t\t\tthis.camera = camera;\n\t\t\tif (this.camera.updateProjectionMatrix) this.camera.updateProjectionMatrix();\n\t\t\tthis.matrix = camera.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.pointMap = pointMap;\n\t\t\tthis.update();\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst pointMap = this.pointMap;\n\t\t\tconst w = 1,\n\t\t\t\t\t\th = 1; // we need just camera projection matrix inverse\n\t\t\t// world matrix must be identity\n\n\t\t\t_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse); // center / target\n\n\n\t\t\tsetPoint('c', pointMap, geometry, _camera, 0, 0, -1);\n\t\t\tsetPoint('t', pointMap, geometry, _camera, 0, 0, 1); // near\n\n\t\t\tsetPoint('n1', pointMap, geometry, _camera, -w, -h, -1);\n\t\t\tsetPoint('n2', pointMap, geometry, _camera, w, -h, -1);\n\t\t\tsetPoint('n3', pointMap, geometry, _camera, -w, h, -1);\n\t\t\tsetPoint('n4', pointMap, geometry, _camera, w, h, -1); // far\n\n\t\t\tsetPoint('f1', pointMap, geometry, _camera, -w, -h, 1);\n\t\t\tsetPoint('f2', pointMap, geometry, _camera, w, -h, 1);\n\t\t\tsetPoint('f3', pointMap, geometry, _camera, -w, h, 1);\n\t\t\tsetPoint('f4', pointMap, geometry, _camera, w, h, 1); // up\n\n\t\t\tsetPoint('u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, -1);\n\t\t\tsetPoint('u2', pointMap, geometry, _camera, -w * 0.7, h * 1.1, -1);\n\t\t\tsetPoint('u3', pointMap, geometry, _camera, 0, h * 2, -1); // cross\n\n\t\t\tsetPoint('cf1', pointMap, geometry, _camera, -w, 0, 1);\n\t\t\tsetPoint('cf2', pointMap, geometry, _camera, w, 0, 1);\n\t\t\tsetPoint('cf3', pointMap, geometry, _camera, 0, -h, 1);\n\t\t\tsetPoint('cf4', pointMap, geometry, _camera, 0, h, 1);\n\t\t\tsetPoint('cn1', pointMap, geometry, _camera, -w, 0, -1);\n\t\t\tsetPoint('cn2', pointMap, geometry, _camera, w, 0, -1);\n\t\t\tsetPoint('cn3', pointMap, geometry, _camera, 0, -h, -1);\n\t\t\tsetPoint('cn4', pointMap, geometry, _camera, 0, h, -1);\n\t\t\tgeometry.getAttribute('position').needsUpdate = true;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\t\t}\n\n\t}\n\n\tfunction setPoint(point, pointMap, geometry, camera, x, y, z) {\n\t\t_vector.set(x, y, z).unproject(camera);\n\n\t\tconst points = pointMap[point];\n\n\t\tif (points !== undefined) {\n\t\t\tconst position = geometry.getAttribute('position');\n\n\t\t\tfor (let i = 0, l = points.length; i < l; i++) {\n\t\t\t\tposition.setXYZ(points[i], _vector.x, _vector.y, _vector.z);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst _box = /*@__PURE__*/new Box3();\n\n\tclass BoxHelper extends LineSegments {\n\t\tconstructor(object, color = 0xffff00) {\n\t\t\tconst indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n\t\t\tconst positions = new Float32Array(8 * 3);\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setIndex(new BufferAttribute(indices, 1));\n\t\t\tgeometry.setAttribute('position', new BufferAttribute(positions, 3));\n\t\t\tsuper(geometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.object = object;\n\t\t\tthis.type = 'BoxHelper';\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.update();\n\t\t}\n\n\t\tupdate(object) {\n\t\t\tif (object !== undefined) {\n\t\t\t\tconsole.warn('THREE.BoxHelper: .update() has no longer arguments.');\n\t\t\t}\n\n\t\t\tif (this.object !== undefined) {\n\t\t\t\t_box.setFromObject(this.object);\n\t\t\t}\n\n\t\t\tif (_box.isEmpty()) return;\n\t\t\tconst min = _box.min;\n\t\t\tconst max = _box.max;\n\t\t\t/*\n\t\t\t\t5____4\n\t\t\t1/___0/|\n\t\t\t| 6__|_7\n\t\t\t2/___3/\n\t\t\t\t0: max.x, max.y, max.z\n\t\t\t1: min.x, max.y, max.z\n\t\t\t2: min.x, min.y, max.z\n\t\t\t3: max.x, min.y, max.z\n\t\t\t4: max.x, max.y, min.z\n\t\t\t5: min.x, max.y, min.z\n\t\t\t6: min.x, min.y, min.z\n\t\t\t7: max.x, min.y, min.z\n\t\t\t*/\n\n\t\t\tconst position = this.geometry.attributes.position;\n\t\t\tconst array = position.array;\n\t\t\tarray[0] = max.x;\n\t\t\tarray[1] = max.y;\n\t\t\tarray[2] = max.z;\n\t\t\tarray[3] = min.x;\n\t\t\tarray[4] = max.y;\n\t\t\tarray[5] = max.z;\n\t\t\tarray[6] = min.x;\n\t\t\tarray[7] = min.y;\n\t\t\tarray[8] = max.z;\n\t\t\tarray[9] = max.x;\n\t\t\tarray[10] = min.y;\n\t\t\tarray[11] = max.z;\n\t\t\tarray[12] = max.x;\n\t\t\tarray[13] = max.y;\n\t\t\tarray[14] = min.z;\n\t\t\tarray[15] = min.x;\n\t\t\tarray[16] = max.y;\n\t\t\tarray[17] = min.z;\n\t\t\tarray[18] = min.x;\n\t\t\tarray[19] = min.y;\n\t\t\tarray[20] = min.z;\n\t\t\tarray[21] = max.x;\n\t\t\tarray[22] = min.y;\n\t\t\tarray[23] = min.z;\n\t\t\tposition.needsUpdate = true;\n\t\t\tthis.geometry.computeBoundingSphere();\n\t\t}\n\n\t\tsetFromObject(object) {\n\t\t\tthis.object = object;\n\t\t\tthis.update();\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tLineSegments.prototype.copy.call(this, source);\n\t\t\tthis.object = source.object;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass Box3Helper extends LineSegments {\n\t\tconstructor(box, color = 0xffff00) {\n\t\t\tconst indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n\t\t\tconst positions = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1];\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setIndex(new BufferAttribute(indices, 1));\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\t\tsuper(geometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.box = box;\n\t\t\tthis.type = 'Box3Helper';\n\t\t\tthis.geometry.computeBoundingSphere();\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tconst box = this.box;\n\t\t\tif (box.isEmpty()) return;\n\t\t\tbox.getCenter(this.position);\n\t\t\tbox.getSize(this.scale);\n\t\t\tthis.scale.multiplyScalar(0.5);\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t}\n\n\t}\n\n\tclass PlaneHelper extends Line {\n\t\tconstructor(plane, size = 1, hex = 0xffff00) {\n\t\t\tconst color = hex;\n\t\t\tconst positions = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0];\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\t\tgeometry.computeBoundingSphere();\n\t\t\tsuper(geometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.type = 'PlaneHelper';\n\t\t\tthis.plane = plane;\n\t\t\tthis.size = size;\n\t\t\tconst positions2 = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1];\n\t\t\tconst geometry2 = new BufferGeometry();\n\t\t\tgeometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3));\n\t\t\tgeometry2.computeBoundingSphere();\n\t\t\tthis.add(new Mesh(geometry2, new MeshBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\topacity: 0.2,\n\t\t\t\ttransparent: true,\n\t\t\t\tdepthWrite: false,\n\t\t\t\ttoneMapped: false\n\t\t\t})));\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tlet scale = -this.plane.constant;\n\t\t\tif (Math.abs(scale) < 1e-8) scale = 1e-8; // sign does not matter\n\n\t\t\tthis.scale.set(0.5 * this.size, 0.5 * this.size, scale);\n\t\t\tthis.children[0].material.side = scale < 0 ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\t\tthis.lookAt(this.plane.normal);\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t}\n\n\t}\n\n\tconst _axis = /*@__PURE__*/new Vector3();\n\n\tlet _lineGeometry, _coneGeometry;\n\n\tclass ArrowHelper extends Object3D {\n\t\t// dir is assumed to be normalized\n\t\tconstructor(dir = new Vector3(0, 0, 1), origin = new Vector3(0, 0, 0), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ArrowHelper';\n\n\t\t\tif (_lineGeometry === undefined) {\n\t\t\t\t_lineGeometry = new BufferGeometry();\n\n\t\t\t\t_lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n\n\t\t\t\t_coneGeometry = new CylinderGeometry(0, 0.5, 1, 5, 1);\n\n\t\t\t\t_coneGeometry.translate(0, -0.5, 0);\n\t\t\t}\n\n\t\t\tthis.position.copy(origin);\n\t\t\tthis.line = new Line(_lineGeometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.line.matrixAutoUpdate = false;\n\t\t\tthis.add(this.line);\n\t\t\tthis.cone = new Mesh(_coneGeometry, new MeshBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.cone.matrixAutoUpdate = false;\n\t\t\tthis.add(this.cone);\n\t\t\tthis.setDirection(dir);\n\t\t\tthis.setLength(length, headLength, headWidth);\n\t\t}\n\n\t\tsetDirection(dir) {\n\t\t\t// dir is assumed to be normalized\n\t\t\tif (dir.y > 0.99999) {\n\t\t\t\tthis.quaternion.set(0, 0, 0, 1);\n\t\t\t} else if (dir.y < -0.99999) {\n\t\t\t\tthis.quaternion.set(1, 0, 0, 0);\n\t\t\t} else {\n\t\t\t\t_axis.set(dir.z, 0, -dir.x).normalize();\n\n\t\t\t\tconst radians = Math.acos(dir.y);\n\t\t\t\tthis.quaternion.setFromAxisAngle(_axis, radians);\n\t\t\t}\n\t\t}\n\n\t\tsetLength(length, headLength = length * 0.2, headWidth = headLength * 0.2) {\n\t\t\tthis.line.scale.set(1, Math.max(0.0001, length - headLength), 1); // see #17458\n\n\t\t\tthis.line.updateMatrix();\n\t\t\tthis.cone.scale.set(headWidth, headLength, headWidth);\n\t\t\tthis.cone.position.y = length;\n\t\t\tthis.cone.updateMatrix();\n\t\t}\n\n\t\tsetColor(color) {\n\t\t\tthis.line.material.color.set(color);\n\t\t\tthis.cone.material.color.set(color);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source, false);\n\t\t\tthis.line.copy(source.line);\n\t\t\tthis.cone.copy(source.cone);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass AxesHelper extends LineSegments {\n\t\tconstructor(size = 1) {\n\t\t\tconst vertices = [0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size];\n\t\t\tconst colors = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1];\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'AxesHelper';\n\t\t}\n\n\t\tsetColors(xAxisColor, yAxisColor, zAxisColor) {\n\t\t\tconst color = new Color();\n\t\t\tconst array = this.geometry.attributes.color.array;\n\t\t\tcolor.set(xAxisColor);\n\t\t\tcolor.toArray(array, 0);\n\t\t\tcolor.toArray(array, 3);\n\t\t\tcolor.set(yAxisColor);\n\t\t\tcolor.toArray(array, 6);\n\t\t\tcolor.toArray(array, 9);\n\t\t\tcolor.set(zAxisColor);\n\t\t\tcolor.toArray(array, 12);\n\t\t\tcolor.toArray(array, 15);\n\t\t\tthis.geometry.attributes.color.needsUpdate = true;\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\t\t}\n\n\t}\n\n\tclass ShapePath {\n\t\tconstructor() {\n\t\t\tthis.type = 'ShapePath';\n\t\t\tthis.color = new Color();\n\t\t\tthis.subPaths = [];\n\t\t\tthis.currentPath = null;\n\t\t}\n\n\t\tmoveTo(x, y) {\n\t\t\tthis.currentPath = new Path();\n\t\t\tthis.subPaths.push(this.currentPath);\n\t\t\tthis.currentPath.moveTo(x, y);\n\t\t\treturn this;\n\t\t}\n\n\t\tlineTo(x, y) {\n\t\t\tthis.currentPath.lineTo(x, y);\n\t\t\treturn this;\n\t\t}\n\n\t\tquadraticCurveTo(aCPx, aCPy, aX, aY) {\n\t\t\tthis.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tbezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n\t\t\tthis.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tsplineThru(pts) {\n\t\t\tthis.currentPath.splineThru(pts);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoShapes(isCCW, noHoles) {\n\t\t\tfunction toShapesNoHoles(inSubpaths) {\n\t\t\t\tconst shapes = [];\n\n\t\t\t\tfor (let i = 0, l = inSubpaths.length; i < l; i++) {\n\t\t\t\t\tconst tmpPath = inSubpaths[i];\n\t\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\t\tshapes.push(tmpShape);\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon(inPt, inPolygon) {\n\t\t\t\tconst polyLen = inPolygon.length; // inPt on polygon contour => immediate success\t\tor\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//\twith the horizontal line through inPt, left of inPt\n\t\t\t\t//\tnot counting lowerY endpoints of edges and whole edges on that line\n\n\t\t\t\tlet inside = false;\n\n\t\t\t\tfor (let p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n\t\t\t\t\tlet edgeLowPt = inPolygon[p];\n\t\t\t\t\tlet edgeHighPt = inPolygon[q];\n\t\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif (Math.abs(edgeDy) > Number.EPSILON) {\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif (edgeDy < 0) {\n\t\t\t\t\t\t\tedgeLowPt = inPolygon[q];\n\t\t\t\t\t\t\tedgeDx = -edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[p];\n\t\t\t\t\t\t\tedgeDy = -edgeDy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\n\n\t\t\t\t\t\tif (inPt.y === edgeLowPt.y) {\n\t\t\t\t\t\t\tif (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n\t\t\t\t\t\t\tif (perpEdge === 0) return true; // inPt is on contour ?\n\n\t\t\t\t\t\t\tif (perpEdge < 0) continue;\n\t\t\t\t\t\t\tinside = !inside; // true intersection left of inPt\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif (inPt.y !== edgeLowPt.y) continue; // parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\n\t\t\t\t\t\tif (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn inside;\n\t\t\t}\n\n\t\t\tconst isClockWise = ShapeUtils.isClockWise;\n\t\t\tconst subPaths = this.subPaths;\n\t\t\tif (subPaths.length === 0) return [];\n\t\t\tif (noHoles === true) return toShapesNoHoles(subPaths);\n\t\t\tlet solid, tmpPath, tmpShape;\n\t\t\tconst shapes = [];\n\n\t\t\tif (subPaths.length === 1) {\n\t\t\t\ttmpPath = subPaths[0];\n\t\t\t\ttmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push(tmpShape);\n\t\t\t\treturn shapes;\n\t\t\t}\n\n\t\t\tlet holesFirst = !isClockWise(subPaths[0].getPoints());\n\t\t\tholesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\n\n\t\t\tconst betterShapeHoles = [];\n\t\t\tconst newShapes = [];\n\t\t\tlet newShapeHoles = [];\n\t\t\tlet mainIdx = 0;\n\t\t\tlet tmpPoints;\n\t\t\tnewShapes[mainIdx] = undefined;\n\t\t\tnewShapeHoles[mainIdx] = [];\n\n\t\t\tfor (let i = 0, l = subPaths.length; i < l; i++) {\n\t\t\t\ttmpPath = subPaths[i];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise(tmpPoints);\n\t\t\t\tsolid = isCCW ? !solid : solid;\n\n\t\t\t\tif (solid) {\n\t\t\t\t\tif (!holesFirst && newShapes[mainIdx]) mainIdx++;\n\t\t\t\t\tnewShapes[mainIdx] = {\n\t\t\t\t\t\ts: new Shape(),\n\t\t\t\t\t\tp: tmpPoints\n\t\t\t\t\t};\n\t\t\t\t\tnewShapes[mainIdx].s.curves = tmpPath.curves;\n\t\t\t\t\tif (holesFirst) mainIdx++;\n\t\t\t\t\tnewShapeHoles[mainIdx] = []; //console.log('cw', i);\n\t\t\t\t} else {\n\t\t\t\t\tnewShapeHoles[mainIdx].push({\n\t\t\t\t\t\th: tmpPath,\n\t\t\t\t\t\tp: tmpPoints[0]\n\t\t\t\t\t}); //console.log('ccw', i);\n\t\t\t\t}\n\t\t\t} // only Holes? -> probably all Shapes with wrong orientation\n\n\n\t\t\tif (!newShapes[0]) return toShapesNoHoles(subPaths);\n\n\t\t\tif (newShapes.length > 1) {\n\t\t\t\tlet ambiguous = false;\n\t\t\t\tconst toChange = [];\n\n\t\t\t\tfor (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n\t\t\t\t\tbetterShapeHoles[sIdx] = [];\n\t\t\t\t}\n\n\t\t\t\tfor (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n\t\t\t\t\tconst sho = newShapeHoles[sIdx];\n\n\t\t\t\t\tfor (let hIdx = 0; hIdx < sho.length; hIdx++) {\n\t\t\t\t\t\tconst ho = sho[hIdx];\n\t\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\t\tfor (let s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n\t\t\t\t\t\t\tif (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n\t\t\t\t\t\t\t\tif (sIdx !== s2Idx) toChange.push({\n\t\t\t\t\t\t\t\t\tfroms: sIdx,\n\t\t\t\t\t\t\t\t\ttos: s2Idx,\n\t\t\t\t\t\t\t\t\thole: hIdx\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tif (hole_unassigned) {\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[s2Idx].push(ho);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (hole_unassigned) {\n\t\t\t\t\t\t\tbetterShapeHoles[sIdx].push(ho);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // console.log(\"ambiguous: \", ambiguous);\n\n\n\t\t\t\tif (toChange.length > 0) {\n\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\tif (!ambiguous) newShapeHoles = betterShapeHoles;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet tmpHoles;\n\n\t\t\tfor (let i = 0, il = newShapes.length; i < il; i++) {\n\t\t\t\ttmpShape = newShapes[i].s;\n\t\t\t\tshapes.push(tmpShape);\n\t\t\t\ttmpHoles = newShapeHoles[i];\n\n\t\t\t\tfor (let j = 0, jl = tmpHoles.length; j < jl; j++) {\n\t\t\t\t\ttmpShape.holes.push(tmpHoles[j].h);\n\t\t\t\t}\n\t\t\t} //console.log(\"shape\", shapes);\n\n\n\t\t\treturn shapes;\n\t\t}\n\n\t}\n\n\tconst _floatView = new Float32Array(1);\n\n\tconst _int32View = new Int32Array(_floatView.buffer);\n\n\tclass DataUtils {\n\t\t// Converts float32 to float16 (stored as uint16 value).\n\t\tstatic toHalfFloat(val) {\n\t\t\tif (val > 65504) {\n\t\t\t\tconsole.warn('THREE.DataUtils.toHalfFloat(): value exceeds 65504.');\n\t\t\t\tval = 65504; // maximum representable value in float16\n\t\t\t} // Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n\t\t\t/* This method is faster than the OpenEXR implementation (very often\n\t\t\t* used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t\t* by James Tursa?s half-precision code. */\n\n\n\t\t\t_floatView[0] = val;\n\t\t\tconst x = _int32View[0];\n\t\t\tlet bits = x >> 16 & 0x8000;\n\t\t\t/* Get the sign */\n\n\t\t\tlet m = x >> 12 & 0x07ff;\n\t\t\t/* Keep one extra bit for rounding */\n\n\t\t\tconst e = x >> 23 & 0xff;\n\t\t\t/* Using int is faster here */\n\n\t\t\t/* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t\t* half, return signed zero. */\n\n\t\t\tif (e < 103) return bits;\n\t\t\t/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\n\t\t\tif (e > 142) {\n\t\t\t\tbits |= 0x7c00;\n\t\t\t\t/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t\t* not Inf, so make sure we set one mantissa bit too. */\n\n\t\t\t\tbits |= (e == 255 ? 0 : 1) && x & 0x007fffff;\n\t\t\t\treturn bits;\n\t\t\t}\n\t\t\t/* If exponent underflows but not too much, return a denormal */\n\n\n\t\t\tif (e < 113) {\n\t\t\t\tm |= 0x0800;\n\t\t\t\t/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t\t* to 1, which is OK. */\n\n\t\t\t\tbits |= (m >> 114 - e) + (m >> 113 - e & 1);\n\t\t\t\treturn bits;\n\t\t\t}\n\n\t\t\tbits |= e - 112 << 10 | m >> 1;\n\t\t\t/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t\t* the exponent, which is OK. */\n\n\t\t\tbits += m & 1;\n\t\t\treturn bits;\n\t\t}\n\n\t}\n\n\tconst LineStrip = 0;\n\tconst LinePieces = 1;\n\tconst NoColors = 0;\n\tconst FaceColors = 1;\n\tconst VertexColors = 2;\n\tfunction MeshFaceMaterial(materials) {\n\t\tconsole.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');\n\t\treturn materials;\n\t}\n\tfunction MultiMaterial(materials = []) {\n\t\tconsole.warn('THREE.MultiMaterial has been removed. Use an Array instead.');\n\t\tmaterials.isMultiMaterial = true;\n\t\tmaterials.materials = materials;\n\n\t\tmaterials.clone = function () {\n\t\t\treturn materials.slice();\n\t\t};\n\n\t\treturn materials;\n\t}\n\tfunction PointCloud(geometry, material) {\n\t\tconsole.warn('THREE.PointCloud has been renamed to THREE.Points.');\n\t\treturn new Points(geometry, material);\n\t}\n\tfunction Particle(material) {\n\t\tconsole.warn('THREE.Particle has been renamed to THREE.Sprite.');\n\t\treturn new Sprite(material);\n\t}\n\tfunction ParticleSystem(geometry, material) {\n\t\tconsole.warn('THREE.ParticleSystem has been renamed to THREE.Points.');\n\t\treturn new Points(geometry, material);\n\t}\n\tfunction PointCloudMaterial(parameters) {\n\t\tconsole.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');\n\t\treturn new PointsMaterial(parameters);\n\t}\n\tfunction ParticleBasicMaterial(parameters) {\n\t\tconsole.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');\n\t\treturn new PointsMaterial(parameters);\n\t}\n\tfunction ParticleSystemMaterial(parameters) {\n\t\tconsole.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');\n\t\treturn new PointsMaterial(parameters);\n\t}\n\tfunction Vertex(x, y, z) {\n\t\tconsole.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');\n\t\treturn new Vector3(x, y, z);\n\t} //\n\n\tfunction DynamicBufferAttribute(array, itemSize) {\n\t\tconsole.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.');\n\t\treturn new BufferAttribute(array, itemSize).setUsage(DynamicDrawUsage);\n\t}\n\tfunction Int8Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');\n\t\treturn new Int8BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint8Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');\n\t\treturn new Uint8BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint8ClampedAttribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');\n\t\treturn new Uint8ClampedBufferAttribute(array, itemSize);\n\t}\n\tfunction Int16Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');\n\t\treturn new Int16BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint16Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');\n\t\treturn new Uint16BufferAttribute(array, itemSize);\n\t}\n\tfunction Int32Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');\n\t\treturn new Int32BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint32Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');\n\t\treturn new Uint32BufferAttribute(array, itemSize);\n\t}\n\tfunction Float32Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');\n\t\treturn new Float32BufferAttribute(array, itemSize);\n\t}\n\tfunction Float64Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');\n\t\treturn new Float64BufferAttribute(array, itemSize);\n\t} //\n\n\tCurve.create = function (construct, getPoint) {\n\t\tconsole.log('THREE.Curve.create() has been deprecated');\n\t\tconstruct.prototype = Object.create(Curve.prototype);\n\t\tconstruct.prototype.constructor = construct;\n\t\tconstruct.prototype.getPoint = getPoint;\n\t\treturn construct;\n\t}; //\n\n\n\tPath.prototype.fromPoints = function (points) {\n\t\tconsole.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');\n\t\treturn this.setFromPoints(points);\n\t}; //\n\n\n\tfunction AxisHelper(size) {\n\t\tconsole.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.');\n\t\treturn new AxesHelper(size);\n\t}\n\tfunction BoundingBoxHelper(object, color) {\n\t\tconsole.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');\n\t\treturn new BoxHelper(object, color);\n\t}\n\tfunction EdgesHelper(object, hex) {\n\t\tconsole.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');\n\t\treturn new LineSegments(new EdgesGeometry(object.geometry), new LineBasicMaterial({\n\t\t\tcolor: hex !== undefined ? hex : 0xffffff\n\t\t}));\n\t}\n\n\tGridHelper.prototype.setColors = function () {\n\t\tconsole.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');\n\t};\n\n\tSkeletonHelper.prototype.update = function () {\n\t\tconsole.error('THREE.SkeletonHelper: update() no longer needs to be called.');\n\t};\n\n\tfunction WireframeHelper(object, hex) {\n\t\tconsole.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');\n\t\treturn new LineSegments(new WireframeGeometry(object.geometry), new LineBasicMaterial({\n\t\t\tcolor: hex !== undefined ? hex : 0xffffff\n\t\t}));\n\t} //\n\n\tLoader.prototype.extractUrlBase = function (url) {\n\t\tconsole.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.');\n\t\treturn LoaderUtils.extractUrlBase(url);\n\t};\n\n\tLoader.Handlers = {\n\t\tadd: function\n\t\t\t/* regex, loader */\n\t\t() {\n\t\t\tconsole.error('THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.');\n\t\t},\n\t\tget: function\n\t\t\t/* file */\n\t\t() {\n\t\t\tconsole.error('THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.');\n\t\t}\n\t};\n\tfunction XHRLoader(manager) {\n\t\tconsole.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');\n\t\treturn new FileLoader(manager);\n\t}\n\tfunction BinaryTextureLoader(manager) {\n\t\tconsole.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');\n\t\treturn new DataTextureLoader(manager);\n\t} //\n\n\tBox2.prototype.center = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box2: .center() has been renamed to .getCenter().');\n\t\treturn this.getCenter(optionalTarget);\n\t};\n\n\tBox2.prototype.empty = function () {\n\t\tconsole.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');\n\t\treturn this.isEmpty();\n\t};\n\n\tBox2.prototype.isIntersectionBox = function (box) {\n\t\tconsole.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');\n\t\treturn this.intersectsBox(box);\n\t};\n\n\tBox2.prototype.size = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box2: .size() has been renamed to .getSize().');\n\t\treturn this.getSize(optionalTarget);\n\t}; //\n\n\n\tBox3.prototype.center = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box3: .center() has been renamed to .getCenter().');\n\t\treturn this.getCenter(optionalTarget);\n\t};\n\n\tBox3.prototype.empty = function () {\n\t\tconsole.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');\n\t\treturn this.isEmpty();\n\t};\n\n\tBox3.prototype.isIntersectionBox = function (box) {\n\t\tconsole.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');\n\t\treturn this.intersectsBox(box);\n\t};\n\n\tBox3.prototype.isIntersectionSphere = function (sphere) {\n\t\tconsole.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n\t\treturn this.intersectsSphere(sphere);\n\t};\n\n\tBox3.prototype.size = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box3: .size() has been renamed to .getSize().');\n\t\treturn this.getSize(optionalTarget);\n\t}; //\n\n\n\tSphere.prototype.empty = function () {\n\t\tconsole.warn('THREE.Sphere: .empty() has been renamed to .isEmpty().');\n\t\treturn this.isEmpty();\n\t}; //\n\n\n\tFrustum.prototype.setFromMatrix = function (m) {\n\t\tconsole.warn('THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().');\n\t\treturn this.setFromProjectionMatrix(m);\n\t}; //\n\n\n\tLine3.prototype.center = function (optionalTarget) {\n\t\tconsole.warn('THREE.Line3: .center() has been renamed to .getCenter().');\n\t\treturn this.getCenter(optionalTarget);\n\t}; //\n\n\n\tMatrix3.prototype.flattenToArrayOffset = function (array, offset) {\n\t\tconsole.warn('THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');\n\t\treturn this.toArray(array, offset);\n\t};\n\n\tMatrix3.prototype.multiplyVector3 = function (vector) {\n\t\tconsole.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');\n\t\treturn vector.applyMatrix3(this);\n\t};\n\n\tMatrix3.prototype.multiplyVector3Array = function\n\t\t/* a */\n\t() {\n\t\tconsole.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');\n\t};\n\n\tMatrix3.prototype.applyToBufferAttribute = function (attribute) {\n\t\tconsole.warn('THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.');\n\t\treturn attribute.applyMatrix3(this);\n\t};\n\n\tMatrix3.prototype.applyToVector3Array = function\n\t\t/* array, offset, length */\n\t() {\n\t\tconsole.error('THREE.Matrix3: .applyToVector3Array() has been removed.');\n\t};\n\n\tMatrix3.prototype.getInverse = function (matrix) {\n\t\tconsole.warn('THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');\n\t\treturn this.copy(matrix).invert();\n\t}; //\n\n\n\tMatrix4.prototype.extractPosition = function (m) {\n\t\tconsole.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\n\t\treturn this.copyPosition(m);\n\t};\n\n\tMatrix4.prototype.flattenToArrayOffset = function (array, offset) {\n\t\tconsole.warn('THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');\n\t\treturn this.toArray(array, offset);\n\t};\n\n\tMatrix4.prototype.getPosition = function () {\n\t\tconsole.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');\n\t\treturn new Vector3().setFromMatrixColumn(this, 3);\n\t};\n\n\tMatrix4.prototype.setRotationFromQuaternion = function (q) {\n\t\tconsole.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');\n\t\treturn this.makeRotationFromQuaternion(q);\n\t};\n\n\tMatrix4.prototype.multiplyToArray = function () {\n\t\tconsole.warn('THREE.Matrix4: .multiplyToArray() has been removed.');\n\t};\n\n\tMatrix4.prototype.multiplyVector3 = function (vector) {\n\t\tconsole.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n\t\treturn vector.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.multiplyVector4 = function (vector) {\n\t\tconsole.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n\t\treturn vector.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.multiplyVector3Array = function\n\t\t/* a */\n\t() {\n\t\tconsole.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateAxis = function (v) {\n\t\tconsole.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');\n\t\tv.transformDirection(this);\n\t};\n\n\tMatrix4.prototype.crossVector = function (vector) {\n\t\tconsole.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n\t\treturn vector.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.translate = function () {\n\t\tconsole.error('THREE.Matrix4: .translate() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateX = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateX() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateY = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateY() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateZ = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateZ() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateByAxis = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateByAxis() has been removed.');\n\t};\n\n\tMatrix4.prototype.applyToBufferAttribute = function (attribute) {\n\t\tconsole.warn('THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.');\n\t\treturn attribute.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.applyToVector3Array = function\n\t\t/* array, offset, length */\n\t() {\n\t\tconsole.error('THREE.Matrix4: .applyToVector3Array() has been removed.');\n\t};\n\n\tMatrix4.prototype.makeFrustum = function (left, right, bottom, top, near, far) {\n\t\tconsole.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');\n\t\treturn this.makePerspective(left, right, top, bottom, near, far);\n\t};\n\n\tMatrix4.prototype.getInverse = function (matrix) {\n\t\tconsole.warn('THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');\n\t\treturn this.copy(matrix).invert();\n\t}; //\n\n\n\tPlane.prototype.isIntersectionLine = function (line) {\n\t\tconsole.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');\n\t\treturn this.intersectsLine(line);\n\t}; //\n\n\n\tQuaternion.prototype.multiplyVector3 = function (vector) {\n\t\tconsole.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');\n\t\treturn vector.applyQuaternion(this);\n\t};\n\n\tQuaternion.prototype.inverse = function () {\n\t\tconsole.warn('THREE.Quaternion: .inverse() has been renamed to invert().');\n\t\treturn this.invert();\n\t}; //\n\n\n\tRay.prototype.isIntersectionBox = function (box) {\n\t\tconsole.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');\n\t\treturn this.intersectsBox(box);\n\t};\n\n\tRay.prototype.isIntersectionPlane = function (plane) {\n\t\tconsole.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');\n\t\treturn this.intersectsPlane(plane);\n\t};\n\n\tRay.prototype.isIntersectionSphere = function (sphere) {\n\t\tconsole.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n\t\treturn this.intersectsSphere(sphere);\n\t}; //\n\n\n\tTriangle.prototype.area = function () {\n\t\tconsole.warn('THREE.Triangle: .area() has been renamed to .getArea().');\n\t\treturn this.getArea();\n\t};\n\n\tTriangle.prototype.barycoordFromPoint = function (point, target) {\n\t\tconsole.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n\t\treturn this.getBarycoord(point, target);\n\t};\n\n\tTriangle.prototype.midpoint = function (target) {\n\t\tconsole.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');\n\t\treturn this.getMidpoint(target);\n\t};\n\n\tTriangle.prototypenormal = function (target) {\n\t\tconsole.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n\t\treturn this.getNormal(target);\n\t};\n\n\tTriangle.prototype.plane = function (target) {\n\t\tconsole.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');\n\t\treturn this.getPlane(target);\n\t};\n\n\tTriangle.barycoordFromPoint = function (point, a, b, c, target) {\n\t\tconsole.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n\t\treturn Triangle.getBarycoord(point, a, b, c, target);\n\t};\n\n\tTriangle.normal = function (a, b, c, target) {\n\t\tconsole.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n\t\treturn Triangle.getNormal(a, b, c, target);\n\t}; //\n\n\n\tShape.prototype.extractAllPoints = function (divisions) {\n\t\tconsole.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.');\n\t\treturn this.extractPoints(divisions);\n\t};\n\n\tShape.prototype.extrude = function (options) {\n\t\tconsole.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');\n\t\treturn new ExtrudeGeometry(this, options);\n\t};\n\n\tShape.prototype.makeGeometry = function (options) {\n\t\tconsole.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');\n\t\treturn new ShapeGeometry(this, options);\n\t}; //\n\n\n\tVector2.prototype.fromAttribute = function (attribute, index, offset) {\n\t\tconsole.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\n\t};\n\n\tVector2.prototype.distanceToManhattan = function (v) {\n\t\tconsole.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n\t\treturn this.manhattanDistanceTo(v);\n\t};\n\n\tVector2.prototype.lengthManhattan = function () {\n\t\tconsole.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');\n\t\treturn this.manhattanLength();\n\t}; //\n\n\n\tVector3.prototype.setEulerFromRotationMatrix = function () {\n\t\tconsole.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');\n\t};\n\n\tVector3.prototype.setEulerFromQuaternion = function () {\n\t\tconsole.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');\n\t};\n\n\tVector3.prototype.getPositionFromMatrix = function (m) {\n\t\tconsole.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');\n\t\treturn this.setFromMatrixPosition(m);\n\t};\n\n\tVector3.prototype.getScaleFromMatrix = function (m) {\n\t\tconsole.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\n\t\treturn this.setFromMatrixScale(m);\n\t};\n\n\tVector3.prototype.getColumnFromMatrix = function (index, matrix) {\n\t\tconsole.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');\n\t\treturn this.setFromMatrixColumn(matrix, index);\n\t};\n\n\tVector3.prototype.applyProjection = function (m) {\n\t\tconsole.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');\n\t\treturn this.applyMatrix4(m);\n\t};\n\n\tVector3.prototype.fromAttribute = function (attribute, index, offset) {\n\t\tconsole.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\n\t};\n\n\tVector3.prototype.distanceToManhattan = function (v) {\n\t\tconsole.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n\t\treturn this.manhattanDistanceTo(v);\n\t};\n\n\tVector3.prototype.lengthManhattan = function () {\n\t\tconsole.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');\n\t\treturn this.manhattanLength();\n\t}; //\n\n\n\tVector4.prototype.fromAttribute = function (attribute, index, offset) {\n\t\tconsole.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\n\t};\n\n\tVector4.prototype.lengthManhattan = function () {\n\t\tconsole.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');\n\t\treturn this.manhattanLength();\n\t}; //\n\n\n\tObject3D.prototype.getChildByName = function (name) {\n\t\tconsole.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\n\t\treturn this.getObjectByName(name);\n\t};\n\n\tObject3D.prototype.renderDepth = function () {\n\t\tconsole.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');\n\t};\n\n\tObject3D.prototype.translate = function (distance, axis) {\n\t\tconsole.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');\n\t\treturn this.translateOnAxis(axis, distance);\n\t};\n\n\tObject3D.prototype.getWorldRotation = function () {\n\t\tconsole.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.');\n\t};\n\n\tObject3D.prototype.applyMatrix = function (matrix) {\n\t\tconsole.warn('THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().');\n\t\treturn this.applyMatrix4(matrix);\n\t};\n\n\tObject.defineProperties(Object3D.prototype, {\n\t\teulerOrder: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n\t\t\t\treturn this.rotation.order;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n\t\t\t\tthis.rotation.order = value;\n\t\t\t}\n\t\t},\n\t\tuseQuaternion: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n\t\t\t}\n\t\t}\n\t});\n\n\tMesh.prototype.setDrawMode = function () {\n\t\tconsole.error('THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');\n\t};\n\n\tObject.defineProperties(Mesh.prototype, {\n\t\tdrawMode: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.');\n\t\t\t\treturn TrianglesDrawMode;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');\n\t\t\t}\n\t\t}\n\t});\n\n\tSkinnedMesh.prototype.initBones = function () {\n\t\tconsole.error('THREE.SkinnedMesh: initBones() has been removed.');\n\t}; //\n\n\n\tPerspectiveCamera.prototype.setLens = function (focalLength, filmGauge) {\n\t\tconsole.warn('THREE.PerspectiveCamera.setLens is deprecated. ' + 'Use .setFocalLength and .filmGauge for a photographic setup.');\n\t\tif (filmGauge !== undefined) this.filmGauge = filmGauge;\n\t\tthis.setFocalLength(focalLength);\n\t}; //\n\n\n\tObject.defineProperties(Light.prototype, {\n\t\tonlyShadow: {\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Light: .onlyShadow has been removed.');\n\t\t\t}\n\t\t},\n\t\tshadowCameraFov: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');\n\t\t\t\tthis.shadow.camera.fov = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraLeft: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');\n\t\t\t\tthis.shadow.camera.left = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraRight: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');\n\t\t\t\tthis.shadow.camera.right = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraTop: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');\n\t\t\t\tthis.shadow.camera.top = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraBottom: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');\n\t\t\t\tthis.shadow.camera.bottom = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraNear: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');\n\t\t\t\tthis.shadow.camera.near = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraFar: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');\n\t\t\t\tthis.shadow.camera.far = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraVisible: {\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');\n\t\t\t}\n\t\t},\n\t\tshadowBias: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowBias is now .shadow.bias.');\n\t\t\t\tthis.shadow.bias = value;\n\t\t\t}\n\t\t},\n\t\tshadowDarkness: {\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Light: .shadowDarkness has been removed.');\n\t\t\t}\n\t\t},\n\t\tshadowMapWidth: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');\n\t\t\t\tthis.shadow.mapSize.width = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapHeight: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');\n\t\t\t\tthis.shadow.mapSize.height = value;\n\t\t\t}\n\t\t}\n\t}); //\n\n\tObject.defineProperties(BufferAttribute.prototype, {\n\t\tlength: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');\n\t\t\t\treturn this.array.length;\n\t\t\t}\n\t\t},\n\t\tdynamic: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\n\t\t\t\treturn this.usage === DynamicDrawUsage;\n\t\t\t},\n\t\t\tset: function\n\t\t\t\t/* value */\n\t\t\t() {\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\n\t\t\t\tthis.setUsage(DynamicDrawUsage);\n\t\t\t}\n\t\t}\n\t});\n\n\tBufferAttribute.prototype.setDynamic = function (value) {\n\t\tconsole.warn('THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.');\n\t\tthis.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\n\t\treturn this;\n\t};\n\n\tBufferAttribute.prototype.copyIndicesArray = function\n\t\t/* indices */\n\t() {\n\t\tconsole.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');\n\t}, BufferAttribute.prototype.setArray = function\n\t\t/* array */\n\t() {\n\t\tconsole.error('THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\n\t}; //\n\n\tBufferGeometry.prototype.addIndex = function (index) {\n\t\tconsole.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');\n\t\tthis.setIndex(index);\n\t};\n\n\tBufferGeometry.prototype.addAttribute = function (name, attribute) {\n\t\tconsole.warn('THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().');\n\n\t\tif (!(attribute && attribute.isBufferAttribute) && !(attribute && attribute.isInterleavedBufferAttribute)) {\n\t\t\tconsole.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\n\t\t\treturn this.setAttribute(name, new BufferAttribute(arguments[1], arguments[2]));\n\t\t}\n\n\t\tif (name === 'index') {\n\t\t\tconsole.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\n\t\t\tthis.setIndex(attribute);\n\t\t\treturn this;\n\t\t}\n\n\t\treturn this.setAttribute(name, attribute);\n\t};\n\n\tBufferGeometry.prototype.addDrawCall = function (start, count, indexOffset) {\n\t\tif (indexOffset !== undefined) {\n\t\t\tconsole.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');\n\t\t}\n\n\t\tconsole.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');\n\t\tthis.addGroup(start, count);\n\t};\n\n\tBufferGeometry.prototype.clearDrawCalls = function () {\n\t\tconsole.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');\n\t\tthis.clearGroups();\n\t};\n\n\tBufferGeometry.prototype.computeOffsets = function () {\n\t\tconsole.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');\n\t};\n\n\tBufferGeometry.prototype.removeAttribute = function (name) {\n\t\tconsole.warn('THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().');\n\t\treturn this.deleteAttribute(name);\n\t};\n\n\tBufferGeometry.prototype.applyMatrix = function (matrix) {\n\t\tconsole.warn('THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().');\n\t\treturn this.applyMatrix4(matrix);\n\t};\n\n\tObject.defineProperties(BufferGeometry.prototype, {\n\t\tdrawcalls: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t},\n\t\toffsets: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t}\n\t});\n\n\tInterleavedBuffer.prototype.setDynamic = function (value) {\n\t\tconsole.warn('THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.');\n\t\tthis.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\n\t\treturn this;\n\t};\n\n\tInterleavedBuffer.prototype.setArray = function\n\t\t/* array */\n\t() {\n\t\tconsole.error('THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\n\t}; //\n\n\n\tExtrudeGeometry.prototype.getArrays = function () {\n\t\tconsole.error('THREE.ExtrudeGeometry: .getArrays() has been removed.');\n\t};\n\n\tExtrudeGeometry.prototype.addShapeList = function () {\n\t\tconsole.error('THREE.ExtrudeGeometry: .addShapeList() has been removed.');\n\t};\n\n\tExtrudeGeometry.prototype.addShape = function () {\n\t\tconsole.error('THREE.ExtrudeGeometry: .addShape() has been removed.');\n\t}; //\n\n\n\tScene.prototype.dispose = function () {\n\t\tconsole.error('THREE.Scene: .dispose() has been removed.');\n\t}; //\n\n\n\tUniform.prototype.onUpdate = function () {\n\t\tconsole.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');\n\t\treturn this;\n\t}; //\n\n\n\tObject.defineProperties(Material.prototype, {\n\t\twrapAround: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Material: .wrapAround has been removed.');\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Material: .wrapAround has been removed.');\n\t\t\t}\n\t\t},\n\t\toverdraw: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Material: .overdraw has been removed.');\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Material: .overdraw has been removed.');\n\t\t\t}\n\t\t},\n\t\twrapRGB: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Material: .wrapRGB has been removed.');\n\t\t\t\treturn new Color();\n\t\t\t}\n\t\t},\n\t\tshading: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n\t\t\t\tthis.flatShading = value === FlatShading;\n\t\t\t}\n\t\t},\n\t\tstencilMask: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\n\t\t\t\treturn this.stencilFuncMask;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\n\t\t\t\tthis.stencilFuncMask = value;\n\t\t\t}\n\t\t},\n\t\tvertexTangents: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .vertexTangents has been removed.');\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .vertexTangents has been removed.');\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperties(ShaderMaterial.prototype, {\n\t\tderivatives: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n\t\t\t\treturn this.extensions.derivatives;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n\t\t\t\tthis.extensions.derivatives = value;\n\t\t\t}\n\t\t}\n\t}); //\n\n\tWebGLRenderer.prototype.clearTarget = function (renderTarget, color, depth, stencil) {\n\t\tconsole.warn('THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.');\n\t\tthis.setRenderTarget(renderTarget);\n\t\tthis.clear(color, depth, stencil);\n\t};\n\n\tWebGLRenderer.prototype.animate = function (callback) {\n\t\tconsole.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');\n\t\tthis.setAnimationLoop(callback);\n\t};\n\n\tWebGLRenderer.prototype.getCurrentRenderTarget = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');\n\t\treturn this.getRenderTarget();\n\t};\n\n\tWebGLRenderer.prototype.getMaxAnisotropy = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');\n\t\treturn this.capabilities.getMaxAnisotropy();\n\t};\n\n\tWebGLRenderer.prototype.getPrecision = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');\n\t\treturn this.capabilities.precision;\n\t};\n\n\tWebGLRenderer.prototype.resetGLState = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');\n\t\treturn this.state.reset();\n\t};\n\n\tWebGLRenderer.prototype.supportsFloatTextures = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');\n\t\treturn this.extensions.get('OES_texture_float');\n\t};\n\n\tWebGLRenderer.prototype.supportsHalfFloatTextures = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');\n\t\treturn this.extensions.get('OES_texture_half_float');\n\t};\n\n\tWebGLRenderer.prototype.supportsStandardDerivatives = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');\n\t\treturn this.extensions.get('OES_standard_derivatives');\n\t};\n\n\tWebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');\n\t\treturn this.extensions.get('WEBGL_compressed_texture_s3tc');\n\t};\n\n\tWebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');\n\t\treturn this.extensions.get('WEBGL_compressed_texture_pvrtc');\n\t};\n\n\tWebGLRenderer.prototype.supportsBlendMinMax = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');\n\t\treturn this.extensions.get('EXT_blend_minmax');\n\t};\n\n\tWebGLRenderer.prototype.supportsVertexTextures = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');\n\t\treturn this.capabilities.vertexTextures;\n\t};\n\n\tWebGLRenderer.prototype.supportsInstancedArrays = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');\n\t\treturn this.extensions.get('ANGLE_instanced_arrays');\n\t};\n\n\tWebGLRenderer.prototype.enableScissorTest = function (boolean) {\n\t\tconsole.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');\n\t\tthis.setScissorTest(boolean);\n\t};\n\n\tWebGLRenderer.prototype.initMaterial = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.addPrePlugin = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.addPostPlugin = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.updateShadowMap = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setFaceCulling = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.allocTextureUnit = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .allocTextureUnit() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setTexture = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setTexture() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setTexture2D = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setTexture2D() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setTextureCube = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setTextureCube() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.getActiveMipMapLevel = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().');\n\t\treturn this.getActiveMipmapLevel();\n\t};\n\n\tObject.defineProperties(WebGLRenderer.prototype, {\n\t\tshadowMapEnabled: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.enabled;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');\n\t\t\t\tthis.shadowMap.enabled = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapType: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.type;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');\n\t\t\t\tthis.shadowMap.type = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapCullFace: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function\n\t\t\t\t/* value */\n\t\t\t() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t},\n\t\tcontext: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.');\n\t\t\t\treturn this.getContext();\n\t\t\t}\n\t\t},\n\t\tvr: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .vr has been renamed to .xr');\n\t\t\t\treturn this.xr;\n\t\t\t}\n\t\t},\n\t\tgammaInput: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');\n\t\t\t}\n\t\t},\n\t\tgammaOutput: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');\n\t\t\t\tthis.outputEncoding = value === true ? sRGBEncoding : LinearEncoding;\n\t\t\t}\n\t\t},\n\t\ttoneMappingWhitePoint: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\n\t\t\t\treturn 1.0;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\n\t\t\t}\n\t\t},\n\t\tgammaFactor: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaFactor has been removed.');\n\t\t\t\treturn 2;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaFactor has been removed.');\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperties(WebGLShadowMap.prototype, {\n\t\tcullFace: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function\n\t\t\t\t/* cullFace */\n\t\t\t() {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t},\n\t\trenderReverseSided: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t},\n\t\trenderSingleSided: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t}\n\t});\n\tfunction WebGLRenderTargetCube(width, height, options) {\n\t\tconsole.warn('THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).');\n\t\treturn new WebGLCubeRenderTarget(width, options);\n\t} //\n\n\tObject.defineProperties(WebGLRenderTarget.prototype, {\n\t\twrapS: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n\t\t\t\treturn this.texture.wrapS;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n\t\t\t\tthis.texture.wrapS = value;\n\t\t\t}\n\t\t},\n\t\twrapT: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n\t\t\t\treturn this.texture.wrapT;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n\t\t\t\tthis.texture.wrapT = value;\n\t\t\t}\n\t\t},\n\t\tmagFilter: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n\t\t\t\treturn this.texture.magFilter;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n\t\t\t\tthis.texture.magFilter = value;\n\t\t\t}\n\t\t},\n\t\tminFilter: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n\t\t\t\treturn this.texture.minFilter;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n\t\t\t\tthis.texture.minFilter = value;\n\t\t\t}\n\t\t},\n\t\tanisotropy: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n\t\t\t\treturn this.texture.anisotropy;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n\t\t\t\tthis.texture.anisotropy = value;\n\t\t\t}\n\t\t},\n\t\toffset: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n\t\t\t\treturn this.texture.offset;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n\t\t\t\tthis.texture.offset = value;\n\t\t\t}\n\t\t},\n\t\trepeat: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n\t\t\t\treturn this.texture.repeat;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n\t\t\t\tthis.texture.repeat = value;\n\t\t\t}\n\t\t},\n\t\tformat: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n\t\t\t\treturn this.texture.format;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n\t\t\t\tthis.texture.format = value;\n\t\t\t}\n\t\t},\n\t\ttype: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n\t\t\t\treturn this.texture.type;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n\t\t\t\tthis.texture.type = value;\n\t\t\t}\n\t\t},\n\t\tgenerateMipmaps: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n\t\t\t\treturn this.texture.generateMipmaps;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n\t\t\t\tthis.texture.generateMipmaps = value;\n\t\t\t}\n\t\t}\n\t}); //\n\n\tAudio.prototype.load = function (file) {\n\t\tconsole.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');\n\t\tconst scope = this;\n\t\tconst audioLoader = new AudioLoader();\n\t\taudioLoader.load(file, function (buffer) {\n\t\t\tscope.setBuffer(buffer);\n\t\t});\n\t\treturn this;\n\t};\n\n\tAudioAnalyser.prototype.getData = function () {\n\t\tconsole.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');\n\t\treturn this.getFrequencyData();\n\t}; //\n\n\n\tCubeCamera.prototype.updateCubeMap = function (renderer, scene) {\n\t\tconsole.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');\n\t\treturn this.update(renderer, scene);\n\t};\n\n\tCubeCamera.prototype.clear = function (renderer, color, depth, stencil) {\n\t\tconsole.warn('THREE.CubeCamera: .clear() is now .renderTarget.clear().');\n\t\treturn this.renderTarget.clear(renderer, color, depth, stencil);\n\t};\n\n\tImageUtils.crossOrigin = undefined;\n\n\tImageUtils.loadTexture = function (url, mapping, onLoad, onError) {\n\t\tconsole.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');\n\t\tconst loader = new TextureLoader();\n\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\tconst texture = loader.load(url, onLoad, undefined, onError);\n\t\tif (mapping) texture.mapping = mapping;\n\t\treturn texture;\n\t};\n\n\tImageUtils.loadTextureCube = function (urls, mapping, onLoad, onError) {\n\t\tconsole.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');\n\t\tconst loader = new CubeTextureLoader();\n\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\tconst texture = loader.load(urls, onLoad, undefined, onError);\n\t\tif (mapping) texture.mapping = mapping;\n\t\treturn texture;\n\t};\n\n\tImageUtils.loadCompressedTexture = function () {\n\t\tconsole.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');\n\t};\n\n\tImageUtils.loadCompressedTextureCube = function () {\n\t\tconsole.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');\n\t}; //\n\n\n\tfunction CanvasRenderer() {\n\t\tconsole.error('THREE.CanvasRenderer has been removed');\n\t} //\n\n\tfunction JSONLoader() {\n\t\tconsole.error('THREE.JSONLoader has been removed.');\n\t} //\n\n\tconst SceneUtils = {\n\t\tcreateMultiMaterialObject: function\n\t\t\t/* geometry, materials */\n\t\t() {\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n\t\t},\n\t\tdetach: function\n\t\t\t/* child, parent, scene */\n\t\t() {\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n\t\t},\n\t\tattach: function\n\t\t\t/* child, scene, parent */\n\t\t() {\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n\t\t}\n\t}; //\n\n\tfunction LensFlare() {\n\t\tconsole.error('THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js');\n\t} //\n\n\tfunction ParametricGeometry() {\n\t\tconsole.error('THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js');\n\t\treturn new BufferGeometry();\n\t}\n\tfunction TextGeometry() {\n\t\tconsole.error('THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js');\n\t\treturn new BufferGeometry();\n\t}\n\tfunction FontLoader() {\n\t\tconsole.error('THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js');\n\t}\n\tfunction Font() {\n\t\tconsole.error('THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js');\n\t}\n\tfunction ImmediateRenderObject() {\n\t\tconsole.error('THREE.ImmediateRenderObject has been removed.');\n\t}\n\n\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('register', {\n\t\t\tdetail: {\n\t\t\t\trevision: REVISION\n\t\t\t}\n\t\t}));\n\t}\n\n\tif (typeof window !== 'undefined') {\n\t\tif (window.__THREE__) {\n\t\t\tconsole.warn('WARNING: Multiple instances of Three.js being imported.');\n\t\t} else {\n\t\t\twindow.__THREE__ = REVISION;\n\t\t}\n\t}\n\n\texports.ACESFilmicToneMapping = ACESFilmicToneMapping;\n\texports.AddEquation = AddEquation;\n\texports.AddOperation = AddOperation;\n\texports.AdditiveAnimationBlendMode = AdditiveAnimationBlendMode;\n\texports.AdditiveBlending = AdditiveBlending;\n\texports.AlphaFormat = AlphaFormat;\n\texports.AlwaysDepth = AlwaysDepth;\n\texports.AlwaysStencilFunc = AlwaysStencilFunc;\n\texports.AmbientLight = AmbientLight;\n\texports.AmbientLightProbe = AmbientLightProbe;\n\texports.AnimationClip = AnimationClip;\n\texports.AnimationLoader = AnimationLoader;\n\texports.AnimationMixer = AnimationMixer;\n\texports.AnimationObjectGroup = AnimationObjectGroup;\n\texports.AnimationUtils = AnimationUtils;\n\texports.ArcCurve = ArcCurve;\n\texports.ArrayCamera = ArrayCamera;\n\texports.ArrowHelper = ArrowHelper;\n\texports.Audio = Audio;\n\texports.AudioAnalyser = AudioAnalyser;\n\texports.AudioContext = AudioContext;\n\texports.AudioListener = AudioListener;\n\texports.AudioLoader = AudioLoader;\n\texports.AxesHelper = AxesHelper;\n\texports.AxisHelper = AxisHelper;\n\texports.BackSide = BackSide;\n\texports.BasicDepthPacking = BasicDepthPacking;\n\texports.BasicShadowMap = BasicShadowMap;\n\texports.BinaryTextureLoader = BinaryTextureLoader;\n\texports.Bone = Bone;\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\texports.BoundingBoxHelper = BoundingBoxHelper;\n\texports.Box2 = Box2;\n\texports.Box3 = Box3;\n\texports.Box3Helper = Box3Helper;\n\texports.BoxBufferGeometry = BoxGeometry;\n\texports.BoxGeometry = BoxGeometry;\n\texports.BoxHelper = BoxHelper;\n\texports.BufferAttribute = BufferAttribute;\n\texports.BufferGeometry = BufferGeometry;\n\texports.BufferGeometryLoader = BufferGeometryLoader;\n\texports.ByteType = ByteType;\n\texports.Cache = Cache;\n\texports.Camera = Camera;\n\texports.CameraHelper = CameraHelper;\n\texports.CanvasRenderer = CanvasRenderer;\n\texports.CanvasTexture = CanvasTexture;\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\texports.CineonToneMapping = CineonToneMapping;\n\texports.CircleBufferGeometry = CircleGeometry;\n\texports.CircleGeometry = CircleGeometry;\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\texports.Clock = Clock;\n\texports.Color = Color;\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\texports.CompressedTexture = CompressedTexture;\n\texports.CompressedTextureLoader = CompressedTextureLoader;\n\texports.ConeBufferGeometry = ConeGeometry;\n\texports.ConeGeometry = ConeGeometry;\n\texports.CubeCamera = CubeCamera;\n\texports.CubeReflectionMapping = CubeReflectionMapping;\n\texports.CubeRefractionMapping = CubeRefractionMapping;\n\texports.CubeTexture = CubeTexture;\n\texports.CubeTextureLoader = CubeTextureLoader;\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n\texports.CubicBezierCurve = CubicBezierCurve;\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\texports.CubicInterpolant = CubicInterpolant;\n\texports.CullFaceBack = CullFaceBack;\n\texports.CullFaceFront = CullFaceFront;\n\texports.CullFaceFrontBack = CullFaceFrontBack;\n\texports.CullFaceNone = CullFaceNone;\n\texports.Curve = Curve;\n\texports.CurvePath = CurvePath;\n\texports.CustomBlending = CustomBlending;\n\texports.CustomToneMapping = CustomToneMapping;\n\texports.CylinderBufferGeometry = CylinderGeometry;\n\texports.CylinderGeometry = CylinderGeometry;\n\texports.Cylindrical = Cylindrical;\n\texports.DataTexture = DataTexture;\n\texports.DataTexture2DArray = DataTexture2DArray;\n\texports.DataTexture3D = DataTexture3D;\n\texports.DataTextureLoader = DataTextureLoader;\n\texports.DataUtils = DataUtils;\n\texports.DecrementStencilOp = DecrementStencilOp;\n\texports.DecrementWrapStencilOp = DecrementWrapStencilOp;\n\texports.DefaultLoadingManager = DefaultLoadingManager;\n\texports.DepthFormat = DepthFormat;\n\texports.DepthStencilFormat = DepthStencilFormat;\n\texports.DepthTexture = DepthTexture;\n\texports.DirectionalLight = DirectionalLight;\n\texports.DirectionalLightHelper = DirectionalLightHelper;\n\texports.DiscreteInterpolant = DiscreteInterpolant;\n\texports.DodecahedronBufferGeometry = DodecahedronGeometry;\n\texports.DodecahedronGeometry = DodecahedronGeometry;\n\texports.DoubleSide = DoubleSide;\n\texports.DstAlphaFactor = DstAlphaFactor;\n\texports.DstColorFactor = DstColorFactor;\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\n\texports.DynamicCopyUsage = DynamicCopyUsage;\n\texports.DynamicDrawUsage = DynamicDrawUsage;\n\texports.DynamicReadUsage = DynamicReadUsage;\n\texports.EdgesGeometry = EdgesGeometry;\n\texports.EdgesHelper = EdgesHelper;\n\texports.EllipseCurve = EllipseCurve;\n\texports.EqualDepth = EqualDepth;\n\texports.EqualStencilFunc = EqualStencilFunc;\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\texports.Euler = Euler;\n\texports.EventDispatcher = EventDispatcher;\n\texports.ExtrudeBufferGeometry = ExtrudeGeometry;\n\texports.ExtrudeGeometry = ExtrudeGeometry;\n\texports.FaceColors = FaceColors;\n\texports.FileLoader = FileLoader;\n\texports.FlatShading = FlatShading;\n\texports.Float16BufferAttribute = Float16BufferAttribute;\n\texports.Float32Attribute = Float32Attribute;\n\texports.Float32BufferAttribute = Float32BufferAttribute;\n\texports.Float64Attribute = Float64Attribute;\n\texports.Float64BufferAttribute = Float64BufferAttribute;\n\texports.FloatType = FloatType;\n\texports.Fog = Fog;\n\texports.FogExp2 = FogExp2;\n\texports.Font = Font;\n\texports.FontLoader = FontLoader;\n\texports.FramebufferTexture = FramebufferTexture;\n\texports.FrontSide = FrontSide;\n\texports.Frustum = Frustum;\n\texports.GLBufferAttribute = GLBufferAttribute;\n\texports.GLSL1 = GLSL1;\n\texports.GLSL3 = GLSL3;\n\texports.GreaterDepth = GreaterDepth;\n\texports.GreaterEqualDepth = GreaterEqualDepth;\n\texports.GreaterEqualStencilFunc = GreaterEqualStencilFunc;\n\texports.GreaterStencilFunc = GreaterStencilFunc;\n\texports.GridHelper = GridHelper;\n\texports.Group = Group;\n\texports.HalfFloatType = HalfFloatType;\n\texports.HemisphereLight = HemisphereLight;\n\texports.HemisphereLightHelper = HemisphereLightHelper;\n\texports.HemisphereLightProbe = HemisphereLightProbe;\n\texports.IcosahedronBufferGeometry = IcosahedronGeometry;\n\texports.IcosahedronGeometry = IcosahedronGeometry;\n\texports.ImageBitmapLoader = ImageBitmapLoader;\n\texports.ImageLoader = ImageLoader;\n\texports.ImageUtils = ImageUtils;\n\texports.ImmediateRenderObject = ImmediateRenderObject;\n\texports.IncrementStencilOp = IncrementStencilOp;\n\texports.IncrementWrapStencilOp = IncrementWrapStencilOp;\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\texports.InstancedMesh = InstancedMesh;\n\texports.Int16Attribute = Int16Attribute;\n\texports.Int16BufferAttribute = Int16BufferAttribute;\n\texports.Int32Attribute = Int32Attribute;\n\texports.Int32BufferAttribute = Int32BufferAttribute;\n\texports.Int8Attribute = Int8Attribute;\n\texports.Int8BufferAttribute = Int8BufferAttribute;\n\texports.IntType = IntType;\n\texports.InterleavedBuffer = InterleavedBuffer;\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\texports.Interpolant = Interpolant;\n\texports.InterpolateDiscrete = InterpolateDiscrete;\n\texports.InterpolateLinear = InterpolateLinear;\n\texports.InterpolateSmooth = InterpolateSmooth;\n\texports.InvertStencilOp = InvertStencilOp;\n\texports.JSONLoader = JSONLoader;\n\texports.KeepStencilOp = KeepStencilOp;\n\texports.KeyframeTrack = KeyframeTrack;\n\texports.LOD = LOD;\n\texports.LatheBufferGeometry = LatheGeometry;\n\texports.LatheGeometry = LatheGeometry;\n\texports.Layers = Layers;\n\texports.LensFlare = LensFlare;\n\texports.LessDepth = LessDepth;\n\texports.LessEqualDepth = LessEqualDepth;\n\texports.LessEqualStencilFunc = LessEqualStencilFunc;\n\texports.LessStencilFunc = LessStencilFunc;\n\texports.Light = Light;\n\texports.LightProbe = LightProbe;\n\texports.Line = Line;\n\texports.Line3 = Line3;\n\texports.LineBasicMaterial = LineBasicMaterial;\n\texports.LineCurve = LineCurve;\n\texports.LineCurve3 = LineCurve3;\n\texports.LineDashedMaterial = LineDashedMaterial;\n\texports.LineLoop = LineLoop;\n\texports.LinePieces = LinePieces;\n\texports.LineSegments = LineSegments;\n\texports.LineStrip = LineStrip;\n\texports.LinearEncoding = LinearEncoding;\n\texports.LinearFilter = LinearFilter;\n\texports.LinearInterpolant = LinearInterpolant;\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\texports.LinearMipmapLinearFilter = LinearMipmapLinearFilter;\n\texports.LinearMipmapNearestFilter = LinearMipmapNearestFilter;\n\texports.LinearToneMapping = LinearToneMapping;\n\texports.Loader = Loader;\n\texports.LoaderUtils = LoaderUtils;\n\texports.LoadingManager = LoadingManager;\n\texports.LoopOnce = LoopOnce;\n\texports.LoopPingPong = LoopPingPong;\n\texports.LoopRepeat = LoopRepeat;\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\texports.LuminanceFormat = LuminanceFormat;\n\texports.MOUSE = MOUSE;\n\texports.Material = Material;\n\texports.MaterialLoader = MaterialLoader;\n\texports.Math = MathUtils;\n\texports.MathUtils = MathUtils;\n\texports.Matrix3 = Matrix3;\n\texports.Matrix4 = Matrix4;\n\texports.MaxEquation = MaxEquation;\n\texports.Mesh = Mesh;\n\texports.MeshBasicMaterial = MeshBasicMaterial;\n\texports.MeshDepthMaterial = MeshDepthMaterial;\n\texports.MeshDistanceMaterial = MeshDistanceMaterial;\n\texports.MeshFaceMaterial = MeshFaceMaterial;\n\texports.MeshLambertMaterial = MeshLambertMaterial;\n\texports.MeshMatcapMaterial = MeshMatcapMaterial;\n\texports.MeshNormalMaterial = MeshNormalMaterial;\n\texports.MeshPhongMaterial = MeshPhongMaterial;\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\texports.MeshStandardMaterial = MeshStandardMaterial;\n\texports.MeshToonMaterial = MeshToonMaterial;\n\texports.MinEquation = MinEquation;\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\texports.MixOperation = MixOperation;\n\texports.MultiMaterial = MultiMaterial;\n\texports.MultiplyBlending = MultiplyBlending;\n\texports.MultiplyOperation = MultiplyOperation;\n\texports.NearestFilter = NearestFilter;\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\texports.NearestMipmapLinearFilter = NearestMipmapLinearFilter;\n\texports.NearestMipmapNearestFilter = NearestMipmapNearestFilter;\n\texports.NeverDepth = NeverDepth;\n\texports.NeverStencilFunc = NeverStencilFunc;\n\texports.NoBlending = NoBlending;\n\texports.NoColors = NoColors;\n\texports.NoToneMapping = NoToneMapping;\n\texports.NormalAnimationBlendMode = NormalAnimationBlendMode;\n\texports.NormalBlending = NormalBlending;\n\texports.NotEqualDepth = NotEqualDepth;\n\texports.NotEqualStencilFunc = NotEqualStencilFunc;\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\texports.Object3D = Object3D;\n\texports.ObjectLoader = ObjectLoader;\n\texports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\n\texports.OctahedronBufferGeometry = OctahedronGeometry;\n\texports.OctahedronGeometry = OctahedronGeometry;\n\texports.OneFactor = OneFactor;\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\texports.OrthographicCamera = OrthographicCamera;\n\texports.PCFShadowMap = PCFShadowMap;\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\texports.PMREMGenerator = PMREMGenerator;\n\texports.ParametricGeometry = ParametricGeometry;\n\texports.Particle = Particle;\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\n\texports.ParticleSystem = ParticleSystem;\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\n\texports.Path = Path;\n\texports.PerspectiveCamera = PerspectiveCamera;\n\texports.Plane = Plane;\n\texports.PlaneBufferGeometry = PlaneGeometry;\n\texports.PlaneGeometry = PlaneGeometry;\n\texports.PlaneHelper = PlaneHelper;\n\texports.PointCloud = PointCloud;\n\texports.PointCloudMaterial = PointCloudMaterial;\n\texports.PointLight = PointLight;\n\texports.PointLightHelper = PointLightHelper;\n\texports.Points = Points;\n\texports.PointsMaterial = PointsMaterial;\n\texports.PolarGridHelper = PolarGridHelper;\n\texports.PolyhedronBufferGeometry = PolyhedronGeometry;\n\texports.PolyhedronGeometry = PolyhedronGeometry;\n\texports.PositionalAudio = PositionalAudio;\n\texports.PropertyBinding = PropertyBinding;\n\texports.PropertyMixer = PropertyMixer;\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\texports.Quaternion = Quaternion;\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\texports.REVISION = REVISION;\n\texports.RGBADepthPacking = RGBADepthPacking;\n\texports.RGBAFormat = RGBAFormat;\n\texports.RGBAIntegerFormat = RGBAIntegerFormat;\n\texports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\n\texports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\n\texports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\n\texports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\n\texports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\n\texports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\n\texports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\n\texports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\n\texports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\n\texports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\n\texports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\n\texports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\n\texports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\n\texports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\n\texports.RGBA_BPTC_Format = RGBA_BPTC_Format;\n\texports.RGBA_ETC2_EAC_Format = RGBA_ETC2_EAC_Format;\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\texports.RGBFormat = RGBFormat;\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\texports.RGB_ETC2_Format = RGB_ETC2_Format;\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\texports.RGFormat = RGFormat;\n\texports.RGIntegerFormat = RGIntegerFormat;\n\texports.RawShaderMaterial = RawShaderMaterial;\n\texports.Ray = Ray;\n\texports.Raycaster = Raycaster;\n\texports.RectAreaLight = RectAreaLight;\n\texports.RedFormat = RedFormat;\n\texports.RedIntegerFormat = RedIntegerFormat;\n\texports.ReinhardToneMapping = ReinhardToneMapping;\n\texports.RepeatWrapping = RepeatWrapping;\n\texports.ReplaceStencilOp = ReplaceStencilOp;\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\texports.RingBufferGeometry = RingGeometry;\n\texports.RingGeometry = RingGeometry;\n\texports.Scene = Scene;\n\texports.SceneUtils = SceneUtils;\n\texports.ShaderChunk = ShaderChunk;\n\texports.ShaderLib = ShaderLib;\n\texports.ShaderMaterial = ShaderMaterial;\n\texports.ShadowMaterial = ShadowMaterial;\n\texports.Shape = Shape;\n\texports.ShapeBufferGeometry = ShapeGeometry;\n\texports.ShapeGeometry = ShapeGeometry;\n\texports.ShapePath = ShapePath;\n\texports.ShapeUtils = ShapeUtils;\n\texports.ShortType = ShortType;\n\texports.Skeleton = Skeleton;\n\texports.SkeletonHelper = SkeletonHelper;\n\texports.SkinnedMesh = SkinnedMesh;\n\texports.SmoothShading = SmoothShading;\n\texports.Sphere = Sphere;\n\texports.SphereBufferGeometry = SphereGeometry;\n\texports.SphereGeometry = SphereGeometry;\n\texports.Spherical = Spherical;\n\texports.SphericalHarmonics3 = SphericalHarmonics3;\n\texports.SplineCurve = SplineCurve;\n\texports.SpotLight = SpotLight;\n\texports.SpotLightHelper = SpotLightHelper;\n\texports.Sprite = Sprite;\n\texports.SpriteMaterial = SpriteMaterial;\n\texports.SrcAlphaFactor = SrcAlphaFactor;\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\texports.SrcColorFactor = SrcColorFactor;\n\texports.StaticCopyUsage = StaticCopyUsage;\n\texports.StaticDrawUsage = StaticDrawUsage;\n\texports.StaticReadUsage = StaticReadUsage;\n\texports.StereoCamera = StereoCamera;\n\texports.StreamCopyUsage = StreamCopyUsage;\n\texports.StreamDrawUsage = StreamDrawUsage;\n\texports.StreamReadUsage = StreamReadUsage;\n\texports.StringKeyframeTrack = StringKeyframeTrack;\n\texports.SubtractEquation = SubtractEquation;\n\texports.SubtractiveBlending = SubtractiveBlending;\n\texports.TOUCH = TOUCH;\n\texports.TangentSpaceNormalMap = TangentSpaceNormalMap;\n\texports.TetrahedronBufferGeometry = TetrahedronGeometry;\n\texports.TetrahedronGeometry = TetrahedronGeometry;\n\texports.TextGeometry = TextGeometry;\n\texports.Texture = Texture;\n\texports.TextureLoader = TextureLoader;\n\texports.TorusBufferGeometry = TorusGeometry;\n\texports.TorusGeometry = TorusGeometry;\n\texports.TorusKnotBufferGeometry = TorusKnotGeometry;\n\texports.TorusKnotGeometry = TorusKnotGeometry;\n\texports.Triangle = Triangle;\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\texports.TrianglesDrawMode = TrianglesDrawMode;\n\texports.TubeBufferGeometry = TubeGeometry;\n\texports.TubeGeometry = TubeGeometry;\n\texports.UVMapping = UVMapping;\n\texports.Uint16Attribute = Uint16Attribute;\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\n\texports.Uint32Attribute = Uint32Attribute;\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\n\texports.Uint8Attribute = Uint8Attribute;\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n\texports.Uniform = Uniform;\n\texports.UniformsLib = UniformsLib;\n\texports.UniformsUtils = UniformsUtils;\n\texports.UnsignedByteType = UnsignedByteType;\n\texports.UnsignedInt248Type = UnsignedInt248Type;\n\texports.UnsignedIntType = UnsignedIntType;\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\texports.UnsignedShortType = UnsignedShortType;\n\texports.VSMShadowMap = VSMShadowMap;\n\texports.Vector2 = Vector2;\n\texports.Vector3 = Vector3;\n\texports.Vector4 = Vector4;\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\texports.Vertex = Vertex;\n\texports.VertexColors = VertexColors;\n\texports.VideoTexture = VideoTexture;\n\texports.WebGL1Renderer = WebGL1Renderer;\n\texports.WebGLCubeRenderTarget = WebGLCubeRenderTarget;\n\texports.WebGLMultipleRenderTargets = WebGLMultipleRenderTargets;\n\texports.WebGLMultisampleRenderTarget = WebGLMultisampleRenderTarget;\n\texports.WebGLRenderTarget = WebGLRenderTarget;\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n\texports.WebGLRenderer = WebGLRenderer;\n\texports.WebGLUtils = WebGLUtils;\n\texports.WireframeGeometry = WireframeGeometry;\n\texports.WireframeHelper = WireframeHelper;\n\texports.WrapAroundEnding = WrapAroundEnding;\n\texports.XHRLoader = XHRLoader;\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\texports.ZeroFactor = ZeroFactor;\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\texports.ZeroStencilOp = ZeroStencilOp;\n\texports._SRGBAFormat = _SRGBAFormat;\n\texports.sRGBEncoding = sRGBEncoding;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"],"mappings":"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M,aAAa;AAEnB,QAAM,WAAW;AACjB,QAAM,aAAa;AAEnB,QAAM,WAAW;AACjB,QAAM,aAAa;AAEnB,QAAM,WAAW;AACjB,QAAM,aAAa;AAEnB,QAAM,WAAW;AACjB,QAAM,aAAa;AAEnB,QAAM,WAAW;AACjB,QAAM,aAAa;AAEnB,QAAM,WAAW;AACjB,QAAM,aAAa;AAEnB,QAAM,WAAW;AACjB,QAAM,aAAa;AAEnB,QAAM,WAAW;AACjB,QAAM,aAAa;AAEnB,QAAM,WAAW;AACjB,QAAM,aAAa;AAEnB,QAAM,cAAc;AAAA,IACnB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IAC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","names":[]}]}
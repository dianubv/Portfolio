{"remainingRequest":"/home/diane/Documents/MDT/Portfolio/node_modules/esbuild-loader/dist/index.js??ref--2-1!/home/diane/Documents/MDT/Portfolio/node_modules/@nuxt/image/dist/runtime/image.js","dependencies":[{"path":"/home/diane/Documents/MDT/Portfolio/node_modules/@nuxt/image/dist/runtime/image.js","mtime":1696601674208},{"path":"/home/diane/Documents/MDT/Portfolio/node_modules/cache-loader/dist/cjs.js","mtime":1696602851329},{"path":"/home/diane/Documents/MDT/Portfolio/node_modules/esbuild-loader/dist/index.js","mtime":1696601673236}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/diane/Documents/MDT/Portfolio/node_modules/@nuxt/image/dist/runtime/image.js"],"sourcesContent":["import defu from \"defu\";\nimport { hasProtocol, parseURL, joinURL, withLeadingSlash } from \"ufo\";\nimport { imageMeta } from \"./utils/meta\";\nimport { parseSize } from \"./utils\";\nimport { useStaticImageMap } from \"./utils/static-map\";\nexport function createImage(globalOptions, nuxtContext) {\n  const staticImageManifest = process.client && process.static ? useStaticImageMap(nuxtContext) : {};\n  const ctx = {\n    options: globalOptions,\n    nuxtContext\n  };\n  const getImage = function(input, options = {}) {\n    const image = resolveImage(ctx, input, options);\n    if (image.isStatic) {\n      handleStaticImage(image, input);\n    }\n    return image;\n  };\n  const $img = function $img2(input, modifiers = {}, options = {}) {\n    return getImage(input, {\n      ...options,\n      modifiers: defu(modifiers, options.modifiers || {})\n    }).url;\n  };\n  function handleStaticImage(image, input) {\n    if (process.static) {\n      if (process.client && \"fetchPayload\" in window.$nuxt) {\n        const mappedURL = staticImageManifest[image.url];\n        image.url = mappedURL || input;\n        return image;\n      }\n      if (process.server) {\n        const { ssrContext } = ctx.nuxtContext;\n        if (ssrContext) {\n          const ssrState = ssrContext.nuxt || {};\n          const staticImages = ssrState._img = ssrState._img || {};\n          const ssrData = ssrState.data?.[0];\n          if (ssrData) {\n            ssrData._img = staticImages;\n          }\n          const mapToStatic = ssrContext.image?.mapToStatic;\n          if (typeof mapToStatic === \"function\") {\n            const mappedURL = mapToStatic(image, input);\n            if (mappedURL) {\n              staticImages[image.url] = mappedURL;\n              image.url = mappedURL;\n            }\n          }\n        }\n      }\n    } else if (process.env.NODE_ENV === \"production\") {\n      image.url = input;\n    }\n  }\n  for (const presetName in globalOptions.presets) {\n    $img[presetName] = (source, modifiers, options) => $img(source, modifiers, { ...globalOptions.presets[presetName], ...options });\n  }\n  $img.options = globalOptions;\n  $img.getImage = getImage;\n  $img.getMeta = (input, options) => getMeta(ctx, input, options);\n  $img.getSizes = (input, options) => getSizes(ctx, input, options);\n  ctx.$img = $img;\n  return $img;\n}\nasync function getMeta(ctx, input, options) {\n  const image = resolveImage(ctx, input, { ...options });\n  if (typeof image.getMeta === \"function\") {\n    return await image.getMeta();\n  } else {\n    return await imageMeta(ctx, image.url);\n  }\n}\nfunction resolveImage(ctx, input, options) {\n  if (typeof input !== \"string\" || input === \"\") {\n    throw new TypeError(`input must be a string (received ${typeof input}: ${JSON.stringify(input)})`);\n  }\n  if (input.startsWith(\"data:\")) {\n    return {\n      url: input\n    };\n  }\n  const { provider, defaults } = getProvider(ctx, options.provider || ctx.options.provider);\n  const preset = getPreset(ctx, options.preset);\n  input = hasProtocol(input) ? input : withLeadingSlash(input);\n  if (!provider.supportsAlias) {\n    for (const base in ctx.options.alias) {\n      if (input.startsWith(base)) {\n        input = joinURL(ctx.options.alias[base], input.substr(base.length));\n      }\n    }\n  }\n  if (provider.validateDomains && hasProtocol(input)) {\n    const inputHost = parseURL(input).host;\n    if (!ctx.options.domains.find((d) => d === inputHost)) {\n      return {\n        url: input\n      };\n    }\n  }\n  const _options = defu(options, preset, defaults);\n  _options.modifiers = { ..._options.modifiers };\n  const expectedFormat = _options.modifiers.format;\n  if (_options.modifiers?.width) {\n    _options.modifiers.width = parseSize(_options.modifiers.width);\n  }\n  if (_options.modifiers?.height) {\n    _options.modifiers.height = parseSize(_options.modifiers.height);\n  }\n  const image = provider.getImage(input, _options, ctx);\n  image.format = image.format || expectedFormat || \"\";\n  return image;\n}\nfunction getProvider(ctx, name) {\n  const provider = ctx.options.providers[name];\n  if (!provider) {\n    throw new Error(\"Unknown provider: \" + name);\n  }\n  return provider;\n}\nfunction getPreset(ctx, name) {\n  if (!name) {\n    return {};\n  }\n  if (!ctx.options.presets[name]) {\n    throw new Error(\"Unknown preset: \" + name);\n  }\n  return ctx.options.presets[name];\n}\nfunction getSizes(ctx, input, opts) {\n  const width = parseSize(opts.modifiers?.width);\n  const height = parseSize(opts.modifiers?.height);\n  const hwRatio = width && height ? height / width : 0;\n  const variants = [];\n  const sizes = {};\n  if (typeof opts.sizes === \"string\") {\n    for (const entry of opts.sizes.split(/[\\s,]+/).filter((e) => e)) {\n      const s = entry.split(\":\");\n      if (s.length !== 2) {\n        continue;\n      }\n      sizes[s[0].trim()] = s[1].trim();\n    }\n  } else {\n    Object.assign(sizes, opts.sizes);\n  }\n  for (const key in sizes) {\n    const screenMaxWidth = ctx.options.screens && ctx.options.screens[key] || parseInt(key);\n    let size = String(sizes[key]);\n    const isFluid = size.endsWith(\"vw\");\n    if (!isFluid && /^\\d+$/.test(size)) {\n      size = size + \"px\";\n    }\n    if (!isFluid && !size.endsWith(\"px\")) {\n      continue;\n    }\n    let _cWidth = parseInt(size);\n    if (!screenMaxWidth || !_cWidth) {\n      continue;\n    }\n    if (isFluid) {\n      _cWidth = Math.round(_cWidth / 100 * screenMaxWidth);\n    }\n    const _cHeight = hwRatio ? Math.round(_cWidth * hwRatio) : height;\n    variants.push({\n      width: _cWidth,\n      size,\n      screenMaxWidth,\n      media: `(max-width: ${screenMaxWidth}px)`,\n      src: ctx.$img(input, { ...opts.modifiers, width: _cWidth, height: _cHeight }, opts)\n    });\n  }\n  variants.sort((v1, v2) => v1.screenMaxWidth - v2.screenMaxWidth);\n  const defaultVar = variants[variants.length - 1];\n  if (defaultVar) {\n    defaultVar.media = \"\";\n  }\n  return {\n    sizes: variants.map((v) => `${v.media ? v.media + \" \" : \"\"}${v.size}`).join(\", \"),\n    srcset: variants.map((v) => `${v.src} ${v.width}w`).join(\", \"),\n    src: defaultVar?.src\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACO,4BAAqB,eAAe,aAAa;AACtD,QAAM,sBAAsB,QAAQ,UAAU,QAAQ,SAAS,kBAAkB,WAAW,IAAI,CAAC;AACjG,QAAM,MAAM;AAAA,IACV,SAAS;AAAA,IACT;AAAA,EACF;AACA,QAAM,WAAW,SAAS,OAAO,UAAU,CAAC,GAAG;AAC7C,UAAM,QAAQ,aAAa,KAAK,OAAO,OAAO;AAC9C,QAAI,MAAM,UAAU;AAClB,wBAAkB,OAAO,KAAK;AAAA,IAChC;AACA,WAAO;AAAA,EACT;AACA,QAAM,OAAO,eAAe,OAAO,YAAY,CAAC,GAAG,UAAU,CAAC,GAAG;AAC/D,WAAO,SAAS,OAAO,iCAClB,UADkB;AAAA,MAErB,WAAW,KAAK,WAAW,QAAQ,aAAa,CAAC,CAAC;AAAA,IACpD,EAAC,EAAE;AAAA,EACL;AACA,6BAA2B,OAAO,OAAO;AAxB3C;AAyBI,QAAI,QAAQ,QAAQ;AAClB,UAAI,QAAQ,UAAU,kBAAkB,OAAO,OAAO;AACpD,cAAM,YAAY,oBAAoB,MAAM;AAC5C,cAAM,MAAM,aAAa;AACzB,eAAO;AAAA,MACT;AACA,UAAI,QAAQ,QAAQ;AAClB,cAAM,EAAE,eAAe,IAAI;AAC3B,YAAI,YAAY;AACd,gBAAM,WAAW,WAAW,QAAQ,CAAC;AACrC,gBAAM,eAAe,SAAS,OAAO,SAAS,QAAQ,CAAC;AACvD,gBAAM,UAAU,eAAS,SAAT,mBAAgB;AAChC,cAAI,SAAS;AACX,oBAAQ,OAAO;AAAA,UACjB;AACA,gBAAM,cAAc,iBAAW,UAAX,mBAAkB;AACtC,cAAI,OAAO,gBAAgB,YAAY;AACrC,kBAAM,YAAY,YAAY,OAAO,KAAK;AAC1C,gBAAI,WAAW;AACb,2BAAa,MAAM,OAAO;AAC1B,oBAAM,MAAM;AAAA,YACd;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF,WAAW,QAAQ,IAAI,aAAa,cAAc;AAChD,YAAM,MAAM;AAAA,IACd;AAAA,EACF;AACA,aAAW,cAAc,cAAc,SAAS;AAC9C,SAAK,cAAc,CAAC,QAAQ,WAAW,YAAY,KAAK,QAAQ,WAAW,kCAAK,cAAc,QAAQ,cAAgB,QAAS;AAAA,EACjI;AACA,OAAK,UAAU;AACf,OAAK,WAAW;AAChB,OAAK,UAAU,CAAC,OAAO,YAAY,QAAQ,KAAK,OAAO,OAAO;AAC9D,OAAK,WAAW,CAAC,OAAO,YAAY,SAAS,KAAK,OAAO,OAAO;AAChE,MAAI,OAAO;AACX,SAAO;AACT;AACA,uBAAuB,KAAK,OAAO,SAAS;AAC1C,QAAM,QAAQ,aAAa,KAAK,OAAO,mBAAK,QAAS;AACrD,MAAI,OAAO,MAAM,YAAY,YAAY;AACvC,WAAO,MAAM,MAAM,QAAQ;AAAA,EAC7B,OAAO;AACL,WAAO,MAAM,UAAU,KAAK,MAAM,GAAG;AAAA,EACvC;AACF;AACA,sBAAsB,KAAK,OAAO,SAAS;AAxE3C;AAyEE,MAAI,OAAO,UAAU,YAAY,UAAU,IAAI;AAC7C,UAAM,IAAI,UAAU,oCAAoC,OAAO,UAAU,KAAK,UAAU,KAAK,IAAI;AAAA,EACnG;AACA,MAAI,MAAM,WAAW,OAAO,GAAG;AAC7B,WAAO;AAAA,MACL,KAAK;AAAA,IACP;AAAA,EACF;AACA,QAAM,EAAE,UAAU,aAAa,YAAY,KAAK,QAAQ,YAAY,IAAI,QAAQ,QAAQ;AACxF,QAAM,SAAS,UAAU,KAAK,QAAQ,MAAM;AAC5C,UAAQ,YAAY,KAAK,IAAI,QAAQ,iBAAiB,KAAK;AAC3D,MAAI,CAAC,SAAS,eAAe;AAC3B,eAAW,QAAQ,IAAI,QAAQ,OAAO;AACpC,UAAI,MAAM,WAAW,IAAI,GAAG;AAC1B,gBAAQ,QAAQ,IAAI,QAAQ,MAAM,OAAO,MAAM,OAAO,KAAK,MAAM,CAAC;AAAA,MACpE;AAAA,IACF;AAAA,EACF;AACA,MAAI,SAAS,mBAAmB,YAAY,KAAK,GAAG;AAClD,UAAM,YAAY,SAAS,KAAK,EAAE;AAClC,QAAI,CAAC,IAAI,QAAQ,QAAQ,KAAK,CAAC,MAAM,MAAM,SAAS,GAAG;AACrD,aAAO;AAAA,QACL,KAAK;AAAA,MACP;AAAA,IACF;AAAA,EACF;AACA,QAAM,WAAW,KAAK,SAAS,QAAQ,QAAQ;AAC/C,WAAS,YAAY,mBAAK,SAAS;AACnC,QAAM,iBAAiB,SAAS,UAAU;AAC1C,MAAI,eAAS,cAAT,mBAAoB,OAAO;AAC7B,aAAS,UAAU,QAAQ,UAAU,SAAS,UAAU,KAAK;AAAA,EAC/D;AACA,MAAI,eAAS,cAAT,mBAAoB,QAAQ;AAC9B,aAAS,UAAU,SAAS,UAAU,SAAS,UAAU,MAAM;AAAA,EACjE;AACA,QAAM,QAAQ,SAAS,SAAS,OAAO,UAAU,GAAG;AACpD,QAAM,SAAS,MAAM,UAAU,kBAAkB;AACjD,SAAO;AACT;AACA,qBAAqB,KAAK,MAAM;AAC9B,QAAM,WAAW,IAAI,QAAQ,UAAU;AACvC,MAAI,CAAC,UAAU;AACb,UAAM,IAAI,MAAM,uBAAuB,IAAI;AAAA,EAC7C;AACA,SAAO;AACT;AACA,mBAAmB,KAAK,MAAM;AAC5B,MAAI,CAAC,MAAM;AACT,WAAO,CAAC;AAAA,EACV;AACA,MAAI,CAAC,IAAI,QAAQ,QAAQ,OAAO;AAC9B,UAAM,IAAI,MAAM,qBAAqB,IAAI;AAAA,EAC3C;AACA,SAAO,IAAI,QAAQ,QAAQ;AAC7B;AACA,kBAAkB,KAAK,OAAO,MAAM;AAhIpC;AAiIE,QAAM,QAAQ,UAAU,WAAK,cAAL,mBAAgB,KAAK;AAC7C,QAAM,SAAS,UAAU,WAAK,cAAL,mBAAgB,MAAM;AAC/C,QAAM,UAAU,SAAS,SAAS,SAAS,QAAQ;AACnD,QAAM,WAAW,CAAC;AAClB,QAAM,QAAQ,CAAC;AACf,MAAI,OAAO,KAAK,UAAU,UAAU;AAClC,eAAW,SAAS,KAAK,MAAM,MAAM,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,GAAG;AAC/D,YAAM,IAAI,MAAM,MAAM,GAAG;AACzB,UAAI,EAAE,WAAW,GAAG;AAClB;AAAA,MACF;AACA,YAAM,EAAE,GAAG,KAAK,KAAK,EAAE,GAAG,KAAK;AAAA,IACjC;AAAA,EACF,OAAO;AACL,WAAO,OAAO,OAAO,KAAK,KAAK;AAAA,EACjC;AACA,aAAW,OAAO,OAAO;AACvB,UAAM,iBAAiB,IAAI,QAAQ,WAAW,IAAI,QAAQ,QAAQ,QAAQ,SAAS,GAAG;AACtF,QAAI,OAAO,OAAO,MAAM,IAAI;AAC5B,UAAM,UAAU,KAAK,SAAS,IAAI;AAClC,QAAI,CAAC,WAAW,QAAQ,KAAK,IAAI,GAAG;AAClC,aAAO,OAAO;AAAA,IAChB;AACA,QAAI,CAAC,WAAW,CAAC,KAAK,SAAS,IAAI,GAAG;AACpC;AAAA,IACF;AACA,QAAI,UAAU,SAAS,IAAI;AAC3B,QAAI,CAAC,kBAAkB,CAAC,SAAS;AAC/B;AAAA,IACF;AACA,QAAI,SAAS;AACX,gBAAU,KAAK,MAAM,UAAU,MAAM,cAAc;AAAA,IACrD;AACA,UAAM,WAAW,UAAU,KAAK,MAAM,UAAU,OAAO,IAAI;AAC3D,aAAS,KAAK;AAAA,MACZ,OAAO;AAAA,MACP;AAAA,MACA;AAAA,MACA,OAAO,eAAe;AAAA,MACtB,KAAK,IAAI,KAAK,OAAO,iCAAK,KAAK,YAAV,EAAqB,OAAO,SAAS,QAAQ,SAAS,IAAG,IAAI;AAAA,IACpF,CAAC;AAAA,EACH;AACA,WAAS,KAAK,CAAC,IAAI,OAAO,GAAG,iBAAiB,GAAG,cAAc;AAC/D,QAAM,aAAa,SAAS,SAAS,SAAS;AAC9C,MAAI,YAAY;AACd,eAAW,QAAQ;AAAA,EACrB;AACA,SAAO;AAAA,IACL,OAAO,SAAS,IAAI,CAAC,MAAM,GAAG,EAAE,QAAQ,EAAE,QAAQ,MAAM,KAAK,EAAE,MAAM,EAAE,KAAK,IAAI;AAAA,IAChF,QAAQ,SAAS,IAAI,CAAC,MAAM,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,IAAI;AAAA,IAC7D,KAAK,yCAAY;AAAA,EACnB;AACF;","names":[]}]}